"use strict";(self.webpackChunkSimpleGymFront=self.webpackChunkSimpleGymFront||[]).push([[179],{677:()=>{function ye(n){return"function"==typeof n}function ks(n){const e=n(i=>{Error.call(i),i.stack=(new Error).stack});return e.prototype=Object.create(Error.prototype),e.prototype.constructor=e,e}const Fl=ks(n=>function(e){n(this),this.message=e?`${e.length} errors occurred during unsubscription:\n${e.map((i,r)=>`${r+1}) ${i.toString()}`).join("\n  ")}`:"",this.name="UnsubscriptionError",this.errors=e});function io(n,t){if(n){const e=n.indexOf(t);0<=e&&n.splice(e,1)}}class ke{constructor(t){this.initialTeardown=t,this.closed=!1,this._parentage=null,this._finalizers=null}unsubscribe(){let t;if(!this.closed){this.closed=!0;const{_parentage:e}=this;if(e)if(this._parentage=null,Array.isArray(e))for(const o of e)o.remove(this);else e.remove(this);const{initialTeardown:i}=this;if(ye(i))try{i()}catch(o){t=o instanceof Fl?o.errors:[o]}const{_finalizers:r}=this;if(r){this._finalizers=null;for(const o of r)try{ob(o)}catch(s){t=t??[],s instanceof Fl?t=[...t,...s.errors]:t.push(s)}}if(t)throw new Fl(t)}}add(t){var e;if(t&&t!==this)if(this.closed)ob(t);else{if(t instanceof ke){if(t.closed||t._hasParent(this))return;t._addParent(this)}(this._finalizers=null!==(e=this._finalizers)&&void 0!==e?e:[]).push(t)}}_hasParent(t){const{_parentage:e}=this;return e===t||Array.isArray(e)&&e.includes(t)}_addParent(t){const{_parentage:e}=this;this._parentage=Array.isArray(e)?(e.push(t),e):e?[e,t]:t}_removeParent(t){const{_parentage:e}=this;e===t?this._parentage=null:Array.isArray(e)&&io(e,t)}remove(t){const{_finalizers:e}=this;e&&io(e,t),t instanceof ke&&t._removeParent(this)}}ke.EMPTY=(()=>{const n=new ke;return n.closed=!0,n})();const ib=ke.EMPTY;function rb(n){return n instanceof ke||n&&"closed"in n&&ye(n.remove)&&ye(n.add)&&ye(n.unsubscribe)}function ob(n){ye(n)?n():n.unsubscribe()}const ur={onUnhandledError:null,onStoppedNotification:null,Promise:void 0,useDeprecatedSynchronousErrorHandling:!1,useDeprecatedNextContext:!1},Vl={setTimeout(n,t,...e){const{delegate:i}=Vl;return i?.setTimeout?i.setTimeout(n,t,...e):setTimeout(n,t,...e)},clearTimeout(n){const{delegate:t}=Vl;return(t?.clearTimeout||clearTimeout)(n)},delegate:void 0};function sb(n){Vl.setTimeout(()=>{const{onUnhandledError:t}=ur;if(!t)throw n;t(n)})}function xs(){}const qI=Nu("C",void 0,void 0);function Nu(n,t,e){return{kind:n,value:t,error:e}}let hr=null;function Ul(n){if(ur.useDeprecatedSynchronousErrorHandling){const t=!hr;if(t&&(hr={errorThrown:!1,error:null}),n(),t){const{errorThrown:e,error:i}=hr;if(hr=null,e)throw i}}else n()}class Pu extends ke{constructor(t){super(),this.isStopped=!1,t?(this.destination=t,rb(t)&&t.add(this)):this.destination=GI}static create(t,e,i){return new Ds(t,e,i)}next(t){this.isStopped?Bu(function HI(n){return Nu("N",n,void 0)}(t),this):this._next(t)}error(t){this.isStopped?Bu(function KI(n){return Nu("E",void 0,n)}(t),this):(this.isStopped=!0,this._error(t))}complete(){this.isStopped?Bu(qI,this):(this.isStopped=!0,this._complete())}unsubscribe(){this.closed||(this.isStopped=!0,super.unsubscribe(),this.destination=null)}_next(t){this.destination.next(t)}_error(t){try{this.destination.error(t)}finally{this.unsubscribe()}}_complete(){try{this.destination.complete()}finally{this.unsubscribe()}}}const JI=Function.prototype.bind;function _u(n,t){return JI.call(n,t)}class WI{constructor(t){this.partialObserver=t}next(t){const{partialObserver:e}=this;if(e.next)try{e.next(t)}catch(i){Nl(i)}}error(t){const{partialObserver:e}=this;if(e.error)try{e.error(t)}catch(i){Nl(i)}else Nl(t)}complete(){const{partialObserver:t}=this;if(t.complete)try{t.complete()}catch(e){Nl(e)}}}class Ds extends Pu{constructor(t,e,i){let r;if(super(),ye(t)||!t)r={next:t??void 0,error:e??void 0,complete:i??void 0};else{let o;this&&ur.useDeprecatedNextContext?(o=Object.create(t),o.unsubscribe=()=>this.unsubscribe(),r={next:t.next&&_u(t.next,o),error:t.error&&_u(t.error,o),complete:t.complete&&_u(t.complete,o)}):r=t}this.destination=new WI(r)}}function Nl(n){ur.useDeprecatedSynchronousErrorHandling?function LI(n){ur.useDeprecatedSynchronousErrorHandling&&hr&&(hr.errorThrown=!0,hr.error=n)}(n):sb(n)}function Bu(n,t){const{onStoppedNotification:e}=ur;e&&Vl.setTimeout(()=>e(n,t))}const GI={closed:!0,next:xs,error:function QI(n){throw n},complete:xs},ju="function"==typeof Symbol&&Symbol.observable||"@@observable";function Bi(n){return n}function ab(n){return 0===n.length?Bi:1===n.length?n[0]:function(e){return n.reduce((i,r)=>r(i),e)}}let Me=(()=>{class n{constructor(e){e&&(this._subscribe=e)}lift(e){const i=new n;return i.source=this,i.operator=e,i}subscribe(e,i,r){const o=function XI(n){return n&&n instanceof Pu||function YI(n){return n&&ye(n.next)&&ye(n.error)&&ye(n.complete)}(n)&&rb(n)}(e)?e:new Ds(e,i,r);return Ul(()=>{const{operator:s,source:a}=this;o.add(s?s.call(o,a):a?this._subscribe(o):this._trySubscribe(o))}),o}_trySubscribe(e){try{return this._subscribe(e)}catch(i){e.error(i)}}forEach(e,i){return new(i=lb(i))((r,o)=>{const s=new Ds({next:a=>{try{e(a)}catch(l){o(l),s.unsubscribe()}},error:o,complete:r});this.subscribe(s)})}_subscribe(e){var i;return null===(i=this.source)||void 0===i?void 0:i.subscribe(e)}[ju](){return this}pipe(...e){return ab(e)(this)}toPromise(e){return new(e=lb(e))((i,r)=>{let o;this.subscribe(s=>o=s,s=>r(s),()=>i(o))})}}return n.create=t=>new n(t),n})();function lb(n){var t;return null!==(t=n??ur.Promise)&&void 0!==t?t:Promise}const ZI=ks(n=>function(){n(this),this.name="ObjectUnsubscribedError",this.message="object unsubscribed"});let P=(()=>{class n extends Me{constructor(){super(),this.closed=!1,this.currentObservers=null,this.observers=[],this.isStopped=!1,this.hasError=!1,this.thrownError=null}lift(e){const i=new cb(this,this);return i.operator=e,i}_throwIfClosed(){if(this.closed)throw new ZI}next(e){Ul(()=>{if(this._throwIfClosed(),!this.isStopped){this.currentObservers||(this.currentObservers=Array.from(this.observers));for(const i of this.currentObservers)i.next(e)}})}error(e){Ul(()=>{if(this._throwIfClosed(),!this.isStopped){this.hasError=this.isStopped=!0,this.thrownError=e;const{observers:i}=this;for(;i.length;)i.shift().error(e)}})}complete(){Ul(()=>{if(this._throwIfClosed(),!this.isStopped){this.isStopped=!0;const{observers:e}=this;for(;e.length;)e.shift().complete()}})}unsubscribe(){this.isStopped=this.closed=!0,this.observers=this.currentObservers=null}get observed(){var e;return(null===(e=this.observers)||void 0===e?void 0:e.length)>0}_trySubscribe(e){return this._throwIfClosed(),super._trySubscribe(e)}_subscribe(e){return this._throwIfClosed(),this._checkFinalizedStatuses(e),this._innerSubscribe(e)}_innerSubscribe(e){const{hasError:i,isStopped:r,observers:o}=this;return i||r?ib:(this.currentObservers=null,o.push(e),new ke(()=>{this.currentObservers=null,io(o,e)}))}_checkFinalizedStatuses(e){const{hasError:i,thrownError:r,isStopped:o}=this;i?e.error(r):o&&e.complete()}asObservable(){const e=new Me;return e.source=this,e}}return n.create=(t,e)=>new cb(t,e),n})();class cb extends P{constructor(t,e){super(),this.destination=t,this.source=e}next(t){var e,i;null===(i=null===(e=this.destination)||void 0===e?void 0:e.next)||void 0===i||i.call(e,t)}error(t){var e,i;null===(i=null===(e=this.destination)||void 0===e?void 0:e.error)||void 0===i||i.call(e,t)}complete(){var t,e;null===(e=null===(t=this.destination)||void 0===t?void 0:t.complete)||void 0===e||e.call(t)}_subscribe(t){var e,i;return null!==(i=null===(e=this.source)||void 0===e?void 0:e.subscribe(t))&&void 0!==i?i:ib}}function db(n){return ye(n?.lift)}function Le(n){return t=>{if(db(t))return t.lift(function(e){try{return n(e,this)}catch(i){this.error(i)}});throw new TypeError("Unable to lift unknown Observable type")}}function Ke(n,t,e,i,r){return new $I(n,t,e,i,r)}class $I extends Pu{constructor(t,e,i,r,o,s){super(t),this.onFinalize=o,this.shouldUnsubscribe=s,this._next=e?function(a){try{e(a)}catch(l){t.error(l)}}:super._next,this._error=r?function(a){try{r(a)}catch(l){t.error(l)}finally{this.unsubscribe()}}:super._error,this._complete=i?function(){try{i()}catch(a){t.error(a)}finally{this.unsubscribe()}}:super._complete}unsubscribe(){var t;if(!this.shouldUnsubscribe||this.shouldUnsubscribe()){const{closed:e}=this;super.unsubscribe(),!e&&(null===(t=this.onFinalize)||void 0===t||t.call(this))}}}function B(n,t){return Le((e,i)=>{let r=0;e.subscribe(Ke(i,o=>{i.next(n.call(t,o,r++))}))})}function pr(n){return this instanceof pr?(this.v=n,this):new pr(n)}function n1(n,t,e){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var r,i=e.apply(n,t||[]),o=[];return r={},s("next"),s("throw"),s("return"),r[Symbol.asyncIterator]=function(){return this},r;function s(h){i[h]&&(r[h]=function(f){return new Promise(function(m,g){o.push([h,f,m,g])>1||a(h,f)})})}function a(h,f){try{!function l(h){h.value instanceof pr?Promise.resolve(h.value.v).then(c,d):u(o[0][2],h)}(i[h](f))}catch(m){u(o[0][3],m)}}function c(h){a("next",h)}function d(h){a("throw",h)}function u(h,f){h(f),o.shift(),o.length&&a(o[0][0],o[0][1])}}function r1(n){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var e,t=n[Symbol.asyncIterator];return t?t.call(n):(n=function pb(n){var t="function"==typeof Symbol&&Symbol.iterator,e=t&&n[t],i=0;if(e)return e.call(n);if(n&&"number"==typeof n.length)return{next:function(){return n&&i>=n.length&&(n=void 0),{value:n&&n[i++],done:!n}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")}(n),e={},i("next"),i("throw"),i("return"),e[Symbol.asyncIterator]=function(){return this},e);function i(o){e[o]=n[o]&&function(s){return new Promise(function(a,l){!function r(o,s,a,l){Promise.resolve(l).then(function(c){o({value:c,done:a})},s)}(a,l,(s=n[o](s)).done,s.value)})}}}const Ku=n=>n&&"number"==typeof n.length&&"function"!=typeof n;function fb(n){return ye(n?.then)}function mb(n){return ye(n[ju])}function gb(n){return Symbol.asyncIterator&&ye(n?.[Symbol.asyncIterator])}function bb(n){return new TypeError(`You provided ${null!==n&&"object"==typeof n?"an invalid object":`'${n}'`} where a stream was expected. You can provide an Observable, Promise, ReadableStream, Array, AsyncIterable, or Iterable.`)}const yb=function s1(){return"function"==typeof Symbol&&Symbol.iterator?Symbol.iterator:"@@iterator"}();function vb(n){return ye(n?.[yb])}function Ab(n){return n1(this,arguments,function*(){const e=n.getReader();try{for(;;){const{value:i,done:r}=yield pr(e.read());if(r)return yield pr(void 0);yield yield pr(i)}}finally{e.releaseLock()}})}function Sb(n){return ye(n?.getReader)}function Vt(n){if(n instanceof Me)return n;if(null!=n){if(mb(n))return function a1(n){return new Me(t=>{const e=n[ju]();if(ye(e.subscribe))return e.subscribe(t);throw new TypeError("Provided object does not correctly implement Symbol.observable")})}(n);if(Ku(n))return function l1(n){return new Me(t=>{for(let e=0;e<n.length&&!t.closed;e++)t.next(n[e]);t.complete()})}(n);if(fb(n))return function c1(n){return new Me(t=>{n.then(e=>{t.closed||(t.next(e),t.complete())},e=>t.error(e)).then(null,sb)})}(n);if(gb(n))return Cb(n);if(vb(n))return function d1(n){return new Me(t=>{for(const e of n)if(t.next(e),t.closed)return;t.complete()})}(n);if(Sb(n))return function u1(n){return Cb(Ab(n))}(n)}throw bb(n)}function Cb(n){return new Me(t=>{(function h1(n,t){var e,i,r,o;return function e1(n,t,e,i){return new(e||(e=Promise))(function(o,s){function a(d){try{c(i.next(d))}catch(u){s(u)}}function l(d){try{c(i.throw(d))}catch(u){s(u)}}function c(d){d.done?o(d.value):function r(o){return o instanceof e?o:new e(function(s){s(o)})}(d.value).then(a,l)}c((i=i.apply(n,t||[])).next())})}(this,void 0,void 0,function*(){try{for(e=r1(n);!(i=yield e.next()).done;)if(t.next(i.value),t.closed)return}catch(s){r={error:s}}finally{try{i&&!i.done&&(o=e.return)&&(yield o.call(e))}finally{if(r)throw r.error}}t.complete()})})(n,t).catch(e=>t.error(e))})}function di(n,t,e,i=0,r=!1){const o=t.schedule(function(){e(),r?n.add(this.schedule(null,i)):this.unsubscribe()},i);if(n.add(o),!r)return o}function lt(n,t,e=1/0){return ye(t)?lt((i,r)=>B((o,s)=>t(i,o,r,s))(Vt(n(i,r))),e):("number"==typeof t&&(e=t),Le((i,r)=>function p1(n,t,e,i,r,o,s,a){const l=[];let c=0,d=0,u=!1;const h=()=>{u&&!l.length&&!c&&t.complete()},f=g=>c<i?m(g):l.push(g),m=g=>{o&&t.next(g),c++;let A=!1;Vt(e(g,d++)).subscribe(Ke(t,k=>{r?.(k),o?f(k):t.next(k)},()=>{A=!0},void 0,()=>{if(A)try{for(c--;l.length&&c<i;){const k=l.shift();s?di(t,s,()=>m(k)):m(k)}h()}catch(k){t.error(k)}}))};return n.subscribe(Ke(t,f,()=>{u=!0,h()})),()=>{a?.()}}(i,r,n,e)))}function ro(n=1/0){return lt(Bi,n)}const Mn=new Me(n=>n.complete());function kb(n){return n&&ye(n.schedule)}function Hu(n){return n[n.length-1]}function xb(n){return ye(Hu(n))?n.pop():void 0}function ws(n){return kb(Hu(n))?n.pop():void 0}function Db(n,t=0){return Le((e,i)=>{e.subscribe(Ke(i,r=>di(i,n,()=>i.next(r),t),()=>di(i,n,()=>i.complete(),t),r=>di(i,n,()=>i.error(r),t)))})}function wb(n,t=0){return Le((e,i)=>{i.add(n.schedule(()=>e.subscribe(i),t))})}function Eb(n,t){if(!n)throw new Error("Iterable cannot be null");return new Me(e=>{di(e,t,()=>{const i=n[Symbol.asyncIterator]();di(e,t,()=>{i.next().then(r=>{r.done?e.complete():e.next(r.value)})},0,!0)})})}function it(n,t){return t?function S1(n,t){if(null!=n){if(mb(n))return function g1(n,t){return Vt(n).pipe(wb(t),Db(t))}(n,t);if(Ku(n))return function y1(n,t){return new Me(e=>{let i=0;return t.schedule(function(){i===n.length?e.complete():(e.next(n[i++]),e.closed||this.schedule())})})}(n,t);if(fb(n))return function b1(n,t){return Vt(n).pipe(wb(t),Db(t))}(n,t);if(gb(n))return Eb(n,t);if(vb(n))return function v1(n,t){return new Me(e=>{let i;return di(e,t,()=>{i=n[yb](),di(e,t,()=>{let r,o;try{({value:r,done:o}=i.next())}catch(s){return void e.error(s)}o?e.complete():e.next(r)},0,!0)}),()=>ye(i?.return)&&i.return()})}(n,t);if(Sb(n))return function A1(n,t){return Eb(Ab(n),t)}(n,t)}throw bb(n)}(n,t):Vt(n)}function $t(...n){const t=ws(n),e=function m1(n,t){return"number"==typeof Hu(n)?n.pop():t}(n,1/0),i=n;return i.length?1===i.length?Vt(i[0]):ro(e)(it(i,t)):Mn}function Ib(n={}){const{connector:t=(()=>new P),resetOnError:e=!0,resetOnComplete:i=!0,resetOnRefCountZero:r=!0}=n;return o=>{let s,a,l,c=0,d=!1,u=!1;const h=()=>{a?.unsubscribe(),a=void 0},f=()=>{h(),s=l=void 0,d=u=!1},m=()=>{const g=s;f(),g?.unsubscribe()};return Le((g,A)=>{c++,!u&&!d&&h();const k=l=l??t();A.add(()=>{c--,0===c&&!u&&!d&&(a=Lu(m,r))}),k.subscribe(A),!s&&c>0&&(s=new Ds({next:T=>k.next(T),error:T=>{u=!0,h(),a=Lu(f,e,T),k.error(T)},complete:()=>{d=!0,h(),a=Lu(f,i),k.complete()}}),Vt(g).subscribe(s))})(o)}}function Lu(n,t,...e){if(!0===t)return void n();if(!1===t)return;const i=new Ds({next:()=>{i.unsubscribe(),n()}});return t(...e).subscribe(i)}function Pe(n){for(let t in n)if(n[t]===Pe)return t;throw Error("Could not find renamed property on target object.")}function Ju(n,t){for(const e in t)t.hasOwnProperty(e)&&!n.hasOwnProperty(e)&&(n[e]=t[e])}function _e(n){if("string"==typeof n)return n;if(Array.isArray(n))return"["+n.map(_e).join(", ")+"]";if(null==n)return""+n;if(n.overriddenName)return`${n.overriddenName}`;if(n.name)return`${n.name}`;const t=n.toString();if(null==t)return""+t;const e=t.indexOf("\n");return-1===e?t:t.substring(0,e)}function Wu(n,t){return null==n||""===n?null===t?"":t:null==t||""===t?n:n+" "+t}const C1=Pe({__forward_ref__:Pe});function De(n){return n.__forward_ref__=De,n.toString=function(){return _e(this())},n}function Q(n){return Qu(n)?n():n}function Qu(n){return"function"==typeof n&&n.hasOwnProperty(C1)&&n.__forward_ref__===De}function Gu(n){return n&&!!n.\u0275providers}const Pl="https://g.co/ng/security#xss";class C extends Error{constructor(t,e){super(function _l(n,t){return`NG0${Math.abs(n)}${t?": "+t.trim():""}`}(t,e)),this.code=t}}function $(n){return"string"==typeof n?n:null==n?"":String(n)}function Bl(n,t){throw new C(-201,!1)}function fn(n,t){null==n&&function Fe(n,t,e,i){throw new Error(`ASSERTION ERROR: ${n}`+(null==i?"":` [Expected=> ${e} ${i} ${t} <=Actual]`))}(t,n,null,"!=")}function R(n){return{token:n.token,providedIn:n.providedIn||null,factory:n.factory,value:void 0}}function ce(n){return{providers:n.providers||[],imports:n.imports||[]}}function jl(n){return Rb(n,ql)||Rb(n,Mb)}function Rb(n,t){return n.hasOwnProperty(t)?n[t]:null}function Tb(n){return n&&(n.hasOwnProperty(zu)||n.hasOwnProperty(M1))?n[zu]:null}const ql=Pe({\u0275prov:Pe}),zu=Pe({\u0275inj:Pe}),Mb=Pe({ngInjectableDef:Pe}),M1=Pe({ngInjectorDef:Pe});var G=(()=>((G=G||{})[G.Default=0]="Default",G[G.Host=1]="Host",G[G.Self=2]="Self",G[G.SkipSelf=4]="SkipSelf",G[G.Optional=8]="Optional",G))();let Yu;function mn(n){const t=Yu;return Yu=n,t}function Ob(n,t,e){const i=jl(n);return i&&"root"==i.providedIn?void 0===i.value?i.value=i.factory():i.value:e&G.Optional?null:void 0!==t?t:void Bl(_e(n))}const Be=(()=>typeof globalThis<"u"&&globalThis||typeof global<"u"&&global||typeof window<"u"&&window||typeof self<"u"&&typeof WorkerGlobalScope<"u"&&self instanceof WorkerGlobalScope&&self)(),Es={},Xu="__NG_DI_FLAG__",Kl="ngTempTokenPath",V1=/\n/gm,Fb="__source";let Is;function oo(n){const t=Is;return Is=n,t}function N1(n,t=G.Default){if(void 0===Is)throw new C(-203,!1);return null===Is?Ob(n,void 0,t):Is.get(n,t&G.Optional?null:void 0,t)}function v(n,t=G.Default){return(function O1(){return Yu}()||N1)(Q(n),t)}function ie(n,t=G.Default){return v(n,Hl(t))}function Hl(n){return typeof n>"u"||"number"==typeof n?n:0|(n.optional&&8)|(n.host&&1)|(n.self&&2)|(n.skipSelf&&4)}function Zu(n){const t=[];for(let e=0;e<n.length;e++){const i=Q(n[e]);if(Array.isArray(i)){if(0===i.length)throw new C(900,!1);let r,o=G.Default;for(let s=0;s<i.length;s++){const a=i[s],l=P1(a);"number"==typeof l?-1===l?r=a.token:o|=l:r=a}t.push(v(r,o))}else t.push(v(i))}return t}function Rs(n,t){return n[Xu]=t,n.prototype[Xu]=t,n}function P1(n){return n[Xu]}function qi(n){return{toString:n}.toString()}var On=(()=>((On=On||{})[On.OnPush=0]="OnPush",On[On.Default=1]="Default",On))(),Fn=(()=>{return(n=Fn||(Fn={}))[n.Emulated=0]="Emulated",n[n.None=2]="None",n[n.ShadowDom=3]="ShadowDom",Fn;var n})();const ui={},we=[],Ll=Pe({\u0275cmp:Pe}),$u=Pe({\u0275dir:Pe}),eh=Pe({\u0275pipe:Pe}),Ub=Pe({\u0275mod:Pe}),hi=Pe({\u0275fac:Pe}),Ts=Pe({__NG_ELEMENT_ID__:Pe});let j1=0;function ee(n){return qi(()=>{const e=!0===n.standalone,i={},r={type:n.type,providersResolver:null,decls:n.decls,vars:n.vars,factory:null,template:n.template||null,consts:n.consts||null,ngContentSelectors:n.ngContentSelectors,hostBindings:n.hostBindings||null,hostVars:n.hostVars||0,hostAttrs:n.hostAttrs||null,contentQueries:n.contentQueries||null,declaredInputs:i,inputs:null,outputs:null,exportAs:n.exportAs||null,onPush:n.changeDetection===On.OnPush,directiveDefs:null,pipeDefs:null,standalone:e,dependencies:e&&n.dependencies||null,getStandaloneInjector:null,selectors:n.selectors||we,viewQuery:n.viewQuery||null,features:n.features||null,data:n.data||{},encapsulation:n.encapsulation||Fn.Emulated,id:"c"+j1++,styles:n.styles||we,_:null,setInput:null,schemas:n.schemas||null,tView:null,findHostDirectiveDefs:null,hostDirectives:null},o=n.dependencies,s=n.features;return r.inputs=_b(n.inputs,i),r.outputs=_b(n.outputs),s&&s.forEach(a=>a(r)),r.directiveDefs=o?()=>("function"==typeof o?o():o).map(Nb).filter(Pb):null,r.pipeDefs=o?()=>("function"==typeof o?o():o).map(Ut).filter(Pb):null,r})}function Nb(n){return Ve(n)||Dt(n)}function Pb(n){return null!==n}function he(n){return qi(()=>({type:n.type,bootstrap:n.bootstrap||we,declarations:n.declarations||we,imports:n.imports||we,exports:n.exports||we,transitiveCompileScopes:null,schemas:n.schemas||null,id:n.id||null}))}function _b(n,t){if(null==n)return ui;const e={};for(const i in n)if(n.hasOwnProperty(i)){let r=n[i],o=r;Array.isArray(r)&&(o=r[1],r=r[0]),e[r]=i,t&&(t[r]=o)}return e}const M=ee;function Ve(n){return n[Ll]||null}function Dt(n){return n[$u]||null}function Ut(n){return n[eh]||null}function tn(n,t){const e=n[Ub]||null;if(!e&&!0===t)throw new Error(`Type ${_e(n)} does not have '\u0275mod' property.`);return e}function nn(n){return Array.isArray(n)&&"object"==typeof n[1]}function Un(n){return Array.isArray(n)&&!0===n[1]}function ih(n){return 0!=(4&n.flags)}function Vs(n){return n.componentOffset>-1}function zl(n){return 1==(1&n.flags)}function Nn(n){return null!==n.template}function H1(n){return 0!=(256&n[2])}function mr(n,t){return n.hasOwnProperty(hi)?n[hi]:null}class W1{constructor(t,e,i){this.previousValue=t,this.currentValue=e,this.firstChange=i}isFirstChange(){return this.firstChange}}function ze(){return Lb}function Lb(n){return n.type.prototype.ngOnChanges&&(n.setInput=G1),Q1}function Q1(){const n=Wb(this),t=n?.current;if(t){const e=n.previous;if(e===ui)n.previous=t;else for(let i in t)e[i]=t[i];n.current=null,this.ngOnChanges(t)}}function G1(n,t,e,i){const r=this.declaredInputs[e],o=Wb(n)||function z1(n,t){return n[Jb]=t}(n,{previous:ui,current:null}),s=o.current||(o.current={}),a=o.previous,l=a[r];s[r]=new W1(l&&l.currentValue,t,a===ui),n[i]=t}ze.ngInherit=!0;const Jb="__ngSimpleChanges__";function Wb(n){return n[Jb]||null}function yt(n){for(;Array.isArray(n);)n=n[0];return n}function Yl(n,t){return yt(t[n])}function rn(n,t){return yt(t[n.index])}function zb(n,t){return n.data[t]}function on(n,t){const e=t[n];return nn(e)?e:e[0]}function Xl(n){return 64==(64&n[2])}function Ki(n,t){return null==t?null:n[t]}function Yb(n){n[18]=0}function oh(n,t){n[5]+=t;let e=n,i=n[3];for(;null!==i&&(1===t&&1===e[5]||-1===t&&0===e[5]);)i[5]+=t,e=i,i=i[3]}const te={lFrame:sy(null),bindingsEnabled:!0};function Zb(){return te.bindingsEnabled}function x(){return te.lFrame.lView}function Ae(){return te.lFrame.tView}function ct(n){return te.lFrame.contextLView=n,n[8]}function dt(n){return te.lFrame.contextLView=null,n}function vt(){let n=$b();for(;null!==n&&64===n.type;)n=n.parent;return n}function $b(){return te.lFrame.currentTNode}function Wn(n,t){const e=te.lFrame;e.currentTNode=n,e.isParent=t}function sh(){return te.lFrame.isParent}function ah(){te.lFrame.isParent=!1}function Pt(){const n=te.lFrame;let t=n.bindingRootIndex;return-1===t&&(t=n.bindingRootIndex=n.tView.bindingStartIndex),t}function po(){return te.lFrame.bindingIndex++}function mi(n){const t=te.lFrame,e=t.bindingIndex;return t.bindingIndex=t.bindingIndex+n,e}function lR(n,t){const e=te.lFrame;e.bindingIndex=e.bindingRootIndex=n,lh(t)}function lh(n){te.lFrame.currentDirectiveIndex=n}function ch(n){const t=te.lFrame.currentDirectiveIndex;return-1===t?null:n[t]}function iy(){return te.lFrame.currentQueryIndex}function dh(n){te.lFrame.currentQueryIndex=n}function dR(n){const t=n[1];return 2===t.type?t.declTNode:1===t.type?n[6]:null}function ry(n,t,e){if(e&G.SkipSelf){let r=t,o=n;for(;!(r=r.parent,null!==r||e&G.Host||(r=dR(o),null===r||(o=o[15],10&r.type))););if(null===r)return!1;t=r,n=o}const i=te.lFrame=oy();return i.currentTNode=t,i.lView=n,!0}function uh(n){const t=oy(),e=n[1];te.lFrame=t,t.currentTNode=e.firstChild,t.lView=n,t.tView=e,t.contextLView=n,t.bindingIndex=e.bindingStartIndex,t.inI18n=!1}function oy(){const n=te.lFrame,t=null===n?null:n.child;return null===t?sy(n):t}function sy(n){const t={currentTNode:null,isParent:!0,lView:null,tView:null,selectedIndex:-1,contextLView:null,elementDepthCount:0,currentNamespace:null,currentDirectiveIndex:-1,bindingRootIndex:-1,bindingIndex:-1,currentQueryIndex:0,parent:n,child:null,inI18n:!1};return null!==n&&(n.child=t),t}function ay(){const n=te.lFrame;return te.lFrame=n.parent,n.currentTNode=null,n.lView=null,n}const ly=ay;function hh(){const n=ay();n.isParent=!0,n.tView=null,n.selectedIndex=-1,n.contextLView=null,n.elementDepthCount=0,n.currentDirectiveIndex=-1,n.currentNamespace=null,n.bindingRootIndex=-1,n.bindingIndex=-1,n.currentQueryIndex=0}function _t(){return te.lFrame.selectedIndex}function gr(n){te.lFrame.selectedIndex=n}function Je(){const n=te.lFrame;return zb(n.tView,n.selectedIndex)}function Ns(){te.lFrame.currentNamespace="svg"}function ph(){!function fR(){te.lFrame.currentNamespace=null}()}function Zl(n,t){for(let e=t.directiveStart,i=t.directiveEnd;e<i;e++){const o=n.data[e].type.prototype,{ngAfterContentInit:s,ngAfterContentChecked:a,ngAfterViewInit:l,ngAfterViewChecked:c,ngOnDestroy:d}=o;s&&(n.contentHooks||(n.contentHooks=[])).push(-e,s),a&&((n.contentHooks||(n.contentHooks=[])).push(e,a),(n.contentCheckHooks||(n.contentCheckHooks=[])).push(e,a)),l&&(n.viewHooks||(n.viewHooks=[])).push(-e,l),c&&((n.viewHooks||(n.viewHooks=[])).push(e,c),(n.viewCheckHooks||(n.viewCheckHooks=[])).push(e,c)),null!=d&&(n.destroyHooks||(n.destroyHooks=[])).push(e,d)}}function $l(n,t,e){cy(n,t,3,e)}function ec(n,t,e,i){(3&n[2])===e&&cy(n,t,e,i)}function fh(n,t){let e=n[2];(3&e)===t&&(e&=2047,e+=1,n[2]=e)}function cy(n,t,e,i){const o=i??-1,s=t.length-1;let a=0;for(let l=void 0!==i?65535&n[18]:0;l<s;l++)if("number"==typeof t[l+1]){if(a=t[l],null!=i&&a>=i)break}else t[l]<0&&(n[18]+=65536),(a<o||-1==o)&&(bR(n,e,t,l),n[18]=(4294901760&n[18])+l+2),l++}function bR(n,t,e,i){const r=e[i]<0,o=e[i+1],a=n[r?-e[i]:e[i]];if(r){if(n[2]>>11<n[18]>>16&&(3&n[2])===t){n[2]+=2048;try{o.call(a)}finally{}}}else try{o.call(a)}finally{}}class Ps{constructor(t,e,i){this.factory=t,this.resolving=!1,this.canSeeViewProviders=e,this.injectImpl=i}}function gh(n,t,e){let i=0;for(;i<e.length;){const r=e[i];if("number"==typeof r){if(0!==r)break;i++;const o=e[i++],s=e[i++],a=e[i++];n.setAttribute(t,s,a,o)}else{const o=r,s=e[++i];uy(o)?n.setProperty(t,o,s):n.setAttribute(t,o,s),i++}}return i}function dy(n){return 3===n||4===n||6===n}function uy(n){return 64===n.charCodeAt(0)}function _s(n,t){if(null!==t&&0!==t.length)if(null===n||0===n.length)n=t.slice();else{let e=-1;for(let i=0;i<t.length;i++){const r=t[i];"number"==typeof r?e=r:0===e||hy(n,e,r,null,-1===e||2===e?t[++i]:null)}}return n}function hy(n,t,e,i,r){let o=0,s=n.length;if(-1===t)s=-1;else for(;o<n.length;){const a=n[o++];if("number"==typeof a){if(a===t){s=-1;break}if(a>t){s=o-1;break}}}for(;o<n.length;){const a=n[o];if("number"==typeof a)break;if(a===e){if(null===i)return void(null!==r&&(n[o+1]=r));if(i===n[o+1])return void(n[o+2]=r)}o++,null!==i&&o++,null!==r&&o++}-1!==s&&(n.splice(s,0,t),o=s+1),n.splice(o++,0,e),null!==i&&n.splice(o++,0,i),null!==r&&n.splice(o++,0,r)}function py(n){return-1!==n}function tc(n){return 32767&n}function nc(n,t){let e=function SR(n){return n>>16}(n),i=t;for(;e>0;)i=i[15],e--;return i}let bh=!0;function ic(n){const t=bh;return bh=n,t}let CR=0;const Qn={};function rc(n,t){const e=gy(n,t);if(-1!==e)return e;const i=t[1];i.firstCreatePass&&(n.injectorIndex=t.length,yh(i.data,n),yh(t,null),yh(i.blueprint,null));const r=vh(n,t),o=n.injectorIndex;if(py(r)){const s=tc(r),a=nc(r,t),l=a[1].data;for(let c=0;c<8;c++)t[o+c]=a[s+c]|l[s+c]}return t[o+8]=r,o}function yh(n,t){n.push(0,0,0,0,0,0,0,0,t)}function gy(n,t){return-1===n.injectorIndex||n.parent&&n.parent.injectorIndex===n.injectorIndex||null===t[n.injectorIndex+8]?-1:n.injectorIndex}function vh(n,t){if(n.parent&&-1!==n.parent.injectorIndex)return n.parent.injectorIndex;let e=0,i=null,r=t;for(;null!==r;){if(i=ky(r),null===i)return-1;if(e++,r=r[15],-1!==i.injectorIndex)return i.injectorIndex|e<<16}return-1}function Ah(n,t,e){!function kR(n,t,e){let i;"string"==typeof e?i=e.charCodeAt(0)||0:e.hasOwnProperty(Ts)&&(i=e[Ts]),null==i&&(i=e[Ts]=CR++);const r=255&i;t.data[n+(r>>5)]|=1<<r}(n,t,e)}function by(n,t,e){if(e&G.Optional||void 0!==n)return n;Bl()}function yy(n,t,e,i){if(e&G.Optional&&void 0===i&&(i=null),!(e&(G.Self|G.Host))){const r=n[9],o=mn(void 0);try{return r?r.get(t,i,e&G.Optional):Ob(t,i,e&G.Optional)}finally{mn(o)}}return by(i,0,e)}function vy(n,t,e,i=G.Default,r){if(null!==n){if(1024&t[2]){const s=function IR(n,t,e,i,r){let o=n,s=t;for(;null!==o&&null!==s&&1024&s[2]&&!(256&s[2]);){const a=Ay(o,s,e,i|G.Self,Qn);if(a!==Qn)return a;let l=o.parent;if(!l){const c=s[21];if(c){const d=c.get(e,Qn,i);if(d!==Qn)return d}l=ky(s),s=s[15]}o=l}return r}(n,t,e,i,Qn);if(s!==Qn)return s}const o=Ay(n,t,e,i,Qn);if(o!==Qn)return o}return yy(t,e,i,r)}function Ay(n,t,e,i,r){const o=function wR(n){if("string"==typeof n)return n.charCodeAt(0)||0;const t=n.hasOwnProperty(Ts)?n[Ts]:void 0;return"number"==typeof t?t>=0?255&t:ER:t}(e);if("function"==typeof o){if(!ry(t,n,i))return i&G.Host?by(r,0,i):yy(t,e,i,r);try{const s=o(i);if(null!=s||i&G.Optional)return s;Bl()}finally{ly()}}else if("number"==typeof o){let s=null,a=gy(n,t),l=-1,c=i&G.Host?t[16][6]:null;for((-1===a||i&G.SkipSelf)&&(l=-1===a?vh(n,t):t[a+8],-1!==l&&Cy(i,!1)?(s=t[1],a=tc(l),t=nc(l,t)):a=-1);-1!==a;){const d=t[1];if(Sy(o,a,d.data)){const u=DR(a,t,e,s,i,c);if(u!==Qn)return u}l=t[a+8],-1!==l&&Cy(i,t[1].data[a+8]===c)&&Sy(o,a,t)?(s=d,a=tc(l),t=nc(l,t)):a=-1}}return r}function DR(n,t,e,i,r,o){const s=t[1],a=s.data[n+8],d=oc(a,s,e,null==i?Vs(a)&&bh:i!=s&&0!=(3&a.type),r&G.Host&&o===a);return null!==d?br(t,s,d,a):Qn}function oc(n,t,e,i,r){const o=n.providerIndexes,s=t.data,a=1048575&o,l=n.directiveStart,d=o>>20,h=r?a+d:n.directiveEnd;for(let f=i?a:a+d;f<h;f++){const m=s[f];if(f<l&&e===m||f>=l&&m.type===e)return f}if(r){const f=s[l];if(f&&Nn(f)&&f.type===e)return l}return null}function br(n,t,e,i){let r=n[e];const o=t.data;if(function yR(n){return n instanceof Ps}(r)){const s=r;s.resolving&&function k1(n,t){const e=t?`. Dependency path: ${t.join(" > ")} > ${n}`:"";throw new C(-200,`Circular dependency in DI detected for ${n}${e}`)}(function Oe(n){return"function"==typeof n?n.name||n.toString():"object"==typeof n&&null!=n&&"function"==typeof n.type?n.type.name||n.type.toString():$(n)}(o[e]));const a=ic(s.canSeeViewProviders);s.resolving=!0;const l=s.injectImpl?mn(s.injectImpl):null;ry(n,i,G.Default);try{r=n[e]=s.factory(void 0,o,n,i),t.firstCreatePass&&e>=i.directiveStart&&function gR(n,t,e){const{ngOnChanges:i,ngOnInit:r,ngDoCheck:o}=t.type.prototype;if(i){const s=Lb(t);(e.preOrderHooks||(e.preOrderHooks=[])).push(n,s),(e.preOrderCheckHooks||(e.preOrderCheckHooks=[])).push(n,s)}r&&(e.preOrderHooks||(e.preOrderHooks=[])).push(0-n,r),o&&((e.preOrderHooks||(e.preOrderHooks=[])).push(n,o),(e.preOrderCheckHooks||(e.preOrderCheckHooks=[])).push(n,o))}(e,o[e],t)}finally{null!==l&&mn(l),ic(a),s.resolving=!1,ly()}}return r}function Sy(n,t,e){return!!(e[t+(n>>5)]&1<<n)}function Cy(n,t){return!(n&G.Self||n&G.Host&&t)}class mo{constructor(t,e){this._tNode=t,this._lView=e}get(t,e,i){return vy(this._tNode,this._lView,t,Hl(i),e)}}function ER(){return new mo(vt(),x())}function rt(n){return qi(()=>{const t=n.prototype.constructor,e=t[hi]||Sh(t),i=Object.prototype;let r=Object.getPrototypeOf(n.prototype).constructor;for(;r&&r!==i;){const o=r[hi]||Sh(r);if(o&&o!==e)return o;r=Object.getPrototypeOf(r)}return o=>new o})}function Sh(n){return Qu(n)?()=>{const t=Sh(Q(n));return t&&t()}:mr(n)}function ky(n){const t=n[1],e=t.type;return 2===e?t.declTNode:1===e?n[6]:null}function Hi(n){return function xR(n,t){if("class"===t)return n.classes;if("style"===t)return n.styles;const e=n.attrs;if(e){const i=e.length;let r=0;for(;r<i;){const o=e[r];if(dy(o))break;if(0===o)r+=2;else if("number"==typeof o)for(r++;r<i&&"string"==typeof e[r];)r++;else{if(o===t)return e[r+1];r+=2}}}return null}(vt(),n)}const bo="__parameters__";function vo(n,t,e){return qi(()=>{const i=function Ch(n){return function(...e){if(n){const i=n(...e);for(const r in i)this[r]=i[r]}}}(t);function r(...o){if(this instanceof r)return i.apply(this,o),this;const s=new r(...o);return a.annotation=s,a;function a(l,c,d){const u=l.hasOwnProperty(bo)?l[bo]:Object.defineProperty(l,bo,{value:[]})[bo];for(;u.length<=d;)u.push(null);return(u[d]=u[d]||[]).push(s),l}}return e&&(r.prototype=Object.create(e.prototype)),r.prototype.ngMetadataName=n,r.annotationCls=r,r})}class D{constructor(t,e){this._desc=t,this.ngMetadataName="InjectionToken",this.\u0275prov=void 0,"number"==typeof e?this.__NG_ELEMENT_ID__=e:void 0!==e&&(this.\u0275prov=R({token:this,providedIn:e.providedIn||"root",factory:e.factory}))}get multi(){return this}toString(){return`InjectionToken ${this._desc}`}}function yr(n,t){n.forEach(e=>Array.isArray(e)?yr(e,t):t(e))}function Dy(n,t,e){t>=n.length?n.push(e):n.splice(t,0,e)}function sc(n,t){return t>=n.length-1?n.pop():n.splice(t,1)[0]}function qs(n,t){const e=[];for(let i=0;i<n;i++)e.push(t);return e}function sn(n,t,e){let i=Ao(n,t);return i>=0?n[1|i]=e:(i=~i,function OR(n,t,e,i){let r=n.length;if(r==t)n.push(e,i);else if(1===r)n.push(i,n[0]),n[0]=e;else{for(r--,n.push(n[r-1],n[r]);r>t;)n[r]=n[r-2],r--;n[t]=e,n[t+1]=i}}(n,i,t,e)),i}function xh(n,t){const e=Ao(n,t);if(e>=0)return n[1|e]}function Ao(n,t){return function wy(n,t,e){let i=0,r=n.length>>e;for(;r!==i;){const o=i+(r-i>>1),s=n[o<<e];if(t===s)return o<<e;s>t?r=o:i=o+1}return~(r<<e)}(n,t,1)}const lc=Rs(vo("Inject",n=>({token:n})),-1),yn=Rs(vo("Optional"),8),gi=Rs(vo("SkipSelf"),4);var Gt=(()=>((Gt=Gt||{})[Gt.Important=1]="Important",Gt[Gt.DashCase=2]="DashCase",Gt))();const Rh=new Map;let eT=0;const Mh="__ngContext__";function It(n,t){nn(t)?(n[Mh]=t[20],function nT(n){Rh.set(n[20],n)}(t)):n[Mh]=t}function Fh(n,t){return undefined(n,t)}function Js(n){const t=n[3];return Un(t)?t[3]:t}function Vh(n){return Wy(n[13])}function Uh(n){return Wy(n[4])}function Wy(n){for(;null!==n&&!Un(n);)n=n[4];return n}function Co(n,t,e,i,r){if(null!=i){let o,s=!1;Un(i)?o=i:nn(i)&&(s=!0,i=i[0]);const a=yt(i);0===n&&null!==e?null==r?Zy(t,e,a):vr(t,e,a,r||null,!0):1===n&&null!==e?vr(t,e,a,r||null,!0):2===n?function Kh(n,t,e){const i=uc(n,t);i&&function CT(n,t,e,i){n.removeChild(t,e,i)}(n,i,t,e)}(t,a,s):3===n&&t.destroyNode(a),null!=o&&function DT(n,t,e,i,r){const o=e[7];o!==yt(e)&&Co(t,n,i,o,r);for(let a=10;a<e.length;a++){const l=e[a];Ws(l[1],l,n,t,i,o)}}(t,n,o,e,r)}}function Ph(n,t,e){return n.createElement(t,e)}function Gy(n,t){const e=n[9],i=e.indexOf(t),r=t[3];512&t[2]&&(t[2]&=-513,oh(r,-1)),e.splice(i,1)}function _h(n,t){if(n.length<=10)return;const e=10+t,i=n[e];if(i){const r=i[17];null!==r&&r!==n&&Gy(r,i),t>0&&(n[e-1][4]=i[4]);const o=sc(n,10+t);!function fT(n,t){Ws(n,t,t[11],2,null,null),t[0]=null,t[6]=null}(i[1],i);const s=o[19];null!==s&&s.detachView(o[1]),i[3]=null,i[4]=null,i[2]&=-65}return i}function zy(n,t){if(!(128&t[2])){const e=t[11];e.destroyNode&&Ws(n,t,e,3,null,null),function bT(n){let t=n[13];if(!t)return Bh(n[1],n);for(;t;){let e=null;if(nn(t))e=t[13];else{const i=t[10];i&&(e=i)}if(!e){for(;t&&!t[4]&&t!==n;)nn(t)&&Bh(t[1],t),t=t[3];null===t&&(t=n),nn(t)&&Bh(t[1],t),e=t&&t[4]}t=e}}(t)}}function Bh(n,t){if(!(128&t[2])){t[2]&=-65,t[2]|=128,function ST(n,t){let e;if(null!=n&&null!=(e=n.destroyHooks))for(let i=0;i<e.length;i+=2){const r=t[e[i]];if(!(r instanceof Ps)){const o=e[i+1];if(Array.isArray(o))for(let s=0;s<o.length;s+=2){const a=r[o[s]],l=o[s+1];try{l.call(a)}finally{}}else try{o.call(r)}finally{}}}}(n,t),function AT(n,t){const e=n.cleanup,i=t[7];let r=-1;if(null!==e)for(let o=0;o<e.length-1;o+=2)if("string"==typeof e[o]){const s=e[o+3];s>=0?i[r=s]():i[r=-s].unsubscribe(),o+=2}else{const s=i[r=e[o+1]];e[o].call(s)}if(null!==i){for(let o=r+1;o<i.length;o++)(0,i[o])();t[7]=null}}(n,t),1===t[1].type&&t[11].destroy();const e=t[17];if(null!==e&&Un(t[3])){e!==t[3]&&Gy(e,t);const i=t[19];null!==i&&i.detachView(n)}!function iT(n){Rh.delete(n[20])}(t)}}function Yy(n,t,e){return function Xy(n,t,e){let i=t;for(;null!==i&&40&i.type;)i=(t=i).parent;if(null===i)return e[0];{const{componentOffset:r}=i;if(r>-1){const{encapsulation:o}=n.data[i.directiveStart+r];if(o===Fn.None||o===Fn.Emulated)return null}return rn(i,e)}}(n,t.parent,e)}function vr(n,t,e,i,r){n.insertBefore(t,e,i,r)}function Zy(n,t,e){n.appendChild(t,e)}function $y(n,t,e,i,r){null!==i?vr(n,t,e,i,r):Zy(n,t,e)}function uc(n,t){return n.parentNode(t)}function ev(n,t,e){return nv(n,t,e)}let fc,Jh,mc,nv=function tv(n,t,e){return 40&n.type?rn(n,e):null};function hc(n,t,e,i){const r=Yy(n,i,t),o=t[11],a=ev(i.parent||t[6],i,t);if(null!=r)if(Array.isArray(e))for(let l=0;l<e.length;l++)$y(o,r,e[l],a,!1);else $y(o,r,e,a,!1)}function pc(n,t){if(null!==t){const e=t.type;if(3&e)return rn(t,n);if(4&e)return qh(-1,n[t.index]);if(8&e){const i=t.child;if(null!==i)return pc(n,i);{const r=n[t.index];return Un(r)?qh(-1,r):yt(r)}}if(32&e)return Fh(t,n)()||yt(n[t.index]);{const i=rv(n,t);return null!==i?Array.isArray(i)?i[0]:pc(Js(n[16]),i):pc(n,t.next)}}return null}function rv(n,t){return null!==t?n[16][6].projection[t.projection]:null}function qh(n,t){const e=10+n+1;if(e<t.length){const i=t[e],r=i[1].firstChild;if(null!==r)return pc(i,r)}return t[7]}function Hh(n,t,e,i,r,o,s){for(;null!=e;){const a=i[e.index],l=e.type;if(s&&0===t&&(a&&It(yt(a),i),e.flags|=2),32!=(32&e.flags))if(8&l)Hh(n,t,e.child,i,r,o,!1),Co(t,n,r,a,o);else if(32&l){const c=Fh(e,i);let d;for(;d=c();)Co(t,n,r,d,o);Co(t,n,r,a,o)}else 16&l?ov(n,t,i,e,r,o):Co(t,n,r,a,o);e=s?e.projectionNext:e.next}}function Ws(n,t,e,i,r,o){Hh(e,i,n.firstChild,t,r,o,!1)}function ov(n,t,e,i,r,o){const s=e[16],l=s[6].projection[i.projection];if(Array.isArray(l))for(let c=0;c<l.length;c++)Co(t,n,r,l[c],o);else Hh(n,t,l,s[3],r,o,!0)}function sv(n,t,e){""===e?n.removeAttribute(t,"class"):n.setAttribute(t,"class",e)}function av(n,t,e){const{mergedAttrs:i,classes:r,styles:o}=e;null!==i&&gh(n,t,i),null!==r&&sv(n,t,r),null!==o&&function ET(n,t,e){n.setAttribute(t,"style",e)}(n,t,o)}function Ar(n){return function Lh(){if(void 0===fc&&(fc=null,Be.trustedTypes))try{fc=Be.trustedTypes.createPolicy("angular",{createHTML:n=>n,createScript:n=>n,createScriptURL:n=>n})}catch{}return fc}()?.createHTML(n)||n}function uv(n){return function Wh(){if(void 0===mc&&(mc=null,Be.trustedTypes))try{mc=Be.trustedTypes.createPolicy("angular#unsafe-bypass",{createHTML:n=>n,createScript:n=>n,createScriptURL:n=>n})}catch{}return mc}()?.createScriptURL(n)||n}class Sr{constructor(t){this.changingThisBreaksApplicationSecurity=t}toString(){return`SafeValue must use [property]=binding: ${this.changingThisBreaksApplicationSecurity} (see ${Pl})`}}class OT extends Sr{getTypeName(){return"HTML"}}class FT extends Sr{getTypeName(){return"Style"}}class VT extends Sr{getTypeName(){return"Script"}}class UT extends Sr{getTypeName(){return"URL"}}class NT extends Sr{getTypeName(){return"ResourceURL"}}function an(n){return n instanceof Sr?n.changingThisBreaksApplicationSecurity:n}function Gn(n,t){const e=function PT(n){return n instanceof Sr&&n.getTypeName()||null}(n);if(null!=e&&e!==t){if("ResourceURL"===e&&"URL"===t)return!0;throw new Error(`Required a safe ${t}, got a ${e} (see ${Pl})`)}return e===t}class HT{constructor(t){this.inertDocumentHelper=t}getInertBodyElement(t){t="<body><remove></remove>"+t;try{const e=(new window.DOMParser).parseFromString(Ar(t),"text/html").body;return null===e?this.inertDocumentHelper.getInertBodyElement(t):(e.removeChild(e.firstChild),e)}catch{return null}}}class LT{constructor(t){if(this.defaultDoc=t,this.inertDocument=this.defaultDoc.implementation.createHTMLDocument("sanitization-inert"),null==this.inertDocument.body){const e=this.inertDocument.createElement("html");this.inertDocument.appendChild(e);const i=this.inertDocument.createElement("body");e.appendChild(i)}}getInertBodyElement(t){const e=this.inertDocument.createElement("template");if("content"in e)return e.innerHTML=Ar(t),e;const i=this.inertDocument.createElement("body");return i.innerHTML=Ar(t),this.defaultDoc.documentMode&&this.stripCustomNsAttrs(i),i}stripCustomNsAttrs(t){const e=t.attributes;for(let r=e.length-1;0<r;r--){const s=e.item(r).name;("xmlns:ns1"===s||0===s.indexOf("ns1:"))&&t.removeAttribute(s)}let i=t.firstChild;for(;i;)i.nodeType===Node.ELEMENT_NODE&&this.stripCustomNsAttrs(i),i=i.nextSibling}}const WT=/^(?:(?:https?|mailto|data|ftp|tel|file|sms):|[^&:/?#]*(?:[/?#]|$))/gi;function gc(n){return(n=String(n)).match(WT)?n:"unsafe:"+n}function bi(n){const t={};for(const e of n.split(","))t[e]=!0;return t}function Qs(...n){const t={};for(const e of n)for(const i in e)e.hasOwnProperty(i)&&(t[i]=!0);return t}const pv=bi("area,br,col,hr,img,wbr"),fv=bi("colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr"),mv=bi("rp,rt"),Qh=Qs(pv,Qs(fv,bi("address,article,aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul")),Qs(mv,bi("a,abbr,acronym,audio,b,bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video")),Qs(mv,fv)),Gh=bi("background,cite,href,itemtype,longdesc,poster,src,xlink:href"),gv=Qs(Gh,bi("abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,scope,scrolling,shape,size,sizes,span,srclang,srcset,start,summary,tabindex,target,title,translate,type,usemap,valign,value,vspace,width"),bi("aria-activedescendant,aria-atomic,aria-autocomplete,aria-busy,aria-checked,aria-colcount,aria-colindex,aria-colspan,aria-controls,aria-current,aria-describedby,aria-details,aria-disabled,aria-dropeffect,aria-errormessage,aria-expanded,aria-flowto,aria-grabbed,aria-haspopup,aria-hidden,aria-invalid,aria-keyshortcuts,aria-label,aria-labelledby,aria-level,aria-live,aria-modal,aria-multiline,aria-multiselectable,aria-orientation,aria-owns,aria-placeholder,aria-posinset,aria-pressed,aria-readonly,aria-relevant,aria-required,aria-roledescription,aria-rowcount,aria-rowindex,aria-rowspan,aria-selected,aria-setsize,aria-sort,aria-valuemax,aria-valuemin,aria-valuenow,aria-valuetext")),QT=bi("script,style,template");class GT{constructor(){this.sanitizedSomething=!1,this.buf=[]}sanitizeChildren(t){let e=t.firstChild,i=!0;for(;e;)if(e.nodeType===Node.ELEMENT_NODE?i=this.startElement(e):e.nodeType===Node.TEXT_NODE?this.chars(e.nodeValue):this.sanitizedSomething=!0,i&&e.firstChild)e=e.firstChild;else for(;e;){e.nodeType===Node.ELEMENT_NODE&&this.endElement(e);let r=this.checkClobberedElement(e,e.nextSibling);if(r){e=r;break}e=this.checkClobberedElement(e,e.parentNode)}return this.buf.join("")}startElement(t){const e=t.nodeName.toLowerCase();if(!Qh.hasOwnProperty(e))return this.sanitizedSomething=!0,!QT.hasOwnProperty(e);this.buf.push("<"),this.buf.push(e);const i=t.attributes;for(let r=0;r<i.length;r++){const o=i.item(r),s=o.name,a=s.toLowerCase();if(!gv.hasOwnProperty(a)){this.sanitizedSomething=!0;continue}let l=o.value;Gh[a]&&(l=gc(l)),this.buf.push(" ",s,'="',bv(l),'"')}return this.buf.push(">"),!0}endElement(t){const e=t.nodeName.toLowerCase();Qh.hasOwnProperty(e)&&!pv.hasOwnProperty(e)&&(this.buf.push("</"),this.buf.push(e),this.buf.push(">"))}chars(t){this.buf.push(bv(t))}checkClobberedElement(t,e){if(e&&(t.compareDocumentPosition(e)&Node.DOCUMENT_POSITION_CONTAINED_BY)===Node.DOCUMENT_POSITION_CONTAINED_BY)throw new Error(`Failed to sanitize html because the element is clobbered: ${t.outerHTML}`);return e}}const zT=/[\uD800-\uDBFF][\uDC00-\uDFFF]/g,YT=/([^\#-~ |!])/g;function bv(n){return n.replace(/&/g,"&amp;").replace(zT,function(t){return"&#"+(1024*(t.charCodeAt(0)-55296)+(t.charCodeAt(1)-56320)+65536)+";"}).replace(YT,function(t){return"&#"+t.charCodeAt(0)+";"}).replace(/</g,"&lt;").replace(/>/g,"&gt;")}let bc;function yv(n,t){let e=null;try{bc=bc||function hv(n){const t=new LT(n);return function JT(){try{return!!(new window.DOMParser).parseFromString(Ar(""),"text/html")}catch{return!1}}()?new HT(t):t}(n);let i=t?String(t):"";e=bc.getInertBodyElement(i);let r=5,o=i;do{if(0===r)throw new Error("Failed to sanitize html because the input is unstable");r--,i=o,o=e.innerHTML,e=bc.getInertBodyElement(i)}while(i!==o);return Ar((new GT).sanitizeChildren(zh(e)||e))}finally{if(e){const i=zh(e)||e;for(;i.firstChild;)i.removeChild(i.firstChild)}}}function zh(n){return"content"in n&&function XT(n){return n.nodeType===Node.ELEMENT_NODE&&"TEMPLATE"===n.nodeName}(n)?n.content:null}var Ee=(()=>((Ee=Ee||{})[Ee.NONE=0]="NONE",Ee[Ee.HTML=1]="HTML",Ee[Ee.STYLE=2]="STYLE",Ee[Ee.SCRIPT=3]="SCRIPT",Ee[Ee.URL=4]="URL",Ee[Ee.RESOURCE_URL=5]="RESOURCE_URL",Ee))();function Gs(n){const t=zs();return t?t.sanitize(Ee.URL,n)||"":Gn(n,"URL")?an(n):gc($(n))}function vv(n){const t=zs();if(t)return uv(t.sanitize(Ee.RESOURCE_URL,n)||"");if(Gn(n,"ResourceURL"))return uv(an(n));throw new C(904,!1)}function zs(){const n=x();return n&&n[12]}const yc=new D("ENVIRONMENT_INITIALIZER"),Sv=new D("INJECTOR",-1),Cv=new D("INJECTOR_DEF_TYPES");class kv{get(t,e=Es){if(e===Es){const i=new Error(`NullInjectorError: No provider for ${_e(t)}!`);throw i.name="NullInjectorError",i}return e}}function rM(...n){return{\u0275providers:xv(0,n),\u0275fromNgModule:!0}}function xv(n,...t){const e=[],i=new Set;let r;return yr(t,o=>{const s=o;Yh(s,e,[],i)&&(r||(r=[]),r.push(s))}),void 0!==r&&Dv(r,e),e}function Dv(n,t){for(let e=0;e<n.length;e++){const{providers:r}=n[e];Xh(r,o=>{t.push(o)})}}function Yh(n,t,e,i){if(!(n=Q(n)))return!1;let r=null,o=Tb(n);const s=!o&&Ve(n);if(o||s){if(s&&!s.standalone)return!1;r=n}else{const l=n.ngModule;if(o=Tb(l),!o)return!1;r=l}const a=i.has(r);if(s){if(a)return!1;if(i.add(r),s.dependencies){const l="function"==typeof s.dependencies?s.dependencies():s.dependencies;for(const c of l)Yh(c,t,e,i)}}else{if(!o)return!1;{if(null!=o.imports&&!a){let c;i.add(r);try{yr(o.imports,d=>{Yh(d,t,e,i)&&(c||(c=[]),c.push(d))})}finally{}void 0!==c&&Dv(c,t)}if(!a){const c=mr(r)||(()=>new r);t.push({provide:r,useFactory:c,deps:we},{provide:Cv,useValue:r,multi:!0},{provide:yc,useValue:()=>v(r),multi:!0})}const l=o.providers;null==l||a||Xh(l,d=>{t.push(d)})}}return r!==n&&void 0!==n.providers}function Xh(n,t){for(let e of n)Gu(e)&&(e=e.\u0275providers),Array.isArray(e)?Xh(e,t):t(e)}const oM=Pe({provide:String,useValue:Pe});function Zh(n){return null!==n&&"object"==typeof n&&oM in n}function Cr(n){return"function"==typeof n}const $h=new D("Set Injector scope."),vc={},aM={};let ep;function Ac(){return void 0===ep&&(ep=new kv),ep}class yi{}class Iv extends yi{get destroyed(){return this._destroyed}constructor(t,e,i,r){super(),this.parent=e,this.source=i,this.scopes=r,this.records=new Map,this._ngOnDestroyHooks=new Set,this._onDestroyHooks=[],this._destroyed=!1,np(t,s=>this.processProvider(s)),this.records.set(Sv,ko(void 0,this)),r.has("environment")&&this.records.set(yi,ko(void 0,this));const o=this.records.get($h);null!=o&&"string"==typeof o.value&&this.scopes.add(o.value),this.injectorDefTypes=new Set(this.get(Cv.multi,we,G.Self))}destroy(){this.assertNotDestroyed(),this._destroyed=!0;try{for(const t of this._ngOnDestroyHooks)t.ngOnDestroy();for(const t of this._onDestroyHooks)t()}finally{this.records.clear(),this._ngOnDestroyHooks.clear(),this.injectorDefTypes.clear(),this._onDestroyHooks.length=0}}onDestroy(t){this._onDestroyHooks.push(t)}runInContext(t){this.assertNotDestroyed();const e=oo(this),i=mn(void 0);try{return t()}finally{oo(e),mn(i)}}get(t,e=Es,i=G.Default){this.assertNotDestroyed(),i=Hl(i);const r=oo(this),o=mn(void 0);try{if(!(i&G.SkipSelf)){let a=this.records.get(t);if(void 0===a){const l=function hM(n){return"function"==typeof n||"object"==typeof n&&n instanceof D}(t)&&jl(t);a=l&&this.injectableDefInScope(l)?ko(tp(t),vc):null,this.records.set(t,a)}if(null!=a)return this.hydrate(t,a)}return(i&G.Self?Ac():this.parent).get(t,e=i&G.Optional&&e===Es?null:e)}catch(s){if("NullInjectorError"===s.name){if((s[Kl]=s[Kl]||[]).unshift(_e(t)),r)throw s;return function _1(n,t,e,i){const r=n[Kl];throw t[Fb]&&r.unshift(t[Fb]),n.message=function B1(n,t,e,i=null){n=n&&"\n"===n.charAt(0)&&"\u0275"==n.charAt(1)?n.slice(2):n;let r=_e(t);if(Array.isArray(t))r=t.map(_e).join(" -> ");else if("object"==typeof t){let o=[];for(let s in t)if(t.hasOwnProperty(s)){let a=t[s];o.push(s+":"+("string"==typeof a?JSON.stringify(a):_e(a)))}r=`{${o.join(", ")}}`}return`${e}${i?"("+i+")":""}[${r}]: ${n.replace(V1,"\n  ")}`}("\n"+n.message,r,e,i),n.ngTokenPath=r,n[Kl]=null,n}(s,t,"R3InjectorError",this.source)}throw s}finally{mn(o),oo(r)}}resolveInjectorInitializers(){const t=oo(this),e=mn(void 0);try{const i=this.get(yc.multi,we,G.Self);for(const r of i)r()}finally{oo(t),mn(e)}}toString(){const t=[],e=this.records;for(const i of e.keys())t.push(_e(i));return`R3Injector[${t.join(", ")}]`}assertNotDestroyed(){if(this._destroyed)throw new C(205,!1)}processProvider(t){let e=Cr(t=Q(t))?t:Q(t&&t.provide);const i=function cM(n){return Zh(n)?ko(void 0,n.useValue):ko(Rv(n),vc)}(t);if(Cr(t)||!0!==t.multi)this.records.get(e);else{let r=this.records.get(e);r||(r=ko(void 0,vc,!0),r.factory=()=>Zu(r.multi),this.records.set(e,r)),e=t,r.multi.push(t)}this.records.set(e,i)}hydrate(t,e){return e.value===vc&&(e.value=aM,e.value=e.factory()),"object"==typeof e.value&&e.value&&function uM(n){return null!==n&&"object"==typeof n&&"function"==typeof n.ngOnDestroy}(e.value)&&this._ngOnDestroyHooks.add(e.value),e.value}injectableDefInScope(t){if(!t.providedIn)return!1;const e=Q(t.providedIn);return"string"==typeof e?"any"===e||this.scopes.has(e):this.injectorDefTypes.has(e)}}function tp(n){const t=jl(n),e=null!==t?t.factory:mr(n);if(null!==e)return e;if(n instanceof D)throw new C(204,!1);if(n instanceof Function)return function lM(n){const t=n.length;if(t>0)throw qs(t,"?"),new C(204,!1);const e=function R1(n){const t=n&&(n[ql]||n[Mb]);if(t){const e=function T1(n){if(n.hasOwnProperty("name"))return n.name;const t=(""+n).match(/^function\s*([^\s(]+)/);return null===t?"":t[1]}(n);return console.warn(`DEPRECATED: DI is instantiating a token "${e}" that inherits its @Injectable decorator but does not provide one itself.\nThis will become an error in a future version of Angular. Please add @Injectable() to the "${e}" class.`),t}return null}(n);return null!==e?()=>e.factory(n):()=>new n}(n);throw new C(204,!1)}function Rv(n,t,e){let i;if(Cr(n)){const r=Q(n);return mr(r)||tp(r)}if(Zh(n))i=()=>Q(n.useValue);else if(function Ev(n){return!(!n||!n.useFactory)}(n))i=()=>n.useFactory(...Zu(n.deps||[]));else if(function wv(n){return!(!n||!n.useExisting)}(n))i=()=>v(Q(n.useExisting));else{const r=Q(n&&(n.useClass||n.provide));if(!function dM(n){return!!n.deps}(n))return mr(r)||tp(r);i=()=>new r(...Zu(n.deps))}return i}function ko(n,t,e=!1){return{factory:n,value:t,multi:e?[]:void 0}}function np(n,t){for(const e of n)Array.isArray(e)?np(e,t):e&&Gu(e)?np(e.\u0275providers,t):t(e)}class pM{}class Tv{}class mM{resolveComponentFactory(t){throw function fM(n){const t=Error(`No component factory found for ${_e(n)}. Did you add it to @NgModule.entryComponents?`);return t.ngComponent=n,t}(t)}}let kr=(()=>{class n{}return n.NULL=new mM,n})();function gM(){return xo(vt(),x())}function xo(n,t){return new z(rn(n,t))}let z=(()=>{class n{constructor(e){this.nativeElement=e}}return n.__NG_ELEMENT_ID__=gM,n})();function bM(n){return n instanceof z?n.nativeElement:n}class Ys{}let vi=(()=>{class n{}return n.__NG_ELEMENT_ID__=()=>function yM(){const n=x(),e=on(vt().index,n);return(nn(e)?e:n)[11]}(),n})(),vM=(()=>{class n{}return n.\u0275prov=R({token:n,providedIn:"root",factory:()=>null}),n})();class xr{constructor(t){this.full=t,this.major=t.split(".")[0],this.minor=t.split(".")[1],this.patch=t.split(".").slice(2).join(".")}}const AM=new xr("15.1.0"),ip={};function op(n){return n.ngOriginalError}class Ai{constructor(){this._console=console}handleError(t){const e=this._findOriginalError(t);this._console.error("ERROR",t),e&&this._console.error("ORIGINAL ERROR",e)}_findOriginalError(t){let e=t&&op(t);for(;e&&op(e);)e=op(e);return e||null}}function Si(n){return n instanceof Function?n():n}function Fv(n,t,e){let i=n.length;for(;;){const r=n.indexOf(t,e);if(-1===r)return r;if(0===r||n.charCodeAt(r-1)<=32){const o=t.length;if(r+o===i||n.charCodeAt(r+o)<=32)return r}e=r+1}}const Vv="ng-template";function MM(n,t,e){let i=0;for(;i<n.length;){let r=n[i++];if(e&&"class"===r){if(r=n[i],-1!==Fv(r.toLowerCase(),t,0))return!0}else if(1===r){for(;i<n.length&&"string"==typeof(r=n[i++]);)if(r.toLowerCase()===t)return!0;return!1}}return!1}function Uv(n){return 4===n.type&&n.value!==Vv}function OM(n,t,e){return t===(4!==n.type||e?n.value:Vv)}function FM(n,t,e){let i=4;const r=n.attrs||[],o=function NM(n){for(let t=0;t<n.length;t++)if(dy(n[t]))return t;return n.length}(r);let s=!1;for(let a=0;a<t.length;a++){const l=t[a];if("number"!=typeof l){if(!s)if(4&i){if(i=2|1&i,""!==l&&!OM(n,l,e)||""===l&&1===t.length){if(Pn(i))return!1;s=!0}}else{const c=8&i?l:t[++a];if(8&i&&null!==n.attrs){if(!MM(n.attrs,c,e)){if(Pn(i))return!1;s=!0}continue}const u=VM(8&i?"class":l,r,Uv(n),e);if(-1===u){if(Pn(i))return!1;s=!0;continue}if(""!==c){let h;h=u>o?"":r[u+1].toLowerCase();const f=8&i?h:null;if(f&&-1!==Fv(f,c,0)||2&i&&c!==h){if(Pn(i))return!1;s=!0}}}}else{if(!s&&!Pn(i)&&!Pn(l))return!1;if(s&&Pn(l))continue;s=!1,i=l|1&i}}return Pn(i)||s}function Pn(n){return 0==(1&n)}function VM(n,t,e,i){if(null===t)return-1;let r=0;if(i||!e){let o=!1;for(;r<t.length;){const s=t[r];if(s===n)return r;if(3===s||6===s)o=!0;else{if(1===s||2===s){let a=t[++r];for(;"string"==typeof a;)a=t[++r];continue}if(4===s)break;if(0===s){r+=4;continue}}r+=o?1:2}return-1}return function PM(n,t){let e=n.indexOf(4);if(e>-1)for(e++;e<n.length;){const i=n[e];if("number"==typeof i)return-1;if(i===t)return e;e++}return-1}(t,n)}function Nv(n,t,e=!1){for(let i=0;i<t.length;i++)if(FM(n,t[i],e))return!0;return!1}function _M(n,t){e:for(let e=0;e<t.length;e++){const i=t[e];if(n.length===i.length){for(let r=0;r<n.length;r++)if(n[r]!==i[r])continue e;return!0}}return!1}function Pv(n,t){return n?":not("+t.trim()+")":t}function BM(n){let t=n[0],e=1,i=2,r="",o=!1;for(;e<n.length;){let s=n[e];if("string"==typeof s)if(2&i){const a=n[++e];r+="["+s+(a.length>0?'="'+a+'"':"")+"]"}else 8&i?r+="."+s:4&i&&(r+=" "+s);else""!==r&&!Pn(s)&&(t+=Pv(o,r),r=""),i=s,o=o||!Pn(i);e++}return""!==r&&(t+=Pv(o,r)),t}const ne={};function w(n){_v(Ae(),x(),_t()+n,!1)}function _v(n,t,e,i){if(!i)if(3==(3&t[2])){const o=n.preOrderCheckHooks;null!==o&&$l(t,o,e)}else{const o=n.preOrderHooks;null!==o&&ec(t,o,0,e)}gr(e)}function Kv(n,t=null,e=null,i){const r=Hv(n,t,e,i);return r.resolveInjectorInitializers(),r}function Hv(n,t=null,e=null,i,r=new Set){const o=[e||we,rM(n)];return i=i||("object"==typeof n?void 0:_e(n)),new Iv(o,t||Ac(),i||null,r)}let ht=(()=>{class n{static create(e,i){if(Array.isArray(e))return Kv({name:""},i,e,"");{const r=e.name??"";return Kv({name:r},e.parent,e.providers,r)}}}return n.THROW_IF_NOT_FOUND=Es,n.NULL=new kv,n.\u0275prov=R({token:n,providedIn:"any",factory:()=>v(Sv)}),n.__NG_ELEMENT_ID__=-1,n})();function p(n,t=G.Default){const e=x();return null===e?v(n,t):vy(vt(),e,Q(n),t)}function Li(){throw new Error("invalid")}function Yv(n,t){const e=n.contentQueries;if(null!==e)for(let i=0;i<e.length;i+=2){const o=e[i+1];if(-1!==o){const s=n.data[o];dh(e[i]),s.contentQueries(2,t[o],o)}}}function Cc(n,t,e,i,r,o,s,a,l,c,d){const u=t.blueprint.slice();return u[0]=r,u[2]=76|i,(null!==d||n&&1024&n[2])&&(u[2]|=1024),Yb(u),u[3]=u[15]=n,u[8]=e,u[10]=s||n&&n[10],u[11]=a||n&&n[11],u[12]=l||n&&n[12]||null,u[9]=c||n&&n[9]||null,u[6]=o,u[20]=function tT(){return eT++}(),u[21]=d,u[16]=2==t.type?n[16]:u,u}function Eo(n,t,e,i,r){let o=n.data[t];if(null===o)o=function dp(n,t,e,i,r){const o=$b(),s=sh(),l=n.data[t]=function uO(n,t,e,i,r,o){return{type:e,index:i,insertBeforeIndex:null,injectorIndex:t?t.injectorIndex:-1,directiveStart:-1,directiveEnd:-1,directiveStylingLast:-1,componentOffset:-1,propertyBindings:null,flags:0,providerIndexes:0,value:r,attrs:o,mergedAttrs:null,localNames:null,initialInputs:void 0,inputs:null,outputs:null,tViews:null,next:null,projectionNext:null,child:null,parent:t,projection:null,styles:null,stylesWithoutHost:null,residualStyles:void 0,classes:null,classesWithoutHost:null,residualClasses:void 0,classBindings:0,styleBindings:0}}(0,s?o:o&&o.parent,e,t,i,r);return null===n.firstChild&&(n.firstChild=l),null!==o&&(s?null==o.child&&null!==l.parent&&(o.child=l):null===o.next&&(o.next=l)),l}(n,t,e,i,r),function aR(){return te.lFrame.inI18n}()&&(o.flags|=32);else if(64&o.type){o.type=e,o.value=i,o.attrs=r;const s=function Us(){const n=te.lFrame,t=n.currentTNode;return n.isParent?t:t.parent}();o.injectorIndex=null===s?-1:s.injectorIndex}return Wn(o,!0),o}function Xs(n,t,e,i){if(0===e)return-1;const r=t.length;for(let o=0;o<e;o++)t.push(i),n.blueprint.push(i),n.data.push(null);return r}function up(n,t,e){uh(t);try{const i=n.viewQuery;null!==i&&Sp(1,i,e);const r=n.template;null!==r&&Xv(n,t,r,1,e),n.firstCreatePass&&(n.firstCreatePass=!1),n.staticContentQueries&&Yv(n,t),n.staticViewQueries&&Sp(2,n.viewQuery,e);const o=n.components;null!==o&&function lO(n,t){for(let e=0;e<t.length;e++)TO(n,t[e])}(t,o)}catch(i){throw n.firstCreatePass&&(n.incompleteFirstPass=!0,n.firstCreatePass=!1),i}finally{t[2]&=-5,hh()}}function kc(n,t,e,i){const r=t[2];if(128!=(128&r)){uh(t);try{Yb(t),function ty(n){return te.lFrame.bindingIndex=n}(n.bindingStartIndex),null!==e&&Xv(n,t,e,2,i);const s=3==(3&r);if(s){const c=n.preOrderCheckHooks;null!==c&&$l(t,c,null)}else{const c=n.preOrderHooks;null!==c&&ec(t,c,0,null),fh(t,0)}if(function IO(n){for(let t=Vh(n);null!==t;t=Uh(t)){if(!t[2])continue;const e=t[9];for(let i=0;i<e.length;i++){const r=e[i];512&r[2]||oh(r[3],1),r[2]|=512}}}(t),function EO(n){for(let t=Vh(n);null!==t;t=Uh(t))for(let e=10;e<t.length;e++){const i=t[e],r=i[1];Xl(i)&&kc(r,i,r.template,i[8])}}(t),null!==n.contentQueries&&Yv(n,t),s){const c=n.contentCheckHooks;null!==c&&$l(t,c)}else{const c=n.contentHooks;null!==c&&ec(t,c,1),fh(t,1)}!function sO(n,t){const e=n.hostBindingOpCodes;if(null!==e)try{for(let i=0;i<e.length;i++){const r=e[i];if(r<0)gr(~r);else{const o=r,s=e[++i],a=e[++i];lR(s,o),a(2,t[o])}}}finally{gr(-1)}}(n,t);const a=n.components;null!==a&&function aO(n,t){for(let e=0;e<t.length;e++)RO(n,t[e])}(t,a);const l=n.viewQuery;if(null!==l&&Sp(2,l,i),s){const c=n.viewCheckHooks;null!==c&&$l(t,c)}else{const c=n.viewHooks;null!==c&&ec(t,c,2),fh(t,2)}!0===n.firstUpdatePass&&(n.firstUpdatePass=!1),t[2]&=-41,512&t[2]&&(t[2]&=-513,oh(t[3],-1))}finally{hh()}}}function Xv(n,t,e,i,r){const o=_t(),s=2&i;try{gr(-1),s&&t.length>22&&_v(n,t,22,!1),e(i,r)}finally{gr(o)}}function hp(n,t,e){if(ih(t)){const r=t.directiveEnd;for(let o=t.directiveStart;o<r;o++){const s=n.data[o];s.contentQueries&&s.contentQueries(1,e[o],o)}}}function pp(n,t,e){Zb()&&(function bO(n,t,e,i){const r=e.directiveStart,o=e.directiveEnd;Vs(e)&&function xO(n,t,e){const i=rn(t,n),r=Zv(e),o=n[10],s=xc(n,Cc(n,r,null,e.onPush?32:16,i,t,o,o.createRenderer(i,e),null,null,null));n[t.index]=s}(t,e,n.data[r+e.componentOffset]),n.firstCreatePass||rc(e,t),It(i,t);const s=e.initialInputs;for(let a=r;a<o;a++){const l=n.data[a],c=br(t,n,a,e);It(c,t),null!==s&&DO(0,a-r,c,l,0,s),Nn(l)&&(on(e.index,t)[8]=br(t,n,a,e))}}(n,t,e,rn(e,t)),64==(64&e.flags)&&rA(n,t,e))}function fp(n,t,e=rn){const i=t.localNames;if(null!==i){let r=t.index+1;for(let o=0;o<i.length;o+=2){const s=i[o+1],a=-1===s?e(t,n):n[s];n[r++]=a}}}function Zv(n){const t=n.tView;return null===t||t.incompleteFirstPass?n.tView=mp(1,null,n.template,n.decls,n.vars,n.directiveDefs,n.pipeDefs,n.viewQuery,n.schemas,n.consts):t}function mp(n,t,e,i,r,o,s,a,l,c){const d=22+i,u=d+r,h=function cO(n,t){const e=[];for(let i=0;i<t;i++)e.push(i<n?null:ne);return e}(d,u),f="function"==typeof c?c():c;return h[1]={type:n,blueprint:h,template:e,queries:null,viewQuery:a,declTNode:t,data:h.slice().fill(null,d),bindingStartIndex:d,expandoStartIndex:u,hostBindingOpCodes:null,firstCreatePass:!0,firstUpdatePass:!0,staticViewQueries:!1,staticContentQueries:!1,preOrderHooks:null,preOrderCheckHooks:null,contentHooks:null,contentCheckHooks:null,viewHooks:null,viewCheckHooks:null,destroyHooks:null,cleanup:null,contentQueries:null,components:null,directiveRegistry:"function"==typeof o?o():o,pipeRegistry:"function"==typeof s?s():s,firstChild:null,schemas:l,consts:f,incompleteFirstPass:!1}}function $v(n,t,e,i){const r=sA(t);null===e?r.push(i):(r.push(e),n.firstCreatePass&&aA(n).push(i,r.length-1))}function eA(n,t,e,i){for(let r in n)if(n.hasOwnProperty(r)){e=null===e?{}:e;const o=n[r];null===i?tA(e,t,r,o):i.hasOwnProperty(r)&&tA(e,t,i[r],o)}return e}function tA(n,t,e,i){n.hasOwnProperty(e)?n[e].push(t,i):n[e]=[t,i]}function ln(n,t,e,i,r,o,s,a){const l=rn(t,e);let d,c=t.inputs;!a&&null!=c&&(d=c[i])?(Cp(n,e,d,i,r),Vs(t)&&nA(e,t.index)):3&t.type&&(i=function pO(n){return"class"===n?"className":"for"===n?"htmlFor":"formaction"===n?"formAction":"innerHtml"===n?"innerHTML":"readonly"===n?"readOnly":"tabindex"===n?"tabIndex":n}(i),r=null!=s?s(r,t.value||"",i):r,o.setProperty(l,i,r))}function nA(n,t){const e=on(t,n);16&e[2]||(e[2]|=32)}function gp(n,t,e,i){let r=!1;if(Zb()){const o=null===i?null:{"":-1},s=function vO(n,t){const e=n.directiveRegistry;let i=null,r=null;if(e)for(let o=0;o<e.length;o++){const s=e[o];if(Nv(t,s.selectors,!1))if(i||(i=[]),Nn(s))if(null!==s.findHostDirectiveDefs){const a=[];r=r||new Map,s.findHostDirectiveDefs(s,a,r),i.unshift(...a,s),bp(n,t,a.length)}else i.unshift(s),bp(n,t,0);else r=r||new Map,s.findHostDirectiveDefs?.(s,i,r),i.push(s)}return null===i?null:[i,r]}(n,e);let a,l;null===s?a=l=null:[a,l]=s,null!==a&&(r=!0,iA(n,t,e,a,o,l)),o&&function AO(n,t,e){if(t){const i=n.localNames=[];for(let r=0;r<t.length;r+=2){const o=e[t[r+1]];if(null==o)throw new C(-301,!1);i.push(t[r],o)}}}(e,i,o)}return e.mergedAttrs=_s(e.mergedAttrs,e.attrs),r}function iA(n,t,e,i,r,o){for(let c=0;c<i.length;c++)Ah(rc(e,t),n,i[c].type);!function CO(n,t,e){n.flags|=1,n.directiveStart=t,n.directiveEnd=t+e,n.providerIndexes=t}(e,n.data.length,i.length);for(let c=0;c<i.length;c++){const d=i[c];d.providersResolver&&d.providersResolver(d)}let s=!1,a=!1,l=Xs(n,t,i.length,null);for(let c=0;c<i.length;c++){const d=i[c];e.mergedAttrs=_s(e.mergedAttrs,d.hostAttrs),kO(n,e,t,l,d),SO(l,d,r),null!==d.contentQueries&&(e.flags|=4),(null!==d.hostBindings||null!==d.hostAttrs||0!==d.hostVars)&&(e.flags|=64);const u=d.type.prototype;!s&&(u.ngOnChanges||u.ngOnInit||u.ngDoCheck)&&((n.preOrderHooks||(n.preOrderHooks=[])).push(e.index),s=!0),!a&&(u.ngOnChanges||u.ngDoCheck)&&((n.preOrderCheckHooks||(n.preOrderCheckHooks=[])).push(e.index),a=!0),l++}!function hO(n,t,e){const r=t.directiveEnd,o=n.data,s=t.attrs,a=[];let l=null,c=null;for(let d=t.directiveStart;d<r;d++){const u=o[d],h=e?e.get(u):null,m=h?h.outputs:null;l=eA(u.inputs,d,l,h?h.inputs:null),c=eA(u.outputs,d,c,m);const g=null===l||null===s||Uv(t)?null:wO(l,d,s);a.push(g)}null!==l&&(l.hasOwnProperty("class")&&(t.flags|=8),l.hasOwnProperty("style")&&(t.flags|=16)),t.initialInputs=a,t.inputs=l,t.outputs=c}(n,e,o)}function rA(n,t,e){const i=e.directiveStart,r=e.directiveEnd,o=e.index,s=function cR(){return te.lFrame.currentDirectiveIndex}();try{gr(o);for(let a=i;a<r;a++){const l=n.data[a],c=t[a];lh(a),(null!==l.hostBindings||0!==l.hostVars||null!==l.hostAttrs)&&yO(l,c)}}finally{gr(-1),lh(s)}}function yO(n,t){null!==n.hostBindings&&n.hostBindings(1,t)}function bp(n,t,e){t.componentOffset=e,(n.components||(n.components=[])).push(t.index)}function SO(n,t,e){if(e){if(t.exportAs)for(let i=0;i<t.exportAs.length;i++)e[t.exportAs[i]]=n;Nn(t)&&(e[""]=n)}}function kO(n,t,e,i,r){n.data[i]=r;const o=r.factory||(r.factory=mr(r.type)),s=new Ps(o,Nn(r),p);n.blueprint[i]=s,e[i]=s,function mO(n,t,e,i,r){const o=r.hostBindings;if(o){let s=n.hostBindingOpCodes;null===s&&(s=n.hostBindingOpCodes=[]);const a=~t.index;(function gO(n){let t=n.length;for(;t>0;){const e=n[--t];if("number"==typeof e&&e<0)return e}return 0})(s)!=a&&s.push(a),s.push(e,i,o)}}(n,t,i,Xs(n,e,r.hostVars,ne),r)}function zn(n,t,e,i,r,o){const s=rn(n,t);!function yp(n,t,e,i,r,o,s){if(null==o)n.removeAttribute(t,r,e);else{const a=null==s?$(o):s(o,i||"",r);n.setAttribute(t,r,a,e)}}(t[11],s,o,n.value,e,i,r)}function DO(n,t,e,i,r,o){const s=o[t];if(null!==s){const a=i.setInput;for(let l=0;l<s.length;){const c=s[l++],d=s[l++],u=s[l++];null!==a?i.setInput(e,u,c,d):e[d]=u}}}function wO(n,t,e){let i=null,r=0;for(;r<e.length;){const o=e[r];if(0!==o)if(5!==o){if("number"==typeof o)break;if(n.hasOwnProperty(o)){null===i&&(i=[]);const s=n[o];for(let a=0;a<s.length;a+=2)if(s[a]===t){i.push(o,s[a+1],e[r+1]);break}}r+=2}else r+=2;else r+=4}return i}function oA(n,t,e,i){return[n,!0,!1,t,null,0,i,e,null,null]}function RO(n,t){const e=on(t,n);if(Xl(e)){const i=e[1];48&e[2]?kc(i,e,i.template,e[8]):e[5]>0&&vp(e)}}function vp(n){for(let i=Vh(n);null!==i;i=Uh(i))for(let r=10;r<i.length;r++){const o=i[r];if(Xl(o))if(512&o[2]){const s=o[1];kc(s,o,s.template,o[8])}else o[5]>0&&vp(o)}const e=n[1].components;if(null!==e)for(let i=0;i<e.length;i++){const r=on(e[i],n);Xl(r)&&r[5]>0&&vp(r)}}function TO(n,t){const e=on(t,n),i=e[1];(function MO(n,t){for(let e=t.length;e<n.blueprint.length;e++)t.push(n.blueprint[e])})(i,e),up(i,e,e[8])}function xc(n,t){return n[13]?n[14][4]=t:n[13]=t,n[14]=t,t}function Ap(n){for(;n;){n[2]|=32;const t=Js(n);if(H1(n)&&!t)return n;n=t}return null}function Dc(n,t,e,i=!0){const r=t[10];r.begin&&r.begin();try{kc(n,t,n.template,e)}catch(s){throw i&&cA(t,s),s}finally{r.end&&r.end()}}function Sp(n,t,e){dh(0),t(n,e)}function sA(n){return n[7]||(n[7]=[])}function aA(n){return n.cleanup||(n.cleanup=[])}function lA(n,t,e){return(null===n||Nn(n))&&(e=function X1(n){for(;Array.isArray(n);){if("object"==typeof n[1])return n;n=n[0]}return null}(e[t.index])),e[11]}function cA(n,t){const e=n[9],i=e?e.get(Ai,null):null;i&&i.handleError(t)}function Cp(n,t,e,i,r){for(let o=0;o<e.length;){const s=e[o++],a=e[o++],l=t[s],c=n.data[s];null!==c.setInput?c.setInput(l,r,i,a):l[a]=r}}function Ci(n,t,e){const i=Yl(t,n);!function Qy(n,t,e){n.setValue(t,e)}(n[11],i,e)}function wc(n,t,e){let i=e?n.styles:null,r=e?n.classes:null,o=0;if(null!==t)for(let s=0;s<t.length;s++){const a=t[s];"number"==typeof a?o=a:1==o?r=Wu(r,a):2==o&&(i=Wu(i,a+": "+t[++s]+";"))}e?n.styles=i:n.stylesWithoutHost=i,e?n.classes=r:n.classesWithoutHost=r}function Ec(n,t,e,i,r=!1){for(;null!==e;){const o=t[e.index];if(null!==o&&i.push(yt(o)),Un(o))for(let a=10;a<o.length;a++){const l=o[a],c=l[1].firstChild;null!==c&&Ec(l[1],l,c,i)}const s=e.type;if(8&s)Ec(n,t,e.child,i);else if(32&s){const a=Fh(e,t);let l;for(;l=a();)i.push(l)}else if(16&s){const a=rv(t,e);if(Array.isArray(a))i.push(...a);else{const l=Js(t[16]);Ec(l[1],l,a,i,!0)}}e=r?e.projectionNext:e.next}return i}class Zs{get rootNodes(){const t=this._lView,e=t[1];return Ec(e,t,e.firstChild,[])}constructor(t,e){this._lView=t,this._cdRefInjectingView=e,this._appRef=null,this._attachedToViewContainer=!1}get context(){return this._lView[8]}set context(t){this._lView[8]=t}get destroyed(){return 128==(128&this._lView[2])}destroy(){if(this._appRef)this._appRef.detachView(this);else if(this._attachedToViewContainer){const t=this._lView[3];if(Un(t)){const e=t[8],i=e?e.indexOf(this):-1;i>-1&&(_h(t,i),sc(e,i))}this._attachedToViewContainer=!1}zy(this._lView[1],this._lView)}onDestroy(t){$v(this._lView[1],this._lView,null,t)}markForCheck(){Ap(this._cdRefInjectingView||this._lView)}detach(){this._lView[2]&=-65}reattach(){this._lView[2]|=64}detectChanges(){Dc(this._lView[1],this._lView,this.context)}checkNoChanges(){}attachToViewContainerRef(){if(this._appRef)throw new C(902,!1);this._attachedToViewContainer=!0}detachFromAppRef(){this._appRef=null,function gT(n,t){Ws(n,t,t[11],2,null,null)}(this._lView[1],this._lView)}attachToAppRef(t){if(this._attachedToViewContainer)throw new C(902,!1);this._appRef=t}}class OO extends Zs{constructor(t){super(t),this._view=t}detectChanges(){const t=this._view;Dc(t[1],t,t[8],!1)}checkNoChanges(){}get context(){return null}}class dA extends kr{constructor(t){super(),this.ngModule=t}resolveComponentFactory(t){const e=Ve(t);return new $s(e,this.ngModule)}}function uA(n){const t=[];for(let e in n)n.hasOwnProperty(e)&&t.push({propName:n[e],templateName:e});return t}class VO{constructor(t,e){this.injector=t,this.parentInjector=e}get(t,e,i){i=Hl(i);const r=this.injector.get(t,ip,i);return r!==ip||e===ip?r:this.parentInjector.get(t,e,i)}}class $s extends Tv{get inputs(){return uA(this.componentDef.inputs)}get outputs(){return uA(this.componentDef.outputs)}constructor(t,e){super(),this.componentDef=t,this.ngModule=e,this.componentType=t.type,this.selector=function jM(n){return n.map(BM).join(",")}(t.selectors),this.ngContentSelectors=t.ngContentSelectors?t.ngContentSelectors:[],this.isBoundToModule=!!e}create(t,e,i,r){let o=(r=r||this.ngModule)instanceof yi?r:r?.injector;o&&null!==this.componentDef.getStandaloneInjector&&(o=this.componentDef.getStandaloneInjector(o)||o);const s=o?new VO(t,o):t,a=s.get(Ys,null);if(null===a)throw new C(407,!1);const l=s.get(vM,null),c=a.createRenderer(null,this.componentDef),d=this.componentDef.selectors[0][0]||"div",u=i?function dO(n,t,e){return n.selectRootElement(t,e===Fn.ShadowDom)}(c,i,this.componentDef.encapsulation):Ph(c,d,function FO(n){const t=n.toLowerCase();return"svg"===t?"svg":"math"===t?"math":null}(d)),h=this.componentDef.onPush?288:272,f=mp(0,null,null,1,0,null,null,null,null,null),m=Cc(null,f,null,h,null,null,a,c,l,s,null);let g,A;uh(m);try{const k=this.componentDef;let T,S=null;k.findHostDirectiveDefs?(T=[],S=new Map,k.findHostDirectiveDefs(k,T,S),T.push(k)):T=[k];const U=function NO(n,t){const e=n[1];return n[22]=t,Eo(e,22,2,"#host",null)}(m,u),Se=function PO(n,t,e,i,r,o,s,a){const l=r[1];!function _O(n,t,e,i){for(const r of n)t.mergedAttrs=_s(t.mergedAttrs,r.hostAttrs);null!==t.mergedAttrs&&(wc(t,t.mergedAttrs,!0),null!==e&&av(i,e,t))}(i,n,t,s);const c=o.createRenderer(t,e),d=Cc(r,Zv(e),null,e.onPush?32:16,r[n.index],n,o,c,a||null,null,null);return l.firstCreatePass&&bp(l,n,i.length-1),xc(r,d),r[n.index]=d}(U,u,k,T,m,a,c);A=zb(f,22),u&&function jO(n,t,e,i){if(i)gh(n,e,["ng-version",AM.full]);else{const{attrs:r,classes:o}=function qM(n){const t=[],e=[];let i=1,r=2;for(;i<n.length;){let o=n[i];if("string"==typeof o)2===r?""!==o&&t.push(o,n[++i]):8===r&&e.push(o);else{if(!Pn(r))break;r=o}i++}return{attrs:t,classes:e}}(t.selectors[0]);r&&gh(n,e,r),o&&o.length>0&&sv(n,e,o.join(" "))}}(c,k,u,i),void 0!==e&&function qO(n,t,e){const i=n.projection=[];for(let r=0;r<t.length;r++){const o=e[r];i.push(null!=o?Array.from(o):null)}}(A,this.ngContentSelectors,e),g=function BO(n,t,e,i,r,o){const s=vt(),a=r[1],l=rn(s,r);iA(a,r,s,e,null,i);for(let d=0;d<e.length;d++)It(br(r,a,s.directiveStart+d,s),r);rA(a,r,s),l&&It(l,r);const c=br(r,a,s.directiveStart+s.componentOffset,s);if(n[8]=r[8]=c,null!==o)for(const d of o)d(c,t);return hp(a,s,n),c}(Se,k,T,S,m,[KO]),up(f,m,null)}finally{hh()}return new UO(this.componentType,g,xo(A,m),m,A)}}class UO extends pM{constructor(t,e,i,r,o){super(),this.location=i,this._rootLView=r,this._tNode=o,this.instance=e,this.hostView=this.changeDetectorRef=new OO(r),this.componentType=t}setInput(t,e){const i=this._tNode.inputs;let r;if(null!==i&&(r=i[t])){const o=this._rootLView;Cp(o[1],o,r,t,e),nA(o,this._tNode.index)}}get injector(){return new mo(this._tNode,this._rootLView)}destroy(){this.hostView.destroy()}onDestroy(t){this.hostView.onDestroy(t)}}function KO(){const n=vt();Zl(x()[1],n)}function K(n){let t=function hA(n){return Object.getPrototypeOf(n.prototype).constructor}(n.type),e=!0;const i=[n];for(;t;){let r;if(Nn(n))r=t.\u0275cmp||t.\u0275dir;else{if(t.\u0275cmp)throw new C(903,!1);r=t.\u0275dir}if(r){if(e){i.push(r);const s=n;s.inputs=kp(n.inputs),s.declaredInputs=kp(n.declaredInputs),s.outputs=kp(n.outputs);const a=r.hostBindings;a&&WO(n,a);const l=r.viewQuery,c=r.contentQueries;if(l&&LO(n,l),c&&JO(n,c),Ju(n.inputs,r.inputs),Ju(n.declaredInputs,r.declaredInputs),Ju(n.outputs,r.outputs),Nn(r)&&r.data.animation){const d=n.data;d.animation=(d.animation||[]).concat(r.data.animation)}}const o=r.features;if(o)for(let s=0;s<o.length;s++){const a=o[s];a&&a.ngInherit&&a(n),a===K&&(e=!1)}}t=Object.getPrototypeOf(t)}!function HO(n){let t=0,e=null;for(let i=n.length-1;i>=0;i--){const r=n[i];r.hostVars=t+=r.hostVars,r.hostAttrs=_s(r.hostAttrs,e=_s(e,r.hostAttrs))}}(i)}function kp(n){return n===ui?{}:n===we?[]:n}function LO(n,t){const e=n.viewQuery;n.viewQuery=e?(i,r)=>{t(i,r),e(i,r)}:t}function JO(n,t){const e=n.contentQueries;n.contentQueries=e?(i,r,o)=>{t(i,r,o),e(i,r,o)}:t}function WO(n,t){const e=n.hostBindings;n.hostBindings=e?(i,r)=>{t(i,r),e(i,r)}:t}let Ic=null;function Dr(){if(!Ic){const n=Be.Symbol;if(n&&n.iterator)Ic=n.iterator;else{const t=Object.getOwnPropertyNames(Map.prototype);for(let e=0;e<t.length;++e){const i=t[e];"entries"!==i&&"size"!==i&&Map.prototype[i]===Map.prototype.entries&&(Ic=i)}}}return Ic}function ea(n){return!!xp(n)&&(Array.isArray(n)||!(n instanceof Map)&&Dr()in n)}function xp(n){return null!==n&&("function"==typeof n||"object"==typeof n)}function Yn(n,t,e){return n[t]=e}function Rt(n,t,e){return!Object.is(n[t],e)&&(n[t]=e,!0)}function wr(n,t,e,i){const r=Rt(n,t,e);return Rt(n,t+1,i)||r}function pe(n,t,e,i){const r=x();return Rt(r,po(),t)&&(Ae(),zn(Je(),r,n,t,e,i)),pe}function Ro(n,t,e,i){return Rt(n,po(),e)?t+$(e)+i:ne}function To(n,t,e,i,r,o){const a=wr(n,function fi(){return te.lFrame.bindingIndex}(),e,r);return mi(2),a?t+$(e)+i+$(r)+o:ne}function J(n,t,e,i,r,o,s,a){const l=x(),c=Ae(),d=n+22,u=c.firstCreatePass?function n2(n,t,e,i,r,o,s,a,l){const c=t.consts,d=Eo(t,n,4,s||null,Ki(c,a));gp(t,e,d,Ki(c,l)),Zl(t,d);const u=d.tViews=mp(2,d,i,r,o,t.directiveRegistry,t.pipeRegistry,null,t.schemas,c);return null!==t.queries&&(t.queries.template(t,d),u.queries=t.queries.embeddedTView(d)),d}(d,c,l,t,e,i,r,o,s):c.data[d];Wn(u,!1);const h=l[11].createComment("");hc(c,l,h,u),It(h,l),xc(l,l[d]=oA(h,l,h,u)),zl(u)&&pp(c,l,u),null!=s&&fp(l,u,a)}function Er(n){return function ho(n,t){return n[t]}(function sR(){return te.lFrame.contextLView}(),22+n)}function I(n,t,e){const i=x();return Rt(i,po(),t)&&ln(Ae(),Je(),i,n,t,i[11],e,!1),I}function Dp(n,t,e,i,r){const s=r?"class":"style";Cp(n,e,t.inputs[s],s,i)}function b(n,t,e,i){const r=x(),o=Ae(),s=22+n,a=r[11],l=r[s]=Ph(a,t,function mR(){return te.lFrame.currentNamespace}()),c=o.firstCreatePass?function o2(n,t,e,i,r,o,s){const a=t.consts,c=Eo(t,n,2,r,Ki(a,o));return gp(t,e,c,Ki(a,s)),null!==c.attrs&&wc(c,c.attrs,!1),null!==c.mergedAttrs&&wc(c,c.mergedAttrs,!0),null!==t.queries&&t.queries.elementStart(t,c),c}(s,o,r,0,t,e,i):o.data[s];return Wn(c,!0),av(a,l,c),32!=(32&c.flags)&&hc(o,r,l,c),0===function tR(){return te.lFrame.elementDepthCount}()&&It(l,r),function nR(){te.lFrame.elementDepthCount++}(),zl(c)&&(pp(o,r,c),hp(o,c,r)),null!==i&&fp(r,c),b}function y(){let n=vt();sh()?ah():(n=n.parent,Wn(n,!1));const t=n;!function iR(){te.lFrame.elementDepthCount--}();const e=Ae();return e.firstCreatePass&&(Zl(e,n),ih(n)&&e.queries.elementEnd(n)),null!=t.classesWithoutHost&&function vR(n){return 0!=(8&n.flags)}(t)&&Dp(e,t,x(),t.classesWithoutHost,!0),null!=t.stylesWithoutHost&&function AR(n){return 0!=(16&n.flags)}(t)&&Dp(e,t,x(),t.stylesWithoutHost,!1),y}function q(n,t,e,i){return b(n,t,e,i),y(),q}function Xn(){return x()}function na(n){return!!n&&"function"==typeof n.then}const Ip=function wA(n){return!!n&&"function"==typeof n.subscribe};function H(n,t,e,i){const r=x(),o=Ae(),s=vt();return EA(o,r,r[11],s,n,t,i),H}function Tc(n,t){const e=vt(),i=x(),r=Ae();return EA(r,i,lA(ch(r.data),e,i),e,n,t),Tc}function EA(n,t,e,i,r,o,s){const a=zl(i),c=n.firstCreatePass&&aA(n),d=t[8],u=sA(t);let h=!0;if(3&i.type||s){const g=rn(i,t),A=s?s(g):g,k=u.length,T=s?U=>s(yt(U[i.index])):i.index;let S=null;if(!s&&a&&(S=function a2(n,t,e,i){const r=n.cleanup;if(null!=r)for(let o=0;o<r.length-1;o+=2){const s=r[o];if(s===e&&r[o+1]===i){const a=t[7],l=r[o+2];return a.length>l?a[l]:null}"string"==typeof s&&(o+=2)}return null}(n,t,r,i.index)),null!==S)(S.__ngLastListenerFn__||S).__ngNextListenerFn__=o,S.__ngLastListenerFn__=o,h=!1;else{o=RA(i,t,d,o,!1);const U=e.listen(A,r,o);u.push(o,U),c&&c.push(r,T,k,k+1)}}else o=RA(i,t,d,o,!1);const f=i.outputs;let m;if(h&&null!==f&&(m=f[r])){const g=m.length;if(g)for(let A=0;A<g;A+=2){const Se=t[m[A]][m[A+1]].subscribe(o),xe=u.length;u.push(o,Se),c&&c.push(r,i.index,xe,-(xe+1))}}}function IA(n,t,e,i){try{return!1!==e(i)}catch(r){return cA(n,r),!1}}function RA(n,t,e,i,r){return function o(s){if(s===Function)return i;Ap(n.componentOffset>-1?on(n.index,t):t);let l=IA(t,0,i,s),c=o.__ngNextListenerFn__;for(;c;)l=IA(t,0,c,s)&&l,c=c.__ngNextListenerFn__;return r&&!1===l&&(s.preventDefault(),s.returnValue=!1),l}}function re(n=1){return function uR(n){return(te.lFrame.contextLView=function hR(n,t){for(;n>0;)t=t[15],n--;return t}(n,te.lFrame.contextLView))[8]}(n)}function l2(n,t){let e=null;const i=function UM(n){const t=n.attrs;if(null!=t){const e=t.indexOf(5);if(!(1&e))return t[e+1]}return null}(n);for(let r=0;r<t.length;r++){const o=t[r];if("*"!==o){if(null===i?Nv(n,o,!0):_M(i,o))return r}else e=r}return e}function Tt(n){const t=x()[16][6];if(!t.projection){const i=t.projection=qs(n?n.length:1,null),r=i.slice();let o=t.child;for(;null!==o;){const s=n?l2(o,n):0;null!==s&&(r[s]?r[s].projectionNext=o:i[s]=o,r[s]=o),o=o.next}}}function Ie(n,t=0,e){const i=x(),r=Ae(),o=Eo(r,22+n,16,null,e||null);null===o.projection&&(o.projection=t),ah(),32!=(32&o.flags)&&function xT(n,t,e){ov(t[11],0,t,e,Yy(n,e,t),ev(e.parent||t[6],e,t))}(r,i,o)}function ia(n,t,e,i,r){const o=x(),s=Ro(o,t,e,i);return s!==ne&&ln(Ae(),Je(),o,n,s,o[11],r,!1),ia}function Mc(n,t){return n<<17|t<<2}function Ji(n){return n>>17&32767}function Rp(n){return 2|n}function Ir(n){return(131068&n)>>2}function Tp(n,t){return-131069&n|t<<2}function Mp(n){return 1|n}function BA(n,t,e,i,r){const o=n[e+1],s=null===t;let a=i?Ji(o):Ir(o),l=!1;for(;0!==a&&(!1===l||s);){const d=n[a+1];f2(n[a],t)&&(l=!0,n[a+1]=i?Mp(d):Rp(d)),a=i?Ji(d):Ir(d)}l&&(n[e+1]=i?Rp(o):Mp(o))}function f2(n,t){return null===n||null==t||(Array.isArray(n)?n[1]:n)===t||!(!Array.isArray(n)||"string"!=typeof t)&&Ao(n,t)>=0}const pt={textEnd:0,key:0,keyEnd:0,value:0,valueEnd:0};function jA(n){return n.substring(pt.key,pt.keyEnd)}function qA(n,t){const e=pt.textEnd;return e===t?-1:(t=pt.keyEnd=function y2(n,t,e){for(;t<e&&n.charCodeAt(t)>32;)t++;return t}(n,pt.key=t,e),Po(n,t,e))}function Po(n,t,e){for(;t<e&&n.charCodeAt(t)<=32;)t++;return t}function _n(n,t,e){return Bn(n,t,e,!1),_n}function me(n,t){return Bn(n,t,null,!0),me}function $n(n,t){for(let e=function g2(n){return function HA(n){pt.key=0,pt.keyEnd=0,pt.value=0,pt.valueEnd=0,pt.textEnd=n.length}(n),qA(n,Po(n,0,pt.textEnd))}(t);e>=0;e=qA(t,e))sn(n,jA(t),!0)}function Bn(n,t,e,i){const r=x(),o=Ae(),s=mi(2);o.firstUpdatePass&&QA(o,n,s,i),t!==ne&&Rt(r,s,t)&&zA(o,o.data[_t()],r,r[11],n,r[s+1]=function R2(n,t){return null==n||("string"==typeof t?n+=t:"object"==typeof n&&(n=_e(an(n)))),n}(t,e),i,s)}function WA(n,t){return t>=n.expandoStartIndex}function QA(n,t,e,i){const r=n.data;if(null===r[e+1]){const o=r[_t()],s=WA(n,e);XA(o,i)&&null===t&&!s&&(t=!1),t=function k2(n,t,e,i){const r=ch(n);let o=i?t.residualClasses:t.residualStyles;if(null===r)0===(i?t.classBindings:t.styleBindings)&&(e=ra(e=Op(null,n,t,e,i),t.attrs,i),o=null);else{const s=t.directiveStylingLast;if(-1===s||n[s]!==r)if(e=Op(r,n,t,e,i),null===o){let l=function x2(n,t,e){const i=e?t.classBindings:t.styleBindings;if(0!==Ir(i))return n[Ji(i)]}(n,t,i);void 0!==l&&Array.isArray(l)&&(l=Op(null,n,t,l[1],i),l=ra(l,t.attrs,i),function D2(n,t,e,i){n[Ji(e?t.classBindings:t.styleBindings)]=i}(n,t,i,l))}else o=function w2(n,t,e){let i;const r=t.directiveEnd;for(let o=1+t.directiveStylingLast;o<r;o++)i=ra(i,n[o].hostAttrs,e);return ra(i,t.attrs,e)}(n,t,i)}return void 0!==o&&(i?t.residualClasses=o:t.residualStyles=o),e}(r,o,t,i),function h2(n,t,e,i,r,o){let s=o?t.classBindings:t.styleBindings,a=Ji(s),l=Ir(s);n[i]=e;let d,c=!1;if(Array.isArray(e)?(d=e[1],(null===d||Ao(e,d)>0)&&(c=!0)):d=e,r)if(0!==l){const h=Ji(n[a+1]);n[i+1]=Mc(h,a),0!==h&&(n[h+1]=Tp(n[h+1],i)),n[a+1]=function d2(n,t){return 131071&n|t<<17}(n[a+1],i)}else n[i+1]=Mc(a,0),0!==a&&(n[a+1]=Tp(n[a+1],i)),a=i;else n[i+1]=Mc(l,0),0===a?a=i:n[l+1]=Tp(n[l+1],i),l=i;c&&(n[i+1]=Rp(n[i+1])),BA(n,d,i,!0),BA(n,d,i,!1),function p2(n,t,e,i,r){const o=r?n.residualClasses:n.residualStyles;null!=o&&"string"==typeof t&&Ao(o,t)>=0&&(e[i+1]=Mp(e[i+1]))}(t,d,n,i,o),s=Mc(a,l),o?t.classBindings=s:t.styleBindings=s}(r,o,t,e,s,i)}}function Op(n,t,e,i,r){let o=null;const s=e.directiveEnd;let a=e.directiveStylingLast;for(-1===a?a=e.directiveStart:a++;a<s&&(o=t[a],i=ra(i,o.hostAttrs,r),o!==n);)a++;return null!==n&&(e.directiveStylingLast=a),i}function ra(n,t,e){const i=e?1:2;let r=-1;if(null!==t)for(let o=0;o<t.length;o++){const s=t[o];"number"==typeof s?r=s:r===i&&(Array.isArray(n)||(n=void 0===n?[]:["",n]),sn(n,s,!!e||t[++o]))}return void 0===n?null:n}function zA(n,t,e,i,r,o,s,a){if(!(3&t.type))return;const l=n.data,c=l[a+1],d=function u2(n){return 1==(1&n)}(c)?YA(l,t,e,r,Ir(c),s):void 0;Oc(d)||(Oc(o)||function c2(n){return 2==(2&n)}(c)&&(o=YA(l,null,e,r,a,s)),function wT(n,t,e,i,r){if(t)r?n.addClass(e,i):n.removeClass(e,i);else{let o=-1===i.indexOf("-")?void 0:Gt.DashCase;null==r?n.removeStyle(e,i,o):("string"==typeof r&&r.endsWith("!important")&&(r=r.slice(0,-10),o|=Gt.Important),n.setStyle(e,i,r,o))}}(i,s,Yl(_t(),e),r,o))}function YA(n,t,e,i,r,o){const s=null===t;let a;for(;r>0;){const l=n[r],c=Array.isArray(l),d=c?l[1]:l,u=null===d;let h=e[r+1];h===ne&&(h=u?we:void 0);let f=u?xh(h,i):d===i?h:void 0;if(c&&!Oc(f)&&(f=xh(l,i)),Oc(f)&&(a=f,s))return a;const m=n[r+1];r=s?Ji(m):Ir(m)}if(null!==t){let l=o?t.residualClasses:t.residualStyles;null!=l&&(a=xh(l,i))}return a}function Oc(n){return void 0!==n}function XA(n,t){return 0!=(n.flags&(t?8:16))}function E(n,t=""){const e=x(),i=Ae(),r=n+22,o=i.firstCreatePass?Eo(i,r,1,t,null):i.data[r],s=e[r]=function Nh(n,t){return n.createText(t)}(e[11],t);hc(i,e,s,o),Wn(o,!1)}function gt(n){return An("",n,""),gt}function An(n,t,e){const i=x(),r=Ro(i,n,t,e);return r!==ne&&Ci(i,_t(),r),An}function Fp(n,t,e,i,r){const o=x(),s=To(o,n,t,e,i,r);return s!==ne&&Ci(o,_t(),s),Fp}function oS(n,t,e){!function jn(n,t,e,i){const r=Ae(),o=mi(2);r.firstUpdatePass&&QA(r,null,o,i);const s=x();if(e!==ne&&Rt(s,o,e)){const a=r.data[_t()];if(XA(a,i)&&!WA(r,o)){let l=i?a.classesWithoutHost:a.stylesWithoutHost;null!==l&&(e=Wu(l,e||"")),Dp(r,a,s,e,i)}else!function I2(n,t,e,i,r,o,s,a){r===ne&&(r=we);let l=0,c=0,d=0<r.length?r[0]:null,u=0<o.length?o[0]:null;for(;null!==d||null!==u;){const h=l<r.length?r[l+1]:void 0,f=c<o.length?o[c+1]:void 0;let g,m=null;d===u?(l+=2,c+=2,h!==f&&(m=u,g=f)):null===u||null!==d&&d<u?(l+=2,m=d):(c+=2,m=u,g=f),null!==m&&zA(n,t,e,i,m,g,s,a),d=l<r.length?r[l]:null,u=c<o.length?o[c]:null}}(r,a,s,s[11],s[o+1],s[o+1]=function E2(n,t,e){if(null==e||""===e)return we;const i=[],r=an(e);if(Array.isArray(r))for(let o=0;o<r.length;o++)n(i,r[o],!0);else if("object"==typeof r)for(const o in r)r.hasOwnProperty(o)&&n(i,o,r[o]);else"string"==typeof r&&t(i,r);return i}(n,t,e),i,o)}}(sn,$n,Ro(x(),n,t,e),!0)}function Rr(n,t,e){const i=x();return Rt(i,po(),t)&&ln(Ae(),Je(),i,n,t,i[11],e,!0),Rr}function Fc(n,t,e){const i=x();if(Rt(i,po(),t)){const o=Ae(),s=Je();ln(o,s,i,n,t,lA(ch(o.data),s,i),e,!0)}return Fc}const Bo="en-US";let bS=Bo;function Np(n,t,e,i,r){if(n=Q(n),Array.isArray(n))for(let o=0;o<n.length;o++)Np(n[o],t,e,i,r);else{const o=Ae(),s=x();let a=Cr(n)?n:Q(n.provide),l=Rv(n);const c=vt(),d=1048575&c.providerIndexes,u=c.directiveStart,h=c.providerIndexes>>20;if(Cr(n)||!n.multi){const f=new Ps(l,r,p),m=_p(a,t,r?d:d+h,u);-1===m?(Ah(rc(c,s),o,a),Pp(o,n,t.length),t.push(a),c.directiveStart++,c.directiveEnd++,r&&(c.providerIndexes+=1048576),e.push(f),s.push(f)):(e[m]=f,s[m]=f)}else{const f=_p(a,t,d+h,u),m=_p(a,t,d,d+h),A=m>=0&&e[m];if(r&&!A||!r&&!(f>=0&&e[f])){Ah(rc(c,s),o,a);const k=function WF(n,t,e,i,r){const o=new Ps(n,e,p);return o.multi=[],o.index=t,o.componentProviders=0,KS(o,r,i&&!e),o}(r?JF:LF,e.length,r,i,l);!r&&A&&(e[m].providerFactory=k),Pp(o,n,t.length,0),t.push(a),c.directiveStart++,c.directiveEnd++,r&&(c.providerIndexes+=1048576),e.push(k),s.push(k)}else Pp(o,n,f>-1?f:m,KS(e[r?m:f],l,!r&&i));!r&&i&&A&&e[m].componentProviders++}}}function Pp(n,t,e,i){const r=Cr(t),o=function sM(n){return!!n.useClass}(t);if(r||o){const l=(o?Q(t.useClass):t).prototype.ngOnDestroy;if(l){const c=n.destroyHooks||(n.destroyHooks=[]);if(!r&&t.multi){const d=c.indexOf(e);-1===d?c.push(e,[i,l]):c[d+1].push(i,l)}else c.push(e,l)}}}function KS(n,t,e){return e&&n.componentProviders++,n.multi.push(t)-1}function _p(n,t,e,i){for(let r=e;r<i;r++)if(t[r]===n)return r;return-1}function LF(n,t,e,i){return Bp(this.multi,[])}function JF(n,t,e,i){const r=this.multi;let o;if(this.providerFactory){const s=this.providerFactory.componentProviders,a=br(e,e[1],this.providerFactory.index,i);o=a.slice(0,s),Bp(r,o);for(let l=s;l<a.length;l++)o.push(a[l])}else o=[],Bp(r,o);return o}function Bp(n,t){for(let e=0;e<n.length;e++)t.push((0,n[e])());return t}function ve(n,t=[]){return e=>{e.providersResolver=(i,r)=>function HF(n,t,e){const i=Ae();if(i.firstCreatePass){const r=Nn(n);Np(e,i.data,i.blueprint,r,!0),Np(t,i.data,i.blueprint,r,!1)}}(i,r?r(n):n,t)}}class jo{}class HS{}class LS extends jo{constructor(t,e){super(),this._parent=e,this._bootstrapComponents=[],this.destroyCbs=[],this.componentFactoryResolver=new dA(this);const i=tn(t);this._bootstrapComponents=Si(i.bootstrap),this._r3Injector=Hv(t,e,[{provide:jo,useValue:this},{provide:kr,useValue:this.componentFactoryResolver}],_e(t),new Set(["environment"])),this._r3Injector.resolveInjectorInitializers(),this.instance=this._r3Injector.get(t)}get injector(){return this._r3Injector}destroy(){const t=this._r3Injector;!t.destroyed&&t.destroy(),this.destroyCbs.forEach(e=>e()),this.destroyCbs=null}onDestroy(t){this.destroyCbs.push(t)}}class jp extends HS{constructor(t){super(),this.moduleType=t}create(t){return new LS(this.moduleType,t)}}class GF extends jo{constructor(t,e,i){super(),this.componentFactoryResolver=new dA(this),this.instance=null;const r=new Iv([...t,{provide:jo,useValue:this},{provide:kr,useValue:this.componentFactoryResolver}],e||Ac(),i,new Set(["environment"]));this.injector=r,r.resolveInjectorInitializers()}destroy(){this.injector.destroy()}onDestroy(t){this.injector.onDestroy(t)}}function _c(n,t,e=null){return new GF(n,t,e).injector}let zF=(()=>{class n{constructor(e){this._injector=e,this.cachedInjectors=new Map}getOrCreateStandaloneInjector(e){if(!e.standalone)return null;if(!this.cachedInjectors.has(e.id)){const i=xv(0,e.type),r=i.length>0?_c([i],this._injector,`Standalone[${e.type.name}]`):null;this.cachedInjectors.set(e.id,r)}return this.cachedInjectors.get(e.id)}ngOnDestroy(){try{for(const e of this.cachedInjectors.values())null!==e&&e.destroy()}finally{this.cachedInjectors.clear()}}}return n.\u0275prov=R({token:n,providedIn:"environment",factory:()=>new n(v(yi))}),n})();function qp(n){n.getStandaloneInjector=t=>t.get(zF).getOrCreateStandaloneInjector(n)}function Bc(n,t,e,i){return function ZS(n,t,e,i,r,o){const s=t+e;return Rt(n,s,r)?Yn(n,s+1,o?i.call(o,r):i(r)):da(n,s+1)}(x(),Pt(),n,t,e,i)}function XS(n,t,e,i,r){return function $S(n,t,e,i,r,o,s){const a=t+e;return wr(n,a,r,o)?Yn(n,a+2,s?i.call(s,r,o):i(r,o)):da(n,a+2)}(x(),Pt(),n,t,e,i,r)}function da(n,t){const e=n[t];return e===ne?void 0:e}function Hp(n){return t=>{setTimeout(n,void 0,t)}}const O=class vV extends P{constructor(t=!1){super(),this.__isAsync=t}emit(t){super.next(t)}subscribe(t,e,i){let r=t,o=e||(()=>null),s=i;if(t&&"object"==typeof t){const l=t;r=l.next?.bind(l),o=l.error?.bind(l),s=l.complete?.bind(l)}this.__isAsync&&(o=Hp(o),r&&(r=Hp(r)),s&&(s=Hp(s)));const a=super.subscribe({next:r,error:o,complete:s});return t instanceof ke&&t.add(a),a}};function AV(){return this._results[Dr()]()}class qo{get changes(){return this._changes||(this._changes=new O)}constructor(t=!1){this._emitDistinctChangesOnly=t,this.dirty=!0,this._results=[],this._changesDetected=!1,this._changes=null,this.length=0,this.first=void 0,this.last=void 0;const e=Dr(),i=qo.prototype;i[e]||(i[e]=AV)}get(t){return this._results[t]}map(t){return this._results.map(t)}filter(t){return this._results.filter(t)}find(t){return this._results.find(t)}reduce(t,e){return this._results.reduce(t,e)}forEach(t){this._results.forEach(t)}some(t){return this._results.some(t)}toArray(){return this._results.slice()}toString(){return this._results.toString()}reset(t,e){const i=this;i.dirty=!1;const r=function bn(n){return n.flat(Number.POSITIVE_INFINITY)}(t);(this._changesDetected=!function TR(n,t,e){if(n.length!==t.length)return!1;for(let i=0;i<n.length;i++){let r=n[i],o=t[i];if(e&&(r=e(r),o=e(o)),o!==r)return!1}return!0}(i._results,r,e))&&(i._results=r,i.length=r.length,i.last=r[this.length-1],i.first=r[0])}notifyOnChanges(){this._changes&&(this._changesDetected||!this._emitDistinctChangesOnly)&&this._changes.emit(this)}setDirty(){this.dirty=!0}destroy(){this.changes.complete(),this.changes.unsubscribe()}}let qn=(()=>{class n{}return n.__NG_ELEMENT_ID__=kV,n})();const SV=qn,CV=class extends SV{constructor(t,e,i){super(),this._declarationLView=t,this._declarationTContainer=e,this.elementRef=i}createEmbeddedView(t,e){const i=this._declarationTContainer.tViews,r=Cc(this._declarationLView,i,t,16,null,i.declTNode,null,null,null,null,e||null);r[17]=this._declarationLView[this._declarationTContainer.index];const s=this._declarationLView[19];return null!==s&&(r[19]=s.createEmbeddedView(i)),up(i,r,t),new Zs(r)}};function kV(){return jc(vt(),x())}function jc(n,t){return 4&n.type?new CV(t,n,xo(n,t)):null}let jt=(()=>{class n{}return n.__NG_ELEMENT_ID__=xV,n})();function xV(){return s0(vt(),x())}const DV=jt,r0=class extends DV{constructor(t,e,i){super(),this._lContainer=t,this._hostTNode=e,this._hostLView=i}get element(){return xo(this._hostTNode,this._hostLView)}get injector(){return new mo(this._hostTNode,this._hostLView)}get parentInjector(){const t=vh(this._hostTNode,this._hostLView);if(py(t)){const e=nc(t,this._hostLView),i=tc(t);return new mo(e[1].data[i+8],e)}return new mo(null,this._hostLView)}clear(){for(;this.length>0;)this.remove(this.length-1)}get(t){const e=o0(this._lContainer);return null!==e&&e[t]||null}get length(){return this._lContainer.length-10}createEmbeddedView(t,e,i){let r,o;"number"==typeof i?r=i:null!=i&&(r=i.index,o=i.injector);const s=t.createEmbeddedView(e||{},o);return this.insert(s,r),s}createComponent(t,e,i,r,o){const s=t&&!function js(n){return"function"==typeof n}(t);let a;if(s)a=e;else{const u=e||{};a=u.index,i=u.injector,r=u.projectableNodes,o=u.environmentInjector||u.ngModuleRef}const l=s?t:new $s(Ve(t)),c=i||this.parentInjector;if(!o&&null==l.ngModule){const h=(s?c:this.parentInjector).get(yi,null);h&&(o=h)}const d=l.create(c,r,void 0,o);return this.insert(d.hostView,a),d}insert(t,e){const i=t._lView,r=i[1];if(function eR(n){return Un(n[3])}(i)){const d=this.indexOf(t);if(-1!==d)this.detach(d);else{const u=i[3],h=new r0(u,u[6],u[3]);h.detach(h.indexOf(t))}}const o=this._adjustIndex(e),s=this._lContainer;!function yT(n,t,e,i){const r=10+i,o=e.length;i>0&&(e[r-1][4]=t),i<o-10?(t[4]=e[r],Dy(e,10+i,t)):(e.push(t),t[4]=null),t[3]=e;const s=t[17];null!==s&&e!==s&&function vT(n,t){const e=n[9];t[16]!==t[3][3][16]&&(n[2]=!0),null===e?n[9]=[t]:e.push(t)}(s,t);const a=t[19];null!==a&&a.insertView(n),t[2]|=64}(r,i,s,o);const a=qh(o,s),l=i[11],c=uc(l,s[7]);return null!==c&&function mT(n,t,e,i,r,o){i[0]=r,i[6]=t,Ws(n,i,e,1,r,o)}(r,s[6],l,i,c,a),t.attachToViewContainerRef(),Dy(Lp(s),o,t),t}move(t,e){return this.insert(t,e)}indexOf(t){const e=o0(this._lContainer);return null!==e?e.indexOf(t):-1}remove(t){const e=this._adjustIndex(t,-1),i=_h(this._lContainer,e);i&&(sc(Lp(this._lContainer),e),zy(i[1],i))}detach(t){const e=this._adjustIndex(t,-1),i=_h(this._lContainer,e);return i&&null!=sc(Lp(this._lContainer),e)?new Zs(i):null}_adjustIndex(t,e=0){return t??this.length+e}};function o0(n){return n[8]}function Lp(n){return n[8]||(n[8]=[])}function s0(n,t){let e;const i=t[n.index];if(Un(i))e=i;else{let r;if(8&n.type)r=yt(i);else{const o=t[11];r=o.createComment("");const s=rn(n,t);vr(o,uc(o,s),r,function kT(n,t){return n.nextSibling(t)}(o,s),!1)}t[n.index]=e=oA(i,t,r,n),xc(t,e)}return new r0(e,n,t)}class Jp{constructor(t){this.queryList=t,this.matches=null}clone(){return new Jp(this.queryList)}setDirty(){this.queryList.setDirty()}}class Wp{constructor(t=[]){this.queries=t}createEmbeddedView(t){const e=t.queries;if(null!==e){const i=null!==t.contentQueries?t.contentQueries[0]:e.length,r=[];for(let o=0;o<i;o++){const s=e.getByIndex(o);r.push(this.queries[s.indexInDeclarationView].clone())}return new Wp(r)}return null}insertView(t){this.dirtyQueriesWithMatches(t)}detachView(t){this.dirtyQueriesWithMatches(t)}dirtyQueriesWithMatches(t){for(let e=0;e<this.queries.length;e++)null!==u0(t,e).matches&&this.queries[e].setDirty()}}class a0{constructor(t,e,i=null){this.predicate=t,this.flags=e,this.read=i}}class Qp{constructor(t=[]){this.queries=t}elementStart(t,e){for(let i=0;i<this.queries.length;i++)this.queries[i].elementStart(t,e)}elementEnd(t){for(let e=0;e<this.queries.length;e++)this.queries[e].elementEnd(t)}embeddedTView(t){let e=null;for(let i=0;i<this.length;i++){const r=null!==e?e.length:0,o=this.getByIndex(i).embeddedTView(t,r);o&&(o.indexInDeclarationView=i,null!==e?e.push(o):e=[o])}return null!==e?new Qp(e):null}template(t,e){for(let i=0;i<this.queries.length;i++)this.queries[i].template(t,e)}getByIndex(t){return this.queries[t]}get length(){return this.queries.length}track(t){this.queries.push(t)}}class Gp{constructor(t,e=-1){this.metadata=t,this.matches=null,this.indexInDeclarationView=-1,this.crossesNgTemplate=!1,this._appliesToNextNode=!0,this._declarationNodeIndex=e}elementStart(t,e){this.isApplyingToNode(e)&&this.matchTNode(t,e)}elementEnd(t){this._declarationNodeIndex===t.index&&(this._appliesToNextNode=!1)}template(t,e){this.elementStart(t,e)}embeddedTView(t,e){return this.isApplyingToNode(t)?(this.crossesNgTemplate=!0,this.addMatch(-t.index,e),new Gp(this.metadata)):null}isApplyingToNode(t){if(this._appliesToNextNode&&1!=(1&this.metadata.flags)){const e=this._declarationNodeIndex;let i=t.parent;for(;null!==i&&8&i.type&&i.index!==e;)i=i.parent;return e===(null!==i?i.index:-1)}return this._appliesToNextNode}matchTNode(t,e){const i=this.metadata.predicate;if(Array.isArray(i))for(let r=0;r<i.length;r++){const o=i[r];this.matchTNodeWithReadOption(t,e,wV(e,o)),this.matchTNodeWithReadOption(t,e,oc(e,t,o,!1,!1))}else i===qn?4&e.type&&this.matchTNodeWithReadOption(t,e,-1):this.matchTNodeWithReadOption(t,e,oc(e,t,i,!1,!1))}matchTNodeWithReadOption(t,e,i){if(null!==i){const r=this.metadata.read;if(null!==r)if(r===z||r===jt||r===qn&&4&e.type)this.addMatch(e.index,-2);else{const o=oc(e,t,r,!1,!1);null!==o&&this.addMatch(e.index,o)}else this.addMatch(e.index,i)}}addMatch(t,e){null===this.matches?this.matches=[t,e]:this.matches.push(t,e)}}function wV(n,t){const e=n.localNames;if(null!==e)for(let i=0;i<e.length;i+=2)if(e[i]===t)return e[i+1];return null}function IV(n,t,e,i){return-1===e?function EV(n,t){return 11&n.type?xo(n,t):4&n.type?jc(n,t):null}(t,n):-2===e?function RV(n,t,e){return e===z?xo(t,n):e===qn?jc(t,n):e===jt?s0(t,n):void 0}(n,t,i):br(n,n[1],e,t)}function l0(n,t,e,i){const r=t[19].queries[i];if(null===r.matches){const o=n.data,s=e.matches,a=[];for(let l=0;l<s.length;l+=2){const c=s[l];a.push(c<0?null:IV(t,o[c],s[l+1],e.metadata.read))}r.matches=a}return r.matches}function zp(n,t,e,i){const r=n.queries.getByIndex(e),o=r.matches;if(null!==o){const s=l0(n,t,r,e);for(let a=0;a<o.length;a+=2){const l=o[a];if(l>0)i.push(s[a/2]);else{const c=o[a+1],d=t[-l];for(let u=10;u<d.length;u++){const h=d[u];h[17]===h[3]&&zp(h[1],h,c,i)}if(null!==d[9]){const u=d[9];for(let h=0;h<u.length;h++){const f=u[h];zp(f[1],f,c,i)}}}}}return i}function oe(n){const t=x(),e=Ae(),i=iy();dh(i+1);const r=u0(e,i);if(n.dirty&&function $1(n){return 4==(4&n[2])}(t)===(2==(2&r.metadata.flags))){if(null===r.matches)n.reset([]);else{const o=r.crossesNgTemplate?zp(e,t,i,[]):l0(e,t,r,i);n.reset(o,bM),n.notifyOnChanges()}return!0}return!1}function je(n,t,e){const i=Ae();i.firstCreatePass&&(d0(i,new a0(n,t,e),-1),2==(2&t)&&(i.staticViewQueries=!0)),c0(i,x(),t)}function At(n,t,e,i){const r=Ae();if(r.firstCreatePass){const o=vt();d0(r,new a0(t,e,i),o.index),function MV(n,t){const e=n.contentQueries||(n.contentQueries=[]);t!==(e.length?e[e.length-1]:-1)&&e.push(n.queries.length-1,t)}(r,n),2==(2&e)&&(r.staticContentQueries=!0)}c0(r,x(),e)}function se(){return function TV(n,t){return n[19].queries[t].queryList}(x(),iy())}function c0(n,t,e){const i=new qo(4==(4&e));$v(n,t,i,i.destroy),null===t[19]&&(t[19]=new Wp),t[19].queries.push(new Jp(i))}function d0(n,t,e){null===n.queries&&(n.queries=new Qp),n.queries.track(new Gp(t,e))}function u0(n,t){return n.queries.getByIndex(t)}function h0(n,t){return jc(n,t)}function Kc(...n){}const pa=new D("Application Initializer");let Hc=(()=>{class n{constructor(e){this.appInits=e,this.resolve=Kc,this.reject=Kc,this.initialized=!1,this.done=!1,this.donePromise=new Promise((i,r)=>{this.resolve=i,this.reject=r})}runInitializers(){if(this.initialized)return;const e=[],i=()=>{this.done=!0,this.resolve()};if(this.appInits)for(let r=0;r<this.appInits.length;r++){const o=this.appInits[r]();if(na(o))e.push(o);else if(Ip(o)){const s=new Promise((a,l)=>{o.subscribe({complete:a,error:l})});e.push(s)}}Promise.all(e).then(()=>{i()}).catch(r=>{this.reject(r)}),0===e.length&&i(),this.initialized=!0}}return n.\u0275fac=function(e){return new(e||n)(v(pa,8))},n.\u0275prov=R({token:n,factory:n.\u0275fac,providedIn:"root"}),n})();const Lo=new D("AppId",{providedIn:"root",factory:function M0(){return`${ef()}${ef()}${ef()}`}});function ef(){return String.fromCharCode(97+Math.floor(25*Math.random()))}const O0=new D("Platform Initializer"),fa=new D("Platform ID",{providedIn:"platform",factory:()=>"unknown"}),F0=new D("appBootstrapListener"),Kt=new D("AnimationModuleType");let XV=(()=>{class n{log(e){console.log(e)}warn(e){console.warn(e)}}return n.\u0275fac=function(e){return new(e||n)},n.\u0275prov=R({token:n,factory:n.\u0275fac,providedIn:"platform"}),n})();const ei=new D("LocaleId",{providedIn:"root",factory:()=>ie(ei,G.Optional|G.SkipSelf)||function ZV(){return typeof $localize<"u"&&$localize.locale||Bo}()});class eU{constructor(t,e){this.ngModuleFactory=t,this.componentFactories=e}}let V0=(()=>{class n{compileModuleSync(e){return new jp(e)}compileModuleAsync(e){return Promise.resolve(this.compileModuleSync(e))}compileModuleAndAllComponentsSync(e){const i=this.compileModuleSync(e),o=Si(tn(e).declarations).reduce((s,a)=>{const l=Ve(a);return l&&s.push(new $s(l)),s},[]);return new eU(i,o)}compileModuleAndAllComponentsAsync(e){return Promise.resolve(this.compileModuleAndAllComponentsSync(e))}clearCache(){}clearCacheFor(e){}getModuleId(e){}}return n.\u0275fac=function(e){return new(e||n)},n.\u0275prov=R({token:n,factory:n.\u0275fac,providedIn:"root"}),n})();const iU=(()=>Promise.resolve(0))();function tf(n){typeof Zone>"u"?iU.then(()=>{n&&n.apply(null,null)}):Zone.current.scheduleMicroTask("scheduleMicrotask",n)}class j{constructor({enableLongStackTrace:t=!1,shouldCoalesceEventChangeDetection:e=!1,shouldCoalesceRunChangeDetection:i=!1}){if(this.hasPendingMacrotasks=!1,this.hasPendingMicrotasks=!1,this.isStable=!0,this.onUnstable=new O(!1),this.onMicrotaskEmpty=new O(!1),this.onStable=new O(!1),this.onError=new O(!1),typeof Zone>"u")throw new C(908,!1);Zone.assertZonePatched();const r=this;r._nesting=0,r._outer=r._inner=Zone.current,Zone.TaskTrackingZoneSpec&&(r._inner=r._inner.fork(new Zone.TaskTrackingZoneSpec)),t&&Zone.longStackTraceZoneSpec&&(r._inner=r._inner.fork(Zone.longStackTraceZoneSpec)),r.shouldCoalesceEventChangeDetection=!i&&e,r.shouldCoalesceRunChangeDetection=i,r.lastRequestAnimationFrameId=-1,r.nativeRequestAnimationFrame=function rU(){let n=Be.requestAnimationFrame,t=Be.cancelAnimationFrame;if(typeof Zone<"u"&&n&&t){const e=n[Zone.__symbol__("OriginalDelegate")];e&&(n=e);const i=t[Zone.__symbol__("OriginalDelegate")];i&&(t=i)}return{nativeRequestAnimationFrame:n,nativeCancelAnimationFrame:t}}().nativeRequestAnimationFrame,function aU(n){const t=()=>{!function sU(n){n.isCheckStableRunning||-1!==n.lastRequestAnimationFrameId||(n.lastRequestAnimationFrameId=n.nativeRequestAnimationFrame.call(Be,()=>{n.fakeTopEventTask||(n.fakeTopEventTask=Zone.root.scheduleEventTask("fakeTopEventTask",()=>{n.lastRequestAnimationFrameId=-1,rf(n),n.isCheckStableRunning=!0,nf(n),n.isCheckStableRunning=!1},void 0,()=>{},()=>{})),n.fakeTopEventTask.invoke()}),rf(n))}(n)};n._inner=n._inner.fork({name:"angular",properties:{isAngularZone:!0},onInvokeTask:(e,i,r,o,s,a)=>{try{return P0(n),e.invokeTask(r,o,s,a)}finally{(n.shouldCoalesceEventChangeDetection&&"eventTask"===o.type||n.shouldCoalesceRunChangeDetection)&&t(),_0(n)}},onInvoke:(e,i,r,o,s,a,l)=>{try{return P0(n),e.invoke(r,o,s,a,l)}finally{n.shouldCoalesceRunChangeDetection&&t(),_0(n)}},onHasTask:(e,i,r,o)=>{e.hasTask(r,o),i===r&&("microTask"==o.change?(n._hasPendingMicrotasks=o.microTask,rf(n),nf(n)):"macroTask"==o.change&&(n.hasPendingMacrotasks=o.macroTask))},onHandleError:(e,i,r,o)=>(e.handleError(r,o),n.runOutsideAngular(()=>n.onError.emit(o)),!1)})}(r)}static isInAngularZone(){return typeof Zone<"u"&&!0===Zone.current.get("isAngularZone")}static assertInAngularZone(){if(!j.isInAngularZone())throw new C(909,!1)}static assertNotInAngularZone(){if(j.isInAngularZone())throw new C(909,!1)}run(t,e,i){return this._inner.run(t,e,i)}runTask(t,e,i,r){const o=this._inner,s=o.scheduleEventTask("NgZoneEvent: "+r,t,oU,Kc,Kc);try{return o.runTask(s,e,i)}finally{o.cancelTask(s)}}runGuarded(t,e,i){return this._inner.runGuarded(t,e,i)}runOutsideAngular(t){return this._outer.run(t)}}const oU={};function nf(n){if(0==n._nesting&&!n.hasPendingMicrotasks&&!n.isStable)try{n._nesting++,n.onMicrotaskEmpty.emit(null)}finally{if(n._nesting--,!n.hasPendingMicrotasks)try{n.runOutsideAngular(()=>n.onStable.emit(null))}finally{n.isStable=!0}}}function rf(n){n.hasPendingMicrotasks=!!(n._hasPendingMicrotasks||(n.shouldCoalesceEventChangeDetection||n.shouldCoalesceRunChangeDetection)&&-1!==n.lastRequestAnimationFrameId)}function P0(n){n._nesting++,n.isStable&&(n.isStable=!1,n.onUnstable.emit(null))}function _0(n){n._nesting--,nf(n)}class lU{constructor(){this.hasPendingMicrotasks=!1,this.hasPendingMacrotasks=!1,this.isStable=!0,this.onUnstable=new O,this.onMicrotaskEmpty=new O,this.onStable=new O,this.onError=new O}run(t,e,i){return t.apply(e,i)}runGuarded(t,e,i){return t.apply(e,i)}runOutsideAngular(t){return t()}runTask(t,e,i,r){return t.apply(e,i)}}const B0=new D(""),Lc=new D("");let lf,sf=(()=>{class n{constructor(e,i,r){this._ngZone=e,this.registry=i,this._pendingCount=0,this._isZoneStable=!0,this._didWork=!1,this._callbacks=[],this.taskTrackingZone=null,lf||(function cU(n){lf=n}(r),r.addToWindow(i)),this._watchAngularEvents(),e.run(()=>{this.taskTrackingZone=typeof Zone>"u"?null:Zone.current.get("TaskTrackingZone")})}_watchAngularEvents(){this._ngZone.onUnstable.subscribe({next:()=>{this._didWork=!0,this._isZoneStable=!1}}),this._ngZone.runOutsideAngular(()=>{this._ngZone.onStable.subscribe({next:()=>{j.assertNotInAngularZone(),tf(()=>{this._isZoneStable=!0,this._runCallbacksIfReady()})}})})}increasePendingRequestCount(){return this._pendingCount+=1,this._didWork=!0,this._pendingCount}decreasePendingRequestCount(){if(this._pendingCount-=1,this._pendingCount<0)throw new Error("pending async requests below zero");return this._runCallbacksIfReady(),this._pendingCount}isStable(){return this._isZoneStable&&0===this._pendingCount&&!this._ngZone.hasPendingMacrotasks}_runCallbacksIfReady(){if(this.isStable())tf(()=>{for(;0!==this._callbacks.length;){let e=this._callbacks.pop();clearTimeout(e.timeoutId),e.doneCb(this._didWork)}this._didWork=!1});else{let e=this.getPendingTasks();this._callbacks=this._callbacks.filter(i=>!i.updateCb||!i.updateCb(e)||(clearTimeout(i.timeoutId),!1)),this._didWork=!0}}getPendingTasks(){return this.taskTrackingZone?this.taskTrackingZone.macroTasks.map(e=>({source:e.source,creationLocation:e.creationLocation,data:e.data})):[]}addCallback(e,i,r){let o=-1;i&&i>0&&(o=setTimeout(()=>{this._callbacks=this._callbacks.filter(s=>s.timeoutId!==o),e(this._didWork,this.getPendingTasks())},i)),this._callbacks.push({doneCb:e,timeoutId:o,updateCb:r})}whenStable(e,i,r){if(r&&!this.taskTrackingZone)throw new Error('Task tracking zone is required when passing an update callback to whenStable(). Is "zone.js/plugins/task-tracking" loaded?');this.addCallback(e,i,r),this._runCallbacksIfReady()}getPendingRequestCount(){return this._pendingCount}registerApplication(e){this.registry.registerApplication(e,this)}unregisterApplication(e){this.registry.unregisterApplication(e)}findProviders(e,i,r){return[]}}return n.\u0275fac=function(e){return new(e||n)(v(j),v(af),v(Lc))},n.\u0275prov=R({token:n,factory:n.\u0275fac}),n})(),af=(()=>{class n{constructor(){this._applications=new Map}registerApplication(e,i){this._applications.set(e,i)}unregisterApplication(e){this._applications.delete(e)}unregisterAllApplications(){this._applications.clear()}getTestability(e){return this._applications.get(e)||null}getAllTestabilities(){return Array.from(this._applications.values())}getAllRootElements(){return Array.from(this._applications.keys())}findTestabilityInTree(e,i=!0){return lf?.findTestabilityInTree(this,e,i)??null}}return n.\u0275fac=function(e){return new(e||n)},n.\u0275prov=R({token:n,factory:n.\u0275fac,providedIn:"platform"}),n})(),Wi=null;const j0=new D("AllowMultipleToken"),cf=new D("PlatformDestroyListeners");class q0{constructor(t,e){this.name=t,this.token=e}}function H0(n,t,e=[]){const i=`Platform: ${t}`,r=new D(i);return(o=[])=>{let s=df();if(!s||s.injector.get(j0,!1)){const a=[...e,...o,{provide:r,useValue:!0}];n?n(a):function hU(n){if(Wi&&!Wi.get(j0,!1))throw new C(400,!1);Wi=n;const t=n.get(J0);(function K0(n){const t=n.get(O0,null);t&&t.forEach(e=>e())})(n)}(function L0(n=[],t){return ht.create({name:t,providers:[{provide:$h,useValue:"platform"},{provide:cf,useValue:new Set([()=>Wi=null])},...n]})}(a,i))}return function fU(n){const t=df();if(!t)throw new C(401,!1);return t}()}}function df(){return Wi?.get(J0)??null}let J0=(()=>{class n{constructor(e){this._injector=e,this._modules=[],this._destroyListeners=[],this._destroyed=!1}bootstrapModuleFactory(e,i){const r=function Q0(n,t){let e;return e="noop"===n?new lU:("zone.js"===n?void 0:n)||new j(t),e}(i?.ngZone,function W0(n){return{enableLongStackTrace:!1,shouldCoalesceEventChangeDetection:!(!n||!n.ngZoneEventCoalescing)||!1,shouldCoalesceRunChangeDetection:!(!n||!n.ngZoneRunCoalescing)||!1}}(i)),o=[{provide:j,useValue:r}];return r.run(()=>{const s=ht.create({providers:o,parent:this.injector,name:e.moduleType.name}),a=e.create(s),l=a.injector.get(Ai,null);if(!l)throw new C(402,!1);return r.runOutsideAngular(()=>{const c=r.onError.subscribe({next:d=>{l.handleError(d)}});a.onDestroy(()=>{Jc(this._modules,a),c.unsubscribe()})}),function G0(n,t,e){try{const i=e();return na(i)?i.catch(r=>{throw t.runOutsideAngular(()=>n.handleError(r)),r}):i}catch(i){throw t.runOutsideAngular(()=>n.handleError(i)),i}}(l,r,()=>{const c=a.injector.get(Hc);return c.runInitializers(),c.donePromise.then(()=>(function yS(n){fn(n,"Expected localeId to be defined"),"string"==typeof n&&(bS=n.toLowerCase().replace(/_/g,"-"))}(a.injector.get(ei,Bo)||Bo),this._moduleDoBootstrap(a),a))})})}bootstrapModule(e,i=[]){const r=z0({},i);return function dU(n,t,e){const i=new jp(e);return Promise.resolve(i)}(0,0,e).then(o=>this.bootstrapModuleFactory(o,r))}_moduleDoBootstrap(e){const i=e.injector.get(Mr);if(e._bootstrapComponents.length>0)e._bootstrapComponents.forEach(r=>i.bootstrap(r));else{if(!e.instance.ngDoBootstrap)throw new C(-403,!1);e.instance.ngDoBootstrap(i)}this._modules.push(e)}onDestroy(e){this._destroyListeners.push(e)}get injector(){return this._injector}destroy(){if(this._destroyed)throw new C(404,!1);this._modules.slice().forEach(i=>i.destroy()),this._destroyListeners.forEach(i=>i());const e=this._injector.get(cf,null);e&&(e.forEach(i=>i()),e.clear()),this._destroyed=!0}get destroyed(){return this._destroyed}}return n.\u0275fac=function(e){return new(e||n)(v(ht))},n.\u0275prov=R({token:n,factory:n.\u0275fac,providedIn:"platform"}),n})();function z0(n,t){return Array.isArray(t)?t.reduce(z0,n):{...n,...t}}let Mr=(()=>{class n{get destroyed(){return this._destroyed}get injector(){return this._injector}constructor(e,i,r){this._zone=e,this._injector=i,this._exceptionHandler=r,this._bootstrapListeners=[],this._views=[],this._runningTick=!1,this._stable=!0,this._destroyed=!1,this._destroyListeners=[],this.componentTypes=[],this.components=[],this._onMicrotaskEmptySubscription=this._zone.onMicrotaskEmpty.subscribe({next:()=>{this._zone.run(()=>{this.tick()})}});const o=new Me(a=>{this._stable=this._zone.isStable&&!this._zone.hasPendingMacrotasks&&!this._zone.hasPendingMicrotasks,this._zone.runOutsideAngular(()=>{a.next(this._stable),a.complete()})}),s=new Me(a=>{let l;this._zone.runOutsideAngular(()=>{l=this._zone.onStable.subscribe(()=>{j.assertNotInAngularZone(),tf(()=>{!this._stable&&!this._zone.hasPendingMacrotasks&&!this._zone.hasPendingMicrotasks&&(this._stable=!0,a.next(!0))})})});const c=this._zone.onUnstable.subscribe(()=>{j.assertInAngularZone(),this._stable&&(this._stable=!1,this._zone.runOutsideAngular(()=>{a.next(!1)}))});return()=>{l.unsubscribe(),c.unsubscribe()}});this.isStable=$t(o,s.pipe(Ib()))}bootstrap(e,i){const r=e instanceof Tv;if(!this._injector.get(Hc).done)throw!r&&function so(n){const t=Ve(n)||Dt(n)||Ut(n);return null!==t&&t.standalone}(e),new C(405,false);let s;s=r?e:this._injector.get(kr).resolveComponentFactory(e),this.componentTypes.push(s.componentType);const a=function uU(n){return n.isBoundToModule}(s)?void 0:this._injector.get(jo),c=s.create(ht.NULL,[],i||s.selector,a),d=c.location.nativeElement,u=c.injector.get(B0,null);return u?.registerApplication(d),c.onDestroy(()=>{this.detachView(c.hostView),Jc(this.components,c),u?.unregisterApplication(d)}),this._loadComponent(c),c}tick(){if(this._runningTick)throw new C(101,!1);try{this._runningTick=!0;for(let e of this._views)e.detectChanges()}catch(e){this._zone.runOutsideAngular(()=>this._exceptionHandler.handleError(e))}finally{this._runningTick=!1}}attachView(e){const i=e;this._views.push(i),i.attachToAppRef(this)}detachView(e){const i=e;Jc(this._views,i),i.detachFromAppRef()}_loadComponent(e){this.attachView(e.hostView),this.tick(),this.components.push(e);const i=this._injector.get(F0,[]);i.push(...this._bootstrapListeners),i.forEach(r=>r(e))}ngOnDestroy(){if(!this._destroyed)try{this._destroyListeners.forEach(e=>e()),this._views.slice().forEach(e=>e.destroy()),this._onMicrotaskEmptySubscription.unsubscribe()}finally{this._destroyed=!0,this._views=[],this._bootstrapListeners=[],this._destroyListeners=[]}}onDestroy(e){return this._destroyListeners.push(e),()=>Jc(this._destroyListeners,e)}destroy(){if(this._destroyed)throw new C(406,!1);const e=this._injector;e.destroy&&!e.destroyed&&e.destroy()}get viewCount(){return this._views.length}warnIfDestroyed(){}}return n.\u0275fac=function(e){return new(e||n)(v(j),v(yi),v(Ai))},n.\u0275prov=R({token:n,factory:n.\u0275fac,providedIn:"root"}),n})();function Jc(n,t){const e=n.indexOf(t);e>-1&&n.splice(e,1)}let Xe=(()=>{class n{}return n.__NG_ELEMENT_ID__=bU,n})();function bU(n){return function yU(n,t,e){if(Vs(n)&&!e){const i=on(n.index,t);return new Zs(i,i)}return 47&n.type?new Zs(t[16],t):null}(vt(),x(),16==(16&n))}class eC{constructor(){}supports(t){return ea(t)}create(t){return new xU(t)}}const kU=(n,t)=>t;class xU{constructor(t){this.length=0,this._linkedRecords=null,this._unlinkedRecords=null,this._previousItHead=null,this._itHead=null,this._itTail=null,this._additionsHead=null,this._additionsTail=null,this._movesHead=null,this._movesTail=null,this._removalsHead=null,this._removalsTail=null,this._identityChangesHead=null,this._identityChangesTail=null,this._trackByFn=t||kU}forEachItem(t){let e;for(e=this._itHead;null!==e;e=e._next)t(e)}forEachOperation(t){let e=this._itHead,i=this._removalsHead,r=0,o=null;for(;e||i;){const s=!i||e&&e.currentIndex<nC(i,r,o)?e:i,a=nC(s,r,o),l=s.currentIndex;if(s===i)r--,i=i._nextRemoved;else if(e=e._next,null==s.previousIndex)r++;else{o||(o=[]);const c=a-r,d=l-r;if(c!=d){for(let h=0;h<c;h++){const f=h<o.length?o[h]:o[h]=0,m=f+h;d<=m&&m<c&&(o[h]=f+1)}o[s.previousIndex]=d-c}}a!==l&&t(s,a,l)}}forEachPreviousItem(t){let e;for(e=this._previousItHead;null!==e;e=e._nextPrevious)t(e)}forEachAddedItem(t){let e;for(e=this._additionsHead;null!==e;e=e._nextAdded)t(e)}forEachMovedItem(t){let e;for(e=this._movesHead;null!==e;e=e._nextMoved)t(e)}forEachRemovedItem(t){let e;for(e=this._removalsHead;null!==e;e=e._nextRemoved)t(e)}forEachIdentityChange(t){let e;for(e=this._identityChangesHead;null!==e;e=e._nextIdentityChange)t(e)}diff(t){if(null==t&&(t=[]),!ea(t))throw new C(900,!1);return this.check(t)?this:null}onDestroy(){}check(t){this._reset();let r,o,s,e=this._itHead,i=!1;if(Array.isArray(t)){this.length=t.length;for(let a=0;a<this.length;a++)o=t[a],s=this._trackByFn(a,o),null!==e&&Object.is(e.trackById,s)?(i&&(e=this._verifyReinsertion(e,o,s,a)),Object.is(e.item,o)||this._addIdentityChange(e,o)):(e=this._mismatch(e,o,s,a),i=!0),e=e._next}else r=0,function $O(n,t){if(Array.isArray(n))for(let e=0;e<n.length;e++)t(n[e]);else{const e=n[Dr()]();let i;for(;!(i=e.next()).done;)t(i.value)}}(t,a=>{s=this._trackByFn(r,a),null!==e&&Object.is(e.trackById,s)?(i&&(e=this._verifyReinsertion(e,a,s,r)),Object.is(e.item,a)||this._addIdentityChange(e,a)):(e=this._mismatch(e,a,s,r),i=!0),e=e._next,r++}),this.length=r;return this._truncate(e),this.collection=t,this.isDirty}get isDirty(){return null!==this._additionsHead||null!==this._movesHead||null!==this._removalsHead||null!==this._identityChangesHead}_reset(){if(this.isDirty){let t;for(t=this._previousItHead=this._itHead;null!==t;t=t._next)t._nextPrevious=t._next;for(t=this._additionsHead;null!==t;t=t._nextAdded)t.previousIndex=t.currentIndex;for(this._additionsHead=this._additionsTail=null,t=this._movesHead;null!==t;t=t._nextMoved)t.previousIndex=t.currentIndex;this._movesHead=this._movesTail=null,this._removalsHead=this._removalsTail=null,this._identityChangesHead=this._identityChangesTail=null}}_mismatch(t,e,i,r){let o;return null===t?o=this._itTail:(o=t._prev,this._remove(t)),null!==(t=null===this._unlinkedRecords?null:this._unlinkedRecords.get(i,null))?(Object.is(t.item,e)||this._addIdentityChange(t,e),this._reinsertAfter(t,o,r)):null!==(t=null===this._linkedRecords?null:this._linkedRecords.get(i,r))?(Object.is(t.item,e)||this._addIdentityChange(t,e),this._moveAfter(t,o,r)):t=this._addAfter(new DU(e,i),o,r),t}_verifyReinsertion(t,e,i,r){let o=null===this._unlinkedRecords?null:this._unlinkedRecords.get(i,null);return null!==o?t=this._reinsertAfter(o,t._prev,r):t.currentIndex!=r&&(t.currentIndex=r,this._addToMoves(t,r)),t}_truncate(t){for(;null!==t;){const e=t._next;this._addToRemovals(this._unlink(t)),t=e}null!==this._unlinkedRecords&&this._unlinkedRecords.clear(),null!==this._additionsTail&&(this._additionsTail._nextAdded=null),null!==this._movesTail&&(this._movesTail._nextMoved=null),null!==this._itTail&&(this._itTail._next=null),null!==this._removalsTail&&(this._removalsTail._nextRemoved=null),null!==this._identityChangesTail&&(this._identityChangesTail._nextIdentityChange=null)}_reinsertAfter(t,e,i){null!==this._unlinkedRecords&&this._unlinkedRecords.remove(t);const r=t._prevRemoved,o=t._nextRemoved;return null===r?this._removalsHead=o:r._nextRemoved=o,null===o?this._removalsTail=r:o._prevRemoved=r,this._insertAfter(t,e,i),this._addToMoves(t,i),t}_moveAfter(t,e,i){return this._unlink(t),this._insertAfter(t,e,i),this._addToMoves(t,i),t}_addAfter(t,e,i){return this._insertAfter(t,e,i),this._additionsTail=null===this._additionsTail?this._additionsHead=t:this._additionsTail._nextAdded=t,t}_insertAfter(t,e,i){const r=null===e?this._itHead:e._next;return t._next=r,t._prev=e,null===r?this._itTail=t:r._prev=t,null===e?this._itHead=t:e._next=t,null===this._linkedRecords&&(this._linkedRecords=new tC),this._linkedRecords.put(t),t.currentIndex=i,t}_remove(t){return this._addToRemovals(this._unlink(t))}_unlink(t){null!==this._linkedRecords&&this._linkedRecords.remove(t);const e=t._prev,i=t._next;return null===e?this._itHead=i:e._next=i,null===i?this._itTail=e:i._prev=e,t}_addToMoves(t,e){return t.previousIndex===e||(this._movesTail=null===this._movesTail?this._movesHead=t:this._movesTail._nextMoved=t),t}_addToRemovals(t){return null===this._unlinkedRecords&&(this._unlinkedRecords=new tC),this._unlinkedRecords.put(t),t.currentIndex=null,t._nextRemoved=null,null===this._removalsTail?(this._removalsTail=this._removalsHead=t,t._prevRemoved=null):(t._prevRemoved=this._removalsTail,this._removalsTail=this._removalsTail._nextRemoved=t),t}_addIdentityChange(t,e){return t.item=e,this._identityChangesTail=null===this._identityChangesTail?this._identityChangesHead=t:this._identityChangesTail._nextIdentityChange=t,t}}class DU{constructor(t,e){this.item=t,this.trackById=e,this.currentIndex=null,this.previousIndex=null,this._nextPrevious=null,this._prev=null,this._next=null,this._prevDup=null,this._nextDup=null,this._prevRemoved=null,this._nextRemoved=null,this._nextAdded=null,this._nextMoved=null,this._nextIdentityChange=null}}class wU{constructor(){this._head=null,this._tail=null}add(t){null===this._head?(this._head=this._tail=t,t._nextDup=null,t._prevDup=null):(this._tail._nextDup=t,t._prevDup=this._tail,t._nextDup=null,this._tail=t)}get(t,e){let i;for(i=this._head;null!==i;i=i._nextDup)if((null===e||e<=i.currentIndex)&&Object.is(i.trackById,t))return i;return null}remove(t){const e=t._prevDup,i=t._nextDup;return null===e?this._head=i:e._nextDup=i,null===i?this._tail=e:i._prevDup=e,null===this._head}}class tC{constructor(){this.map=new Map}put(t){const e=t.trackById;let i=this.map.get(e);i||(i=new wU,this.map.set(e,i)),i.add(t)}get(t,e){const r=this.map.get(t);return r?r.get(t,e):null}remove(t){const e=t.trackById;return this.map.get(e).remove(t)&&this.map.delete(e),t}get isEmpty(){return 0===this.map.size}clear(){this.map.clear()}}function nC(n,t,e){const i=n.previousIndex;if(null===i)return i;let r=0;return e&&i<e.length&&(r=e[i]),i+t+r}class iC{constructor(){}supports(t){return t instanceof Map||xp(t)}create(){return new EU}}class EU{constructor(){this._records=new Map,this._mapHead=null,this._appendAfter=null,this._previousMapHead=null,this._changesHead=null,this._changesTail=null,this._additionsHead=null,this._additionsTail=null,this._removalsHead=null,this._removalsTail=null}get isDirty(){return null!==this._additionsHead||null!==this._changesHead||null!==this._removalsHead}forEachItem(t){let e;for(e=this._mapHead;null!==e;e=e._next)t(e)}forEachPreviousItem(t){let e;for(e=this._previousMapHead;null!==e;e=e._nextPrevious)t(e)}forEachChangedItem(t){let e;for(e=this._changesHead;null!==e;e=e._nextChanged)t(e)}forEachAddedItem(t){let e;for(e=this._additionsHead;null!==e;e=e._nextAdded)t(e)}forEachRemovedItem(t){let e;for(e=this._removalsHead;null!==e;e=e._nextRemoved)t(e)}diff(t){if(t){if(!(t instanceof Map||xp(t)))throw new C(900,!1)}else t=new Map;return this.check(t)?this:null}onDestroy(){}check(t){this._reset();let e=this._mapHead;if(this._appendAfter=null,this._forEach(t,(i,r)=>{if(e&&e.key===r)this._maybeAddToChanges(e,i),this._appendAfter=e,e=e._next;else{const o=this._getOrCreateRecordForKey(r,i);e=this._insertBeforeOrAppend(e,o)}}),e){e._prev&&(e._prev._next=null),this._removalsHead=e;for(let i=e;null!==i;i=i._nextRemoved)i===this._mapHead&&(this._mapHead=null),this._records.delete(i.key),i._nextRemoved=i._next,i.previousValue=i.currentValue,i.currentValue=null,i._prev=null,i._next=null}return this._changesTail&&(this._changesTail._nextChanged=null),this._additionsTail&&(this._additionsTail._nextAdded=null),this.isDirty}_insertBeforeOrAppend(t,e){if(t){const i=t._prev;return e._next=t,e._prev=i,t._prev=e,i&&(i._next=e),t===this._mapHead&&(this._mapHead=e),this._appendAfter=t,t}return this._appendAfter?(this._appendAfter._next=e,e._prev=this._appendAfter):this._mapHead=e,this._appendAfter=e,null}_getOrCreateRecordForKey(t,e){if(this._records.has(t)){const r=this._records.get(t);this._maybeAddToChanges(r,e);const o=r._prev,s=r._next;return o&&(o._next=s),s&&(s._prev=o),r._next=null,r._prev=null,r}const i=new IU(t);return this._records.set(t,i),i.currentValue=e,this._addToAdditions(i),i}_reset(){if(this.isDirty){let t;for(this._previousMapHead=this._mapHead,t=this._previousMapHead;null!==t;t=t._next)t._nextPrevious=t._next;for(t=this._changesHead;null!==t;t=t._nextChanged)t.previousValue=t.currentValue;for(t=this._additionsHead;null!=t;t=t._nextAdded)t.previousValue=t.currentValue;this._changesHead=this._changesTail=null,this._additionsHead=this._additionsTail=null,this._removalsHead=null}}_maybeAddToChanges(t,e){Object.is(e,t.currentValue)||(t.previousValue=t.currentValue,t.currentValue=e,this._addToChanges(t))}_addToAdditions(t){null===this._additionsHead?this._additionsHead=this._additionsTail=t:(this._additionsTail._nextAdded=t,this._additionsTail=t)}_addToChanges(t){null===this._changesHead?this._changesHead=this._changesTail=t:(this._changesTail._nextChanged=t,this._changesTail=t)}_forEach(t,e){t instanceof Map?t.forEach(e):Object.keys(t).forEach(i=>e(t[i],i))}}class IU{constructor(t){this.key=t,this.previousValue=null,this.currentValue=null,this._nextPrevious=null,this._next=null,this._prev=null,this._nextAdded=null,this._nextRemoved=null,this._nextChanged=null}}function rC(){return new Gc([new eC])}let Gc=(()=>{class n{constructor(e){this.factories=e}static create(e,i){if(null!=i){const r=i.factories.slice();e=e.concat(r)}return new n(e)}static extend(e){return{provide:n,useFactory:i=>n.create(e,i||rC()),deps:[[n,new gi,new yn]]}}find(e){const i=this.factories.find(r=>r.supports(e));if(null!=i)return i;throw new C(901,!1)}}return n.\u0275prov=R({token:n,providedIn:"root",factory:rC}),n})();function oC(){return new ma([new iC])}let ma=(()=>{class n{constructor(e){this.factories=e}static create(e,i){if(i){const r=i.factories.slice();e=e.concat(r)}return new n(e)}static extend(e){return{provide:n,useFactory:i=>n.create(e,i||oC()),deps:[[n,new gi,new yn]]}}find(e){const i=this.factories.find(r=>r.supports(e));if(i)return i;throw new C(901,!1)}}return n.\u0275prov=R({token:n,providedIn:"root",factory:oC}),n})();const MU=H0(null,"core",[]);let OU=(()=>{class n{constructor(e){}}return n.\u0275fac=function(e){return new(e||n)(v(Mr))},n.\u0275mod=he({type:n}),n.\u0275inj=ce({}),n})();function Jo(n){return"boolean"==typeof n?n:null!=n&&"false"!==n}let mf=null;function ti(){return mf}class UU{}const Y=new D("DocumentToken");let gf=(()=>{class n{historyGo(e){throw new Error("Not implemented")}}return n.\u0275fac=function(e){return new(e||n)},n.\u0275prov=R({token:n,factory:function(){return function NU(){return v(sC)}()},providedIn:"platform"}),n})();const PU=new D("Location Initialized");let sC=(()=>{class n extends gf{constructor(e){super(),this._doc=e,this._location=window.location,this._history=window.history}getBaseHrefFromDOM(){return ti().getBaseHref(this._doc)}onPopState(e){const i=ti().getGlobalEventTarget(this._doc,"window");return i.addEventListener("popstate",e,!1),()=>i.removeEventListener("popstate",e)}onHashChange(e){const i=ti().getGlobalEventTarget(this._doc,"window");return i.addEventListener("hashchange",e,!1),()=>i.removeEventListener("hashchange",e)}get href(){return this._location.href}get protocol(){return this._location.protocol}get hostname(){return this._location.hostname}get port(){return this._location.port}get pathname(){return this._location.pathname}get search(){return this._location.search}get hash(){return this._location.hash}set pathname(e){this._location.pathname=e}pushState(e,i,r){aC()?this._history.pushState(e,i,r):this._location.hash=r}replaceState(e,i,r){aC()?this._history.replaceState(e,i,r):this._location.hash=r}forward(){this._history.forward()}back(){this._history.back()}historyGo(e=0){this._history.go(e)}getState(){return this._history.state}}return n.\u0275fac=function(e){return new(e||n)(v(Y))},n.\u0275prov=R({token:n,factory:function(){return function _U(){return new sC(v(Y))}()},providedIn:"platform"}),n})();function aC(){return!!window.history.pushState}function bf(n,t){if(0==n.length)return t;if(0==t.length)return n;let e=0;return n.endsWith("/")&&e++,t.startsWith("/")&&e++,2==e?n+t.substring(1):1==e?n+t:n+"/"+t}function lC(n){const t=n.match(/#|\?|$/),e=t&&t.index||n.length;return n.slice(0,e-("/"===n[e-1]?1:0))+n.slice(e)}function xi(n){return n&&"?"!==n[0]?"?"+n:n}let Fr=(()=>{class n{historyGo(e){throw new Error("Not implemented")}}return n.\u0275fac=function(e){return new(e||n)},n.\u0275prov=R({token:n,factory:function(){return ie(dC)},providedIn:"root"}),n})();const cC=new D("appBaseHref");let dC=(()=>{class n extends Fr{constructor(e,i){super(),this._platformLocation=e,this._removeListenerFns=[],this._baseHref=i??this._platformLocation.getBaseHrefFromDOM()??ie(Y).location?.origin??""}ngOnDestroy(){for(;this._removeListenerFns.length;)this._removeListenerFns.pop()()}onPopState(e){this._removeListenerFns.push(this._platformLocation.onPopState(e),this._platformLocation.onHashChange(e))}getBaseHref(){return this._baseHref}prepareExternalUrl(e){return bf(this._baseHref,e)}path(e=!1){const i=this._platformLocation.pathname+xi(this._platformLocation.search),r=this._platformLocation.hash;return r&&e?`${i}${r}`:i}pushState(e,i,r,o){const s=this.prepareExternalUrl(r+xi(o));this._platformLocation.pushState(e,i,s)}replaceState(e,i,r,o){const s=this.prepareExternalUrl(r+xi(o));this._platformLocation.replaceState(e,i,s)}forward(){this._platformLocation.forward()}back(){this._platformLocation.back()}getState(){return this._platformLocation.getState()}historyGo(e=0){this._platformLocation.historyGo?.(e)}}return n.\u0275fac=function(e){return new(e||n)(v(gf),v(cC,8))},n.\u0275prov=R({token:n,factory:n.\u0275fac,providedIn:"root"}),n})(),BU=(()=>{class n extends Fr{constructor(e,i){super(),this._platformLocation=e,this._baseHref="",this._removeListenerFns=[],null!=i&&(this._baseHref=i)}ngOnDestroy(){for(;this._removeListenerFns.length;)this._removeListenerFns.pop()()}onPopState(e){this._removeListenerFns.push(this._platformLocation.onPopState(e),this._platformLocation.onHashChange(e))}getBaseHref(){return this._baseHref}path(e=!1){let i=this._platformLocation.hash;return null==i&&(i="#"),i.length>0?i.substring(1):i}prepareExternalUrl(e){const i=bf(this._baseHref,e);return i.length>0?"#"+i:i}pushState(e,i,r,o){let s=this.prepareExternalUrl(r+xi(o));0==s.length&&(s=this._platformLocation.pathname),this._platformLocation.pushState(e,i,s)}replaceState(e,i,r,o){let s=this.prepareExternalUrl(r+xi(o));0==s.length&&(s=this._platformLocation.pathname),this._platformLocation.replaceState(e,i,s)}forward(){this._platformLocation.forward()}back(){this._platformLocation.back()}getState(){return this._platformLocation.getState()}historyGo(e=0){this._platformLocation.historyGo?.(e)}}return n.\u0275fac=function(e){return new(e||n)(v(gf),v(cC,8))},n.\u0275prov=R({token:n,factory:n.\u0275fac}),n})(),ga=(()=>{class n{constructor(e){this._subject=new O,this._urlChangeListeners=[],this._urlChangeSubscription=null,this._locationStrategy=e;const i=this._locationStrategy.getBaseHref();this._basePath=function KU(n){if(new RegExp("^(https?:)?//").test(n)){const[,e]=n.split(/\/\/[^\/]+/);return e}return n}(lC(uC(i))),this._locationStrategy.onPopState(r=>{this._subject.emit({url:this.path(!0),pop:!0,state:r.state,type:r.type})})}ngOnDestroy(){this._urlChangeSubscription?.unsubscribe(),this._urlChangeListeners=[]}path(e=!1){return this.normalize(this._locationStrategy.path(e))}getState(){return this._locationStrategy.getState()}isCurrentPathEqualTo(e,i=""){return this.path()==this.normalize(e+xi(i))}normalize(e){return n.stripTrailingSlash(function qU(n,t){return n&&t.startsWith(n)?t.substring(n.length):t}(this._basePath,uC(e)))}prepareExternalUrl(e){return e&&"/"!==e[0]&&(e="/"+e),this._locationStrategy.prepareExternalUrl(e)}go(e,i="",r=null){this._locationStrategy.pushState(r,"",e,i),this._notifyUrlChangeListeners(this.prepareExternalUrl(e+xi(i)),r)}replaceState(e,i="",r=null){this._locationStrategy.replaceState(r,"",e,i),this._notifyUrlChangeListeners(this.prepareExternalUrl(e+xi(i)),r)}forward(){this._locationStrategy.forward()}back(){this._locationStrategy.back()}historyGo(e=0){this._locationStrategy.historyGo?.(e)}onUrlChange(e){return this._urlChangeListeners.push(e),this._urlChangeSubscription||(this._urlChangeSubscription=this.subscribe(i=>{this._notifyUrlChangeListeners(i.url,i.state)})),()=>{const i=this._urlChangeListeners.indexOf(e);this._urlChangeListeners.splice(i,1),0===this._urlChangeListeners.length&&(this._urlChangeSubscription?.unsubscribe(),this._urlChangeSubscription=null)}}_notifyUrlChangeListeners(e="",i){this._urlChangeListeners.forEach(r=>r(e,i))}subscribe(e,i,r){return this._subject.subscribe({next:e,error:i,complete:r})}}return n.normalizeQueryParams=xi,n.joinWithSlash=bf,n.stripTrailingSlash=lC,n.\u0275fac=function(e){return new(e||n)(v(Fr))},n.\u0275prov=R({token:n,factory:function(){return function jU(){return new ga(v(Fr))}()},providedIn:"root"}),n})();function uC(n){return n.replace(/\/index.html$/,"")}let Vr=(()=>{class n{constructor(e,i,r,o){this._iterableDiffers=e,this._keyValueDiffers=i,this._ngEl=r,this._renderer=o,this._iterableDiffer=null,this._keyValueDiffer=null,this._initialClasses=[],this._rawClass=null}set klass(e){this._removeClasses(this._initialClasses),this._initialClasses="string"==typeof e?e.split(/\s+/):[],this._applyClasses(this._initialClasses),this._applyClasses(this._rawClass)}set ngClass(e){this._removeClasses(this._rawClass),this._applyClasses(this._initialClasses),this._iterableDiffer=null,this._keyValueDiffer=null,this._rawClass="string"==typeof e?e.split(/\s+/):e,this._rawClass&&(ea(this._rawClass)?this._iterableDiffer=this._iterableDiffers.find(this._rawClass).create():this._keyValueDiffer=this._keyValueDiffers.find(this._rawClass).create())}ngDoCheck(){if(this._iterableDiffer){const e=this._iterableDiffer.diff(this._rawClass);e&&this._applyIterableChanges(e)}else if(this._keyValueDiffer){const e=this._keyValueDiffer.diff(this._rawClass);e&&this._applyKeyValueChanges(e)}}_applyKeyValueChanges(e){e.forEachAddedItem(i=>this._toggleClass(i.key,i.currentValue)),e.forEachChangedItem(i=>this._toggleClass(i.key,i.currentValue)),e.forEachRemovedItem(i=>{i.previousValue&&this._toggleClass(i.key,!1)})}_applyIterableChanges(e){e.forEachAddedItem(i=>{if("string"!=typeof i.item)throw new Error(`NgClass can only toggle CSS classes expressed as strings, got ${_e(i.item)}`);this._toggleClass(i.item,!0)}),e.forEachRemovedItem(i=>this._toggleClass(i.item,!1))}_applyClasses(e){e&&(Array.isArray(e)||e instanceof Set?e.forEach(i=>this._toggleClass(i,!0)):Object.keys(e).forEach(i=>this._toggleClass(i,!!e[i])))}_removeClasses(e){e&&(Array.isArray(e)||e instanceof Set?e.forEach(i=>this._toggleClass(i,!1)):Object.keys(e).forEach(i=>this._toggleClass(i,!1)))}_toggleClass(e,i){(e=e.trim())&&e.split(/\s+/g).forEach(r=>{i?this._renderer.addClass(this._ngEl.nativeElement,r):this._renderer.removeClass(this._ngEl.nativeElement,r)})}}return n.\u0275fac=function(e){return new(e||n)(p(Gc),p(ma),p(z),p(vi))},n.\u0275dir=M({type:n,selectors:[["","ngClass",""]],inputs:{klass:["class","klass"],ngClass:"ngClass"},standalone:!0}),n})();class EN{constructor(t,e,i,r){this.$implicit=t,this.ngForOf=e,this.index=i,this.count=r}get first(){return 0===this.index}get last(){return this.index===this.count-1}get even(){return this.index%2==0}get odd(){return!this.even}}let Ur=(()=>{class n{set ngForOf(e){this._ngForOf=e,this._ngForOfDirty=!0}set ngForTrackBy(e){this._trackByFn=e}get ngForTrackBy(){return this._trackByFn}constructor(e,i,r){this._viewContainer=e,this._template=i,this._differs=r,this._ngForOf=null,this._ngForOfDirty=!0,this._differ=null}set ngForTemplate(e){e&&(this._template=e)}ngDoCheck(){if(this._ngForOfDirty){this._ngForOfDirty=!1;const e=this._ngForOf;!this._differ&&e&&(this._differ=this._differs.find(e).create(this.ngForTrackBy))}if(this._differ){const e=this._differ.diff(this._ngForOf);e&&this._applyChanges(e)}}_applyChanges(e){const i=this._viewContainer;e.forEachOperation((r,o,s)=>{if(null==r.previousIndex)i.createEmbeddedView(this._template,new EN(r.item,this._ngForOf,-1,-1),null===s?void 0:s);else if(null==s)i.remove(null===o?void 0:o);else if(null!==o){const a=i.get(o);i.move(a,s),CC(a,r)}});for(let r=0,o=i.length;r<o;r++){const a=i.get(r).context;a.index=r,a.count=o,a.ngForOf=this._ngForOf}e.forEachIdentityChange(r=>{CC(i.get(r.currentIndex),r)})}static ngTemplateContextGuard(e,i){return!0}}return n.\u0275fac=function(e){return new(e||n)(p(jt),p(qn),p(Gc))},n.\u0275dir=M({type:n,selectors:[["","ngFor","","ngForOf",""]],inputs:{ngForOf:"ngForOf",ngForTrackBy:"ngForTrackBy",ngForTemplate:"ngForTemplate"},standalone:!0}),n})();function CC(n,t){n.context.$implicit=t.item}let wi=(()=>{class n{constructor(e,i){this._viewContainer=e,this._context=new RN,this._thenTemplateRef=null,this._elseTemplateRef=null,this._thenViewRef=null,this._elseViewRef=null,this._thenTemplateRef=i}set ngIf(e){this._context.$implicit=this._context.ngIf=e,this._updateView()}set ngIfThen(e){kC("ngIfThen",e),this._thenTemplateRef=e,this._thenViewRef=null,this._updateView()}set ngIfElse(e){kC("ngIfElse",e),this._elseTemplateRef=e,this._elseViewRef=null,this._updateView()}_updateView(){this._context.$implicit?this._thenViewRef||(this._viewContainer.clear(),this._elseViewRef=null,this._thenTemplateRef&&(this._thenViewRef=this._viewContainer.createEmbeddedView(this._thenTemplateRef,this._context))):this._elseViewRef||(this._viewContainer.clear(),this._thenViewRef=null,this._elseTemplateRef&&(this._elseViewRef=this._viewContainer.createEmbeddedView(this._elseTemplateRef,this._context)))}static ngTemplateContextGuard(e,i){return!0}}return n.\u0275fac=function(e){return new(e||n)(p(jt),p(qn))},n.\u0275dir=M({type:n,selectors:[["","ngIf",""]],inputs:{ngIf:"ngIf",ngIfThen:"ngIfThen",ngIfElse:"ngIfElse"},standalone:!0}),n})();class RN{constructor(){this.$implicit=null,this.ngIf=null}}function kC(n,t){if(t&&!t.createEmbeddedView)throw new Error(`${n} must be a TemplateRef, but received '${_e(t)}'.`)}class Ef{constructor(t,e){this._viewContainerRef=t,this._templateRef=e,this._created=!1}create(){this._created=!0,this._viewContainerRef.createEmbeddedView(this._templateRef)}destroy(){this._created=!1,this._viewContainerRef.clear()}enforceState(t){t&&!this._created?this.create():!t&&this._created&&this.destroy()}}let Wo=(()=>{class n{constructor(){this._defaultViews=[],this._defaultUsed=!1,this._caseCount=0,this._lastCaseCheckIndex=0,this._lastCasesMatched=!1}set ngSwitch(e){this._ngSwitch=e,0===this._caseCount&&this._updateDefaultCases(!0)}_addCase(){return this._caseCount++}_addDefault(e){this._defaultViews.push(e)}_matchCase(e){const i=e==this._ngSwitch;return this._lastCasesMatched=this._lastCasesMatched||i,this._lastCaseCheckIndex++,this._lastCaseCheckIndex===this._caseCount&&(this._updateDefaultCases(!this._lastCasesMatched),this._lastCaseCheckIndex=0,this._lastCasesMatched=!1),i}_updateDefaultCases(e){if(this._defaultViews.length>0&&e!==this._defaultUsed){this._defaultUsed=e;for(const i of this._defaultViews)i.enforceState(e)}}}return n.\u0275fac=function(e){return new(e||n)},n.\u0275dir=M({type:n,selectors:[["","ngSwitch",""]],inputs:{ngSwitch:"ngSwitch"},standalone:!0}),n})(),rd=(()=>{class n{constructor(e,i,r){this.ngSwitch=r,r._addCase(),this._view=new Ef(e,i)}ngDoCheck(){this._view.enforceState(this.ngSwitch._matchCase(this.ngSwitchCase))}}return n.\u0275fac=function(e){return new(e||n)(p(jt),p(qn),p(Wo,9))},n.\u0275dir=M({type:n,selectors:[["","ngSwitchCase",""]],inputs:{ngSwitchCase:"ngSwitchCase"},standalone:!0}),n})(),xC=(()=>{class n{constructor(e,i,r){r._addDefault(new Ef(e,i))}}return n.\u0275fac=function(e){return new(e||n)(p(jt),p(qn),p(Wo,9))},n.\u0275dir=M({type:n,selectors:[["","ngSwitchDefault",""]],standalone:!0}),n})(),wC=(()=>{class n{constructor(e){this._viewContainerRef=e,this._viewRef=null,this.ngTemplateOutletContext=null,this.ngTemplateOutlet=null,this.ngTemplateOutletInjector=null}ngOnChanges(e){if(e.ngTemplateOutlet||e.ngTemplateOutletInjector){const i=this._viewContainerRef;if(this._viewRef&&i.remove(i.indexOf(this._viewRef)),this.ngTemplateOutlet){const{ngTemplateOutlet:r,ngTemplateOutletContext:o,ngTemplateOutletInjector:s}=this;this._viewRef=i.createEmbeddedView(r,o,s?{injector:s}:void 0)}else this._viewRef=null}else this._viewRef&&e.ngTemplateOutletContext&&this.ngTemplateOutletContext&&(this._viewRef.context=this.ngTemplateOutletContext)}}return n.\u0275fac=function(e){return new(e||n)(p(jt))},n.\u0275dir=M({type:n,selectors:[["","ngTemplateOutlet",""]],inputs:{ngTemplateOutletContext:"ngTemplateOutletContext",ngTemplateOutlet:"ngTemplateOutlet",ngTemplateOutletInjector:"ngTemplateOutletInjector"},standalone:!0,features:[ze]}),n})(),Ei=(()=>{class n{}return n.\u0275fac=function(e){return new(e||n)},n.\u0275mod=he({type:n}),n.\u0275inj=ce({}),n})();const IC="browser";function Tf(n){return n===IC}let iP=(()=>{class n{}return n.\u0275prov=R({token:n,providedIn:"root",factory:()=>new rP(v(Y),window)}),n})();class rP{constructor(t,e){this.document=t,this.window=e,this.offset=()=>[0,0]}setOffset(t){this.offset=Array.isArray(t)?()=>t:t}getScrollPosition(){return this.supportsScrolling()?[this.window.pageXOffset,this.window.pageYOffset]:[0,0]}scrollToPosition(t){this.supportsScrolling()&&this.window.scrollTo(t[0],t[1])}scrollToAnchor(t){if(!this.supportsScrolling())return;const e=function oP(n,t){const e=n.getElementById(t)||n.getElementsByName(t)[0];if(e)return e;if("function"==typeof n.createTreeWalker&&n.body&&(n.body.createShadowRoot||n.body.attachShadow)){const i=n.createTreeWalker(n.body,NodeFilter.SHOW_ELEMENT);let r=i.currentNode;for(;r;){const o=r.shadowRoot;if(o){const s=o.getElementById(t)||o.querySelector(`[name="${t}"]`);if(s)return s}r=i.nextNode()}}return null}(this.document,t);e&&(this.scrollToElement(e),e.focus())}setHistoryScrollRestoration(t){if(this.supportScrollRestoration()){const e=this.window.history;e&&e.scrollRestoration&&(e.scrollRestoration=t)}}scrollToElement(t){const e=t.getBoundingClientRect(),i=e.left+this.window.pageXOffset,r=e.top+this.window.pageYOffset,o=this.offset();this.window.scrollTo(i-o[0],r-o[1])}supportScrollRestoration(){try{if(!this.supportsScrolling())return!1;const t=RC(this.window.history)||RC(Object.getPrototypeOf(this.window.history));return!(!t||!t.writable&&!t.set)}catch{return!1}}supportsScrolling(){try{return!!this.window&&!!this.window.scrollTo&&"pageXOffset"in this.window}catch{return!1}}}function RC(n){return Object.getOwnPropertyDescriptor(n,"scrollRestoration")}class FP extends UU{constructor(){super(...arguments),this.supportsDOMEvents=!0}}class Ff extends FP{static makeCurrent(){!function VU(n){mf||(mf=n)}(new Ff)}onAndCancel(t,e,i){return t.addEventListener(e,i,!1),()=>{t.removeEventListener(e,i,!1)}}dispatchEvent(t,e){t.dispatchEvent(e)}remove(t){t.parentNode&&t.parentNode.removeChild(t)}createElement(t,e){return(e=e||this.getDefaultDocument()).createElement(t)}createHtmlDocument(){return document.implementation.createHTMLDocument("fakeTitle")}getDefaultDocument(){return document}isElementNode(t){return t.nodeType===Node.ELEMENT_NODE}isShadowRoot(t){return t instanceof DocumentFragment}getGlobalEventTarget(t,e){return"window"===e?window:"document"===e?t:"body"===e?t.body:null}getBaseHref(t){const e=function VP(){return Aa=Aa||document.querySelector("base"),Aa?Aa.getAttribute("href"):null}();return null==e?null:function UP(n){sd=sd||document.createElement("a"),sd.setAttribute("href",n);const t=sd.pathname;return"/"===t.charAt(0)?t:`/${t}`}(e)}resetBaseElement(){Aa=null}getUserAgent(){return window.navigator.userAgent}getCookie(t){return function DN(n,t){t=encodeURIComponent(t);for(const e of n.split(";")){const i=e.indexOf("="),[r,o]=-1==i?[e,""]:[e.slice(0,i),e.slice(i+1)];if(r.trim()===t)return decodeURIComponent(o)}return null}(document.cookie,t)}}let sd,Aa=null;const UC=new D("TRANSITION_ID"),PP=[{provide:pa,useFactory:function NP(n,t,e){return()=>{e.get(Hc).donePromise.then(()=>{const i=ti(),r=t.querySelectorAll(`style[ng-transition="${n}"]`);for(let o=0;o<r.length;o++)i.remove(r[o])})}},deps:[UC,Y,ht],multi:!0}];let BP=(()=>{class n{build(){return new XMLHttpRequest}}return n.\u0275fac=function(e){return new(e||n)},n.\u0275prov=R({token:n,factory:n.\u0275fac}),n})();const ad=new D("EventManagerPlugins");let ld=(()=>{class n{constructor(e,i){this._zone=i,this._eventNameToPlugin=new Map,e.forEach(r=>r.manager=this),this._plugins=e.slice().reverse()}addEventListener(e,i,r){return this._findPluginFor(i).addEventListener(e,i,r)}addGlobalEventListener(e,i,r){return this._findPluginFor(i).addGlobalEventListener(e,i,r)}getZone(){return this._zone}_findPluginFor(e){const i=this._eventNameToPlugin.get(e);if(i)return i;const r=this._plugins;for(let o=0;o<r.length;o++){const s=r[o];if(s.supports(e))return this._eventNameToPlugin.set(e,s),s}throw new Error(`No event manager plugin found for event ${e}`)}}return n.\u0275fac=function(e){return new(e||n)(v(ad),v(j))},n.\u0275prov=R({token:n,factory:n.\u0275fac}),n})();class NC{constructor(t){this._doc=t}addGlobalEventListener(t,e,i){const r=ti().getGlobalEventTarget(this._doc,t);if(!r)throw new Error(`Unsupported event target ${r} for event ${e}`);return this.addEventListener(r,e,i)}}let PC=(()=>{class n{constructor(){this._stylesSet=new Set}addStyles(e){const i=new Set;e.forEach(r=>{this._stylesSet.has(r)||(this._stylesSet.add(r),i.add(r))}),this.onStylesAdded(i)}onStylesAdded(e){}getAllStyles(){return Array.from(this._stylesSet)}}return n.\u0275fac=function(e){return new(e||n)},n.\u0275prov=R({token:n,factory:n.\u0275fac}),n})(),Sa=(()=>{class n extends PC{constructor(e){super(),this._doc=e,this._hostNodes=new Map,this._hostNodes.set(e.head,[])}_addStylesToHost(e,i,r){e.forEach(o=>{const s=this._doc.createElement("style");s.textContent=o,r.push(i.appendChild(s))})}addHost(e){const i=[];this._addStylesToHost(this._stylesSet,e,i),this._hostNodes.set(e,i)}removeHost(e){const i=this._hostNodes.get(e);i&&i.forEach(_C),this._hostNodes.delete(e)}onStylesAdded(e){this._hostNodes.forEach((i,r)=>{this._addStylesToHost(e,r,i)})}ngOnDestroy(){this._hostNodes.forEach(e=>e.forEach(_C))}}return n.\u0275fac=function(e){return new(e||n)(v(Y))},n.\u0275prov=R({token:n,factory:n.\u0275fac}),n})();function _C(n){ti().remove(n)}const Vf={svg:"http://www.w3.org/2000/svg",xhtml:"http://www.w3.org/1999/xhtml",xlink:"http://www.w3.org/1999/xlink",xml:"http://www.w3.org/XML/1998/namespace",xmlns:"http://www.w3.org/2000/xmlns/",math:"http://www.w3.org/1998/MathML/"},Uf=/%COMP%/g;function Nf(n,t){return t.flat(100).map(e=>e.replace(Uf,n))}function qC(n){return t=>{if("__ngUnwrap__"===t)return n;!1===n(t)&&(t.preventDefault(),t.returnValue=!1)}}let cd=(()=>{class n{constructor(e,i,r){this.eventManager=e,this.sharedStylesHost=i,this.appId=r,this.rendererByCompId=new Map,this.defaultRenderer=new Pf(e)}createRenderer(e,i){if(!e||!i)return this.defaultRenderer;switch(i.encapsulation){case Fn.Emulated:{let r=this.rendererByCompId.get(i.id);return r||(r=new JP(this.eventManager,this.sharedStylesHost,i,this.appId),this.rendererByCompId.set(i.id,r)),r.applyToHost(e),r}case Fn.ShadowDom:return new WP(this.eventManager,this.sharedStylesHost,e,i);default:if(!this.rendererByCompId.has(i.id)){const r=Nf(i.id,i.styles);this.sharedStylesHost.addStyles(r),this.rendererByCompId.set(i.id,this.defaultRenderer)}return this.defaultRenderer}}begin(){}end(){}}return n.\u0275fac=function(e){return new(e||n)(v(ld),v(Sa),v(Lo))},n.\u0275prov=R({token:n,factory:n.\u0275fac}),n})();class Pf{constructor(t){this.eventManager=t,this.data=Object.create(null),this.destroyNode=null}destroy(){}createElement(t,e){return e?document.createElementNS(Vf[e]||e,t):document.createElement(t)}createComment(t){return document.createComment(t)}createText(t){return document.createTextNode(t)}appendChild(t,e){(HC(t)?t.content:t).appendChild(e)}insertBefore(t,e,i){t&&(HC(t)?t.content:t).insertBefore(e,i)}removeChild(t,e){t&&t.removeChild(e)}selectRootElement(t,e){let i="string"==typeof t?document.querySelector(t):t;if(!i)throw new Error(`The selector "${t}" did not match any elements`);return e||(i.textContent=""),i}parentNode(t){return t.parentNode}nextSibling(t){return t.nextSibling}setAttribute(t,e,i,r){if(r){e=r+":"+e;const o=Vf[r];o?t.setAttributeNS(o,e,i):t.setAttribute(e,i)}else t.setAttribute(e,i)}removeAttribute(t,e,i){if(i){const r=Vf[i];r?t.removeAttributeNS(r,e):t.removeAttribute(`${i}:${e}`)}else t.removeAttribute(e)}addClass(t,e){t.classList.add(e)}removeClass(t,e){t.classList.remove(e)}setStyle(t,e,i,r){r&(Gt.DashCase|Gt.Important)?t.style.setProperty(e,i,r&Gt.Important?"important":""):t.style[e]=i}removeStyle(t,e,i){i&Gt.DashCase?t.style.removeProperty(e):t.style[e]=""}setProperty(t,e,i){t[e]=i}setValue(t,e){t.nodeValue=e}listen(t,e,i){return"string"==typeof t?this.eventManager.addGlobalEventListener(t,e,qC(i)):this.eventManager.addEventListener(t,e,qC(i))}}function HC(n){return"TEMPLATE"===n.tagName&&void 0!==n.content}class JP extends Pf{constructor(t,e,i,r){super(t),this.component=i;const o=Nf(r+"-"+i.id,i.styles);e.addStyles(o),this.contentAttr=function KP(n){return"_ngcontent-%COMP%".replace(Uf,n)}(r+"-"+i.id),this.hostAttr=function HP(n){return"_nghost-%COMP%".replace(Uf,n)}(r+"-"+i.id)}applyToHost(t){super.setAttribute(t,this.hostAttr,"")}createElement(t,e){const i=super.createElement(t,e);return super.setAttribute(i,this.contentAttr,""),i}}class WP extends Pf{constructor(t,e,i,r){super(t),this.sharedStylesHost=e,this.hostEl=i,this.shadowRoot=i.attachShadow({mode:"open"}),this.sharedStylesHost.addHost(this.shadowRoot);const o=Nf(r.id,r.styles);for(let s=0;s<o.length;s++){const a=document.createElement("style");a.textContent=o[s],this.shadowRoot.appendChild(a)}}nodeOrShadowRoot(t){return t===this.hostEl?this.shadowRoot:t}destroy(){this.sharedStylesHost.removeHost(this.shadowRoot)}appendChild(t,e){return super.appendChild(this.nodeOrShadowRoot(t),e)}insertBefore(t,e,i){return super.insertBefore(this.nodeOrShadowRoot(t),e,i)}removeChild(t,e){return super.removeChild(this.nodeOrShadowRoot(t),e)}parentNode(t){return this.nodeOrShadowRoot(super.parentNode(this.nodeOrShadowRoot(t)))}}let QP=(()=>{class n extends NC{constructor(e){super(e)}supports(e){return!0}addEventListener(e,i,r){return e.addEventListener(i,r,!1),()=>this.removeEventListener(e,i,r)}removeEventListener(e,i,r){return e.removeEventListener(i,r)}}return n.\u0275fac=function(e){return new(e||n)(v(Y))},n.\u0275prov=R({token:n,factory:n.\u0275fac}),n})();const LC=["alt","control","meta","shift"],GP={"\b":"Backspace","\t":"Tab","\x7f":"Delete","\x1b":"Escape",Del:"Delete",Esc:"Escape",Left:"ArrowLeft",Right:"ArrowRight",Up:"ArrowUp",Down:"ArrowDown",Menu:"ContextMenu",Scroll:"ScrollLock",Win:"OS"},zP={alt:n=>n.altKey,control:n=>n.ctrlKey,meta:n=>n.metaKey,shift:n=>n.shiftKey};let YP=(()=>{class n extends NC{constructor(e){super(e)}supports(e){return null!=n.parseEventName(e)}addEventListener(e,i,r){const o=n.parseEventName(i),s=n.eventCallback(o.fullKey,r,this.manager.getZone());return this.manager.getZone().runOutsideAngular(()=>ti().onAndCancel(e,o.domEventName,s))}static parseEventName(e){const i=e.toLowerCase().split("."),r=i.shift();if(0===i.length||"keydown"!==r&&"keyup"!==r)return null;const o=n._normalizeKey(i.pop());let s="",a=i.indexOf("code");if(a>-1&&(i.splice(a,1),s="code."),LC.forEach(c=>{const d=i.indexOf(c);d>-1&&(i.splice(d,1),s+=c+".")}),s+=o,0!=i.length||0===o.length)return null;const l={};return l.domEventName=r,l.fullKey=s,l}static matchEventFullKeyCode(e,i){let r=GP[e.key]||e.key,o="";return i.indexOf("code.")>-1&&(r=e.code,o="code."),!(null==r||!r)&&(r=r.toLowerCase()," "===r?r="space":"."===r&&(r="dot"),LC.forEach(s=>{s!==r&&(0,zP[s])(e)&&(o+=s+".")}),o+=r,o===i)}static eventCallback(e,i,r){return o=>{n.matchEventFullKeyCode(o,e)&&r.runGuarded(()=>i(o))}}static _normalizeKey(e){return"esc"===e?"escape":e}}return n.\u0275fac=function(e){return new(e||n)(v(Y))},n.\u0275prov=R({token:n,factory:n.\u0275fac}),n})();const e_=H0(MU,"browser",[{provide:fa,useValue:IC},{provide:O0,useValue:function XP(){Ff.makeCurrent()},multi:!0},{provide:Y,useFactory:function $P(){return function MT(n){Jh=n}(document),document},deps:[]}]),QC=new D(""),GC=[{provide:Lc,useClass:class _P{addToWindow(t){Be.getAngularTestability=(i,r=!0)=>{const o=t.findTestabilityInTree(i,r);if(null==o)throw new Error("Could not find testability for element.");return o},Be.getAllAngularTestabilities=()=>t.getAllTestabilities(),Be.getAllAngularRootElements=()=>t.getAllRootElements(),Be.frameworkStabilizers||(Be.frameworkStabilizers=[]),Be.frameworkStabilizers.push(i=>{const r=Be.getAllAngularTestabilities();let o=r.length,s=!1;const a=function(l){s=s||l,o--,0==o&&i(s)};r.forEach(function(l){l.whenStable(a)})})}findTestabilityInTree(t,e,i){return null==e?null:t.getTestability(e)??(i?ti().isShadowRoot(e)?this.findTestabilityInTree(t,e.host,!0):this.findTestabilityInTree(t,e.parentElement,!0):null)}},deps:[]},{provide:B0,useClass:sf,deps:[j,af,Lc]},{provide:sf,useClass:sf,deps:[j,af,Lc]}],zC=[{provide:$h,useValue:"root"},{provide:Ai,useFactory:function ZP(){return new Ai},deps:[]},{provide:ad,useClass:QP,multi:!0,deps:[Y,j,fa]},{provide:ad,useClass:YP,multi:!0,deps:[Y]},{provide:cd,useClass:cd,deps:[ld,Sa,Lo]},{provide:Ys,useExisting:cd},{provide:PC,useExisting:Sa},{provide:Sa,useClass:Sa,deps:[Y]},{provide:ld,useClass:ld,deps:[ad,j]},{provide:class sP{},useClass:BP,deps:[]},[]];let YC=(()=>{class n{constructor(e){}static withServerTransition(e){return{ngModule:n,providers:[{provide:Lo,useValue:e.appId},{provide:UC,useExisting:Lo},PP]}}}return n.\u0275fac=function(e){return new(e||n)(v(QC,12))},n.\u0275mod=he({type:n}),n.\u0275inj=ce({providers:[...zC,...GC],imports:[Ei,OU]}),n})(),XC=(()=>{class n{constructor(e){this._doc=e}getTitle(){return this._doc.title}setTitle(e){this._doc.title=e||""}}return n.\u0275fac=function(e){return new(e||n)(v(Y))},n.\u0275prov=R({token:n,factory:function(e){let i=null;return i=e?new e:function n_(){return new XC(v(Y))}(),i},providedIn:"root"}),n})();typeof window<"u"&&window;let jf=(()=>{class n{}return n.\u0275fac=function(e){return new(e||n)},n.\u0275prov=R({token:n,factory:function(e){let i=null;return i=e?new(e||n):v(ek),i},providedIn:"root"}),n})(),ek=(()=>{class n extends jf{constructor(e){super(),this._doc=e}sanitize(e,i){if(null==i)return null;switch(e){case Ee.NONE:return i;case Ee.HTML:return Gn(i,"HTML")?an(i):yv(this._doc,String(i)).toString();case Ee.STYLE:return Gn(i,"Style")?an(i):i;case Ee.SCRIPT:if(Gn(i,"Script"))return an(i);throw new Error("unsafe value used in a script context");case Ee.URL:return Gn(i,"URL")?an(i):gc(String(i));case Ee.RESOURCE_URL:if(Gn(i,"ResourceURL"))return an(i);throw new Error(`unsafe value used in a resource URL context (see ${Pl})`);default:throw new Error(`Unexpected SecurityContext ${e} (see ${Pl})`)}}bypassSecurityTrustHtml(e){return function _T(n){return new OT(n)}(e)}bypassSecurityTrustStyle(e){return function BT(n){return new FT(n)}(e)}bypassSecurityTrustScript(e){return function jT(n){return new VT(n)}(e)}bypassSecurityTrustUrl(e){return function qT(n){return new UT(n)}(e)}bypassSecurityTrustResourceUrl(e){return function KT(n){return new NT(n)}(e)}}return n.\u0275fac=function(e){return new(e||n)(v(Y))},n.\u0275prov=R({token:n,factory:function(e){let i=null;return i=e?new e:function c_(n){return new ek(n.get(Y))}(v(ht)),i},providedIn:"root"}),n})();function N(...n){return it(n,ws(n))}class kn extends P{constructor(t){super(),this._value=t}get value(){return this.getValue()}_subscribe(t){const e=super._subscribe(t);return!e.closed&&t.next(this._value),e}getValue(){const{hasError:t,thrownError:e,_value:i}=this;if(t)throw e;return this._throwIfClosed(),i}next(t){super.next(this._value=t)}}const dd=ks(n=>function(){n(this),this.name="EmptyError",this.message="no elements in sequence"}),{isArray:d_}=Array,{getPrototypeOf:u_,prototype:h_,keys:p_}=Object;function tk(n){if(1===n.length){const t=n[0];if(d_(t))return{args:t,keys:null};if(function f_(n){return n&&"object"==typeof n&&u_(n)===h_}(t)){const e=p_(t);return{args:e.map(i=>t[i]),keys:e}}}return{args:n,keys:null}}const{isArray:m_}=Array;function qf(n){return B(t=>function g_(n,t){return m_(t)?n(...t):n(t)}(n,t))}function nk(n,t){return n.reduce((e,i,r)=>(e[i]=t[r],e),{})}function Kf(...n){const t=ws(n),e=xb(n),{args:i,keys:r}=tk(n);if(0===i.length)return it([],t);const o=new Me(function b_(n,t,e=Bi){return i=>{ik(t,()=>{const{length:r}=n,o=new Array(r);let s=r,a=r;for(let l=0;l<r;l++)ik(t,()=>{const c=it(n[l],t);let d=!1;c.subscribe(Ke(i,u=>{o[l]=u,d||(d=!0,a--),a||i.next(e(o.slice()))},()=>{--s||i.complete()}))},i)},i)}}(i,t,r?s=>nk(r,s):Bi));return e?o.pipe(qf(e)):o}function ik(n,t,e){n?di(e,n,t):t()}function Qo(...n){return function y_(){return ro(1)}()(it(n,ws(n)))}function Nr(n){return new Me(t=>{Vt(n()).subscribe(t)})}function Pr(n,t){const e=ye(n)?n:()=>n,i=r=>r.error(e());return new Me(t?r=>t.schedule(i,0,r):i)}function Hf(){return Le((n,t)=>{let e=null;n._refCount++;const i=Ke(t,void 0,void 0,void 0,()=>{if(!n||n._refCount<=0||0<--n._refCount)return void(e=null);const r=n._connection,o=e;e=null,r&&(!o||r===o)&&r.unsubscribe(),t.unsubscribe()});n.subscribe(i),i.closed||(e=n.connect())})}class Lf extends Me{constructor(t,e){super(),this.source=t,this.subjectFactory=e,this._subject=null,this._refCount=0,this._connection=null,db(t)&&(this.lift=t.lift)}_subscribe(t){return this.getSubject().subscribe(t)}getSubject(){const t=this._subject;return(!t||t.isStopped)&&(this._subject=this.subjectFactory()),this._subject}_teardown(){this._refCount=0;const{_connection:t}=this;this._subject=this._connection=null,t?.unsubscribe()}connect(){let t=this._connection;if(!t){t=this._connection=new ke;const e=this.getSubject();t.add(this.source.subscribe(Ke(e,void 0,()=>{this._teardown(),e.complete()},i=>{this._teardown(),e.error(i)},()=>this._teardown()))),t.closed&&(this._connection=null,t=ke.EMPTY)}return t}refCount(){return Hf()(this)}}function Mt(n,t){return Le((e,i)=>{let r=null,o=0,s=!1;const a=()=>s&&!r&&i.complete();e.subscribe(Ke(i,l=>{r?.unsubscribe();let c=0;const d=o++;Vt(n(l,d)).subscribe(r=Ke(i,u=>i.next(t?t(l,u,d,c++):u),()=>{r=null,a()}))},()=>{s=!0,a()}))})}function Ue(n){return n<=0?()=>Mn:Le((t,e)=>{let i=0;t.subscribe(Ke(e,r=>{++i<=n&&(e.next(r),n<=i&&e.complete())}))})}function xn(...n){const t=ws(n);return Le((e,i)=>{(t?Qo(n,e,t):Qo(n,e)).subscribe(i)})}function Re(n,t){return Le((e,i)=>{let r=0;e.subscribe(Ke(i,o=>n.call(t,o,r++)&&i.next(o)))})}function ud(n){return Le((t,e)=>{let i=!1;t.subscribe(Ke(e,r=>{i=!0,e.next(r)},()=>{i||e.next(n),e.complete()}))})}function rk(n=v_){return Le((t,e)=>{let i=!1;t.subscribe(Ke(e,r=>{i=!0,e.next(r)},()=>i?e.complete():e.error(n())))})}function v_(){return new dd}function Gi(n,t){const e=arguments.length>=2;return i=>i.pipe(n?Re((r,o)=>n(r,o,i)):Bi,Ue(1),e?ud(t):rk(()=>new dd))}function zi(n,t){return ye(t)?lt(n,t,1):lt(n,1)}function nt(n,t,e){const i=ye(n)||t||e?{next:n,error:t,complete:e}:n;return i?Le((r,o)=>{var s;null===(s=i.subscribe)||void 0===s||s.call(i);let a=!0;r.subscribe(Ke(o,l=>{var c;null===(c=i.next)||void 0===c||c.call(i,l),o.next(l)},()=>{var l;a=!1,null===(l=i.complete)||void 0===l||l.call(i),o.complete()},l=>{var c;a=!1,null===(c=i.error)||void 0===c||c.call(i,l),o.error(l)},()=>{var l,c;a&&(null===(l=i.unsubscribe)||void 0===l||l.call(i)),null===(c=i.finalize)||void 0===c||c.call(i)}))}):Bi}function Ii(n){return Le((t,e)=>{let o,i=null,r=!1;i=t.subscribe(Ke(e,void 0,void 0,s=>{o=Vt(n(s,Ii(n)(t))),i?(i.unsubscribe(),i=null,o.subscribe(e)):r=!0})),r&&(i.unsubscribe(),i=null,o.subscribe(e))})}function A_(n,t,e,i,r){return(o,s)=>{let a=e,l=t,c=0;o.subscribe(Ke(s,d=>{const u=c++;l=a?n(l,d,u):(a=!0,d),i&&s.next(l)},r&&(()=>{a&&s.next(l),s.complete()})))}}function ok(n,t){return Le(A_(n,t,arguments.length>=2,!0))}function Jf(n){return n<=0?()=>Mn:Le((t,e)=>{let i=[];t.subscribe(Ke(e,r=>{i.push(r),n<i.length&&i.shift()},()=>{for(const r of i)e.next(r);e.complete()},void 0,()=>{i=null}))})}function sk(n,t){const e=arguments.length>=2;return i=>i.pipe(n?Re((r,o)=>n(r,o,i)):Bi,Jf(1),e?ud(t):rk(()=>new dd))}function ak(n,t=!1){return Le((e,i)=>{let r=0;e.subscribe(Ke(i,o=>{const s=n(o,r++);(s||t)&&i.next(o),!s&&i.complete()}))})}function hd(n){return B(()=>n)}function pd(n){return Le((t,e)=>{try{t.subscribe(e)}finally{e.add(n)}})}const fe="primary",Ca=Symbol("RouteTitle");class S_{constructor(t){this.params=t||{}}has(t){return Object.prototype.hasOwnProperty.call(this.params,t)}get(t){if(this.has(t)){const e=this.params[t];return Array.isArray(e)?e[0]:e}return null}getAll(t){if(this.has(t)){const e=this.params[t];return Array.isArray(e)?e:[e]}return[]}get keys(){return Object.keys(this.params)}}function Go(n){return new S_(n)}function C_(n,t,e){const i=e.path.split("/");if(i.length>n.length||"full"===e.pathMatch&&(t.hasChildren()||i.length<n.length))return null;const r={};for(let o=0;o<i.length;o++){const s=i[o],a=n[o];if(s.startsWith(":"))r[s.substring(1)]=a;else if(s!==a.path)return null}return{consumed:n.slice(0,i.length),posParams:r}}function ni(n,t){const e=n?Object.keys(n):void 0,i=t?Object.keys(t):void 0;if(!e||!i||e.length!=i.length)return!1;let r;for(let o=0;o<e.length;o++)if(r=e[o],!lk(n[r],t[r]))return!1;return!0}function lk(n,t){if(Array.isArray(n)&&Array.isArray(t)){if(n.length!==t.length)return!1;const e=[...n].sort(),i=[...t].sort();return e.every((r,o)=>i[o]===r)}return n===t}function ck(n){return Array.prototype.concat.apply([],n)}function dk(n){return n.length>0?n[n.length-1]:null}function St(n,t){for(const e in n)n.hasOwnProperty(e)&&t(n[e],e)}function Yi(n){return Ip(n)?n:na(n)?it(Promise.resolve(n)):N(n)}const fd=!1,x_={exact:function pk(n,t,e){if(!Br(n.segments,t.segments)||!md(n.segments,t.segments,e)||n.numberOfChildren!==t.numberOfChildren)return!1;for(const i in t.children)if(!n.children[i]||!pk(n.children[i],t.children[i],e))return!1;return!0},subset:fk},uk={exact:function D_(n,t){return ni(n,t)},subset:function w_(n,t){return Object.keys(t).length<=Object.keys(n).length&&Object.keys(t).every(e=>lk(n[e],t[e]))},ignored:()=>!0};function hk(n,t,e){return x_[e.paths](n.root,t.root,e.matrixParams)&&uk[e.queryParams](n.queryParams,t.queryParams)&&!("exact"===e.fragment&&n.fragment!==t.fragment)}function fk(n,t,e){return mk(n,t,t.segments,e)}function mk(n,t,e,i){if(n.segments.length>e.length){const r=n.segments.slice(0,e.length);return!(!Br(r,e)||t.hasChildren()||!md(r,e,i))}if(n.segments.length===e.length){if(!Br(n.segments,e)||!md(n.segments,e,i))return!1;for(const r in t.children)if(!n.children[r]||!fk(n.children[r],t.children[r],i))return!1;return!0}{const r=e.slice(0,n.segments.length),o=e.slice(n.segments.length);return!!(Br(n.segments,r)&&md(n.segments,r,i)&&n.children[fe])&&mk(n.children[fe],t,o,i)}}function md(n,t,e){return t.every((i,r)=>uk[e](n[r].parameters,i.parameters))}class _r{constructor(t=new ge([],{}),e={},i=null){this.root=t,this.queryParams=e,this.fragment=i}get queryParamMap(){return this._queryParamMap||(this._queryParamMap=Go(this.queryParams)),this._queryParamMap}toString(){return R_.serialize(this)}}class ge{constructor(t,e){this.segments=t,this.children=e,this.parent=null,St(e,(i,r)=>i.parent=this)}hasChildren(){return this.numberOfChildren>0}get numberOfChildren(){return Object.keys(this.children).length}toString(){return gd(this)}}class ka{constructor(t,e){this.path=t,this.parameters=e}get parameterMap(){return this._parameterMap||(this._parameterMap=Go(this.parameters)),this._parameterMap}toString(){return yk(this)}}function Br(n,t){return n.length===t.length&&n.every((e,i)=>e.path===t[i].path)}let xa=(()=>{class n{}return n.\u0275fac=function(e){return new(e||n)},n.\u0275prov=R({token:n,factory:function(){return new Wf},providedIn:"root"}),n})();class Wf{parse(t){const e=new __(t);return new _r(e.parseRootSegment(),e.parseQueryParams(),e.parseFragment())}serialize(t){const e=`/${Da(t.root,!0)}`,i=function O_(n){const t=Object.keys(n).map(e=>{const i=n[e];return Array.isArray(i)?i.map(r=>`${bd(e)}=${bd(r)}`).join("&"):`${bd(e)}=${bd(i)}`}).filter(e=>!!e);return t.length?`?${t.join("&")}`:""}(t.queryParams);return`${e}${i}${"string"==typeof t.fragment?`#${function T_(n){return encodeURI(n)}(t.fragment)}`:""}`}}const R_=new Wf;function gd(n){return n.segments.map(t=>yk(t)).join("/")}function Da(n,t){if(!n.hasChildren())return gd(n);if(t){const e=n.children[fe]?Da(n.children[fe],!1):"",i=[];return St(n.children,(r,o)=>{o!==fe&&i.push(`${o}:${Da(r,!1)}`)}),i.length>0?`${e}(${i.join("//")})`:e}{const e=function I_(n,t){let e=[];return St(n.children,(i,r)=>{r===fe&&(e=e.concat(t(i,r)))}),St(n.children,(i,r)=>{r!==fe&&(e=e.concat(t(i,r)))}),e}(n,(i,r)=>r===fe?[Da(n.children[fe],!1)]:[`${r}:${Da(i,!1)}`]);return 1===Object.keys(n.children).length&&null!=n.children[fe]?`${gd(n)}/${e[0]}`:`${gd(n)}/(${e.join("//")})`}}function gk(n){return encodeURIComponent(n).replace(/%40/g,"@").replace(/%3A/gi,":").replace(/%24/g,"$").replace(/%2C/gi,",")}function bd(n){return gk(n).replace(/%3B/gi,";")}function Qf(n){return gk(n).replace(/\(/g,"%28").replace(/\)/g,"%29").replace(/%26/gi,"&")}function yd(n){return decodeURIComponent(n)}function bk(n){return yd(n.replace(/\+/g,"%20"))}function yk(n){return`${Qf(n.path)}${function M_(n){return Object.keys(n).map(t=>`;${Qf(t)}=${Qf(n[t])}`).join("")}(n.parameters)}`}const F_=/^[^\/()?;=#]+/;function vd(n){const t=n.match(F_);return t?t[0]:""}const V_=/^[^=?&#]+/,N_=/^[^&#]+/;class __{constructor(t){this.url=t,this.remaining=t}parseRootSegment(){return this.consumeOptional("/"),""===this.remaining||this.peekStartsWith("?")||this.peekStartsWith("#")?new ge([],{}):new ge([],this.parseChildren())}parseQueryParams(){const t={};if(this.consumeOptional("?"))do{this.parseQueryParam(t)}while(this.consumeOptional("&"));return t}parseFragment(){return this.consumeOptional("#")?decodeURIComponent(this.remaining):null}parseChildren(){if(""===this.remaining)return{};this.consumeOptional("/");const t=[];for(this.peekStartsWith("(")||t.push(this.parseSegment());this.peekStartsWith("/")&&!this.peekStartsWith("//")&&!this.peekStartsWith("/(");)this.capture("/"),t.push(this.parseSegment());let e={};this.peekStartsWith("/(")&&(this.capture("/"),e=this.parseParens(!0));let i={};return this.peekStartsWith("(")&&(i=this.parseParens(!1)),(t.length>0||Object.keys(e).length>0)&&(i[fe]=new ge(t,e)),i}parseSegment(){const t=vd(this.remaining);if(""===t&&this.peekStartsWith(";"))throw new C(4009,fd);return this.capture(t),new ka(yd(t),this.parseMatrixParams())}parseMatrixParams(){const t={};for(;this.consumeOptional(";");)this.parseParam(t);return t}parseParam(t){const e=vd(this.remaining);if(!e)return;this.capture(e);let i="";if(this.consumeOptional("=")){const r=vd(this.remaining);r&&(i=r,this.capture(i))}t[yd(e)]=yd(i)}parseQueryParam(t){const e=function U_(n){const t=n.match(V_);return t?t[0]:""}(this.remaining);if(!e)return;this.capture(e);let i="";if(this.consumeOptional("=")){const s=function P_(n){const t=n.match(N_);return t?t[0]:""}(this.remaining);s&&(i=s,this.capture(i))}const r=bk(e),o=bk(i);if(t.hasOwnProperty(r)){let s=t[r];Array.isArray(s)||(s=[s],t[r]=s),s.push(o)}else t[r]=o}parseParens(t){const e={};for(this.capture("(");!this.consumeOptional(")")&&this.remaining.length>0;){const i=vd(this.remaining),r=this.remaining[i.length];if("/"!==r&&")"!==r&&";"!==r)throw new C(4010,fd);let o;i.indexOf(":")>-1?(o=i.slice(0,i.indexOf(":")),this.capture(o),this.capture(":")):t&&(o=fe);const s=this.parseChildren();e[o]=1===Object.keys(s).length?s[fe]:new ge([],s),this.consumeOptional("//")}return e}peekStartsWith(t){return this.remaining.startsWith(t)}consumeOptional(t){return!!this.peekStartsWith(t)&&(this.remaining=this.remaining.substring(t.length),!0)}capture(t){if(!this.consumeOptional(t))throw new C(4011,fd)}}function Gf(n){return n.segments.length>0?new ge([],{[fe]:n}):n}function Ad(n){const t={};for(const i of Object.keys(n.children)){const o=Ad(n.children[i]);(o.segments.length>0||o.hasChildren())&&(t[i]=o)}return function B_(n){if(1===n.numberOfChildren&&n.children[fe]){const t=n.children[fe];return new ge(n.segments.concat(t.segments),t.children)}return n}(new ge(n.segments,t))}function jr(n){return n instanceof _r}function K_(n,t,e,i,r){if(0===e.length)return zo(t.root,t.root,t.root,i,r);const o=function Sk(n){if("string"==typeof n[0]&&1===n.length&&"/"===n[0])return new Ak(!0,0,n);let t=0,e=!1;const i=n.reduce((r,o,s)=>{if("object"==typeof o&&null!=o){if(o.outlets){const a={};return St(o.outlets,(l,c)=>{a[c]="string"==typeof l?l.split("/"):l}),[...r,{outlets:a}]}if(o.segmentPath)return[...r,o.segmentPath]}return"string"!=typeof o?[...r,o]:0===s?(o.split("/").forEach((a,l)=>{0==l&&"."===a||(0==l&&""===a?e=!0:".."===a?t++:""!=a&&r.push(a))}),r):[...r,o]},[]);return new Ak(e,t,i)}(e);return o.toRoot()?zo(t.root,t.root,new ge([],{}),i,r):function s(l){const c=function L_(n,t,e,i){if(n.isAbsolute)return new Yo(t.root,!0,0);if(-1===i)return new Yo(e,e===t.root,0);return function Ck(n,t,e){let i=n,r=t,o=e;for(;o>r;){if(o-=r,i=i.parent,!i)throw new C(4005,!1);r=i.segments.length}return new Yo(i,!1,r-o)}(e,i+(wa(n.commands[0])?0:1),n.numberOfDoubleDots)}(o,t,n.snapshot?._urlSegment,l),d=c.processChildren?Ia(c.segmentGroup,c.index,o.commands):Yf(c.segmentGroup,c.index,o.commands);return zo(t.root,c.segmentGroup,d,i,r)}(n.snapshot?._lastPathIndex)}function wa(n){return"object"==typeof n&&null!=n&&!n.outlets&&!n.segmentPath}function Ea(n){return"object"==typeof n&&null!=n&&n.outlets}function zo(n,t,e,i,r){let s,o={};i&&St(i,(l,c)=>{o[c]=Array.isArray(l)?l.map(d=>`${d}`):`${l}`}),s=n===t?e:vk(n,t,e);const a=Gf(Ad(s));return new _r(a,o,r)}function vk(n,t,e){const i={};return St(n.children,(r,o)=>{i[o]=r===t?e:vk(r,t,e)}),new ge(n.segments,i)}class Ak{constructor(t,e,i){if(this.isAbsolute=t,this.numberOfDoubleDots=e,this.commands=i,t&&i.length>0&&wa(i[0]))throw new C(4003,!1);const r=i.find(Ea);if(r&&r!==dk(i))throw new C(4004,!1)}toRoot(){return this.isAbsolute&&1===this.commands.length&&"/"==this.commands[0]}}class Yo{constructor(t,e,i){this.segmentGroup=t,this.processChildren=e,this.index=i}}function Yf(n,t,e){if(n||(n=new ge([],{})),0===n.segments.length&&n.hasChildren())return Ia(n,t,e);const i=function W_(n,t,e){let i=0,r=t;const o={match:!1,pathIndex:0,commandIndex:0};for(;r<n.segments.length;){if(i>=e.length)return o;const s=n.segments[r],a=e[i];if(Ea(a))break;const l=`${a}`,c=i<e.length-1?e[i+1]:null;if(r>0&&void 0===l)break;if(l&&c&&"object"==typeof c&&void 0===c.outlets){if(!xk(l,c,s))return o;i+=2}else{if(!xk(l,{},s))return o;i++}r++}return{match:!0,pathIndex:r,commandIndex:i}}(n,t,e),r=e.slice(i.commandIndex);if(i.match&&i.pathIndex<n.segments.length){const o=new ge(n.segments.slice(0,i.pathIndex),{});return o.children[fe]=new ge(n.segments.slice(i.pathIndex),n.children),Ia(o,0,r)}return i.match&&0===r.length?new ge(n.segments,{}):i.match&&!n.hasChildren()?Xf(n,t,e):i.match?Ia(n,0,r):Xf(n,t,e)}function Ia(n,t,e){if(0===e.length)return new ge(n.segments,{});{const i=function J_(n){return Ea(n[0])?n[0].outlets:{[fe]:n}}(e),r={};return St(i,(o,s)=>{"string"==typeof o&&(o=[o]),null!==o&&(r[s]=Yf(n.children[s],t,o))}),St(n.children,(o,s)=>{void 0===i[s]&&(r[s]=o)}),new ge(n.segments,r)}}function Xf(n,t,e){const i=n.segments.slice(0,t);let r=0;for(;r<e.length;){const o=e[r];if(Ea(o)){const l=Q_(o.outlets);return new ge(i,l)}if(0===r&&wa(e[0])){i.push(new ka(n.segments[t].path,kk(e[0]))),r++;continue}const s=Ea(o)?o.outlets[fe]:`${o}`,a=r<e.length-1?e[r+1]:null;s&&a&&wa(a)?(i.push(new ka(s,kk(a))),r+=2):(i.push(new ka(s,{})),r++)}return new ge(i,{})}function Q_(n){const t={};return St(n,(e,i)=>{"string"==typeof e&&(e=[e]),null!==e&&(t[i]=Xf(new ge([],{}),0,e))}),t}function kk(n){const t={};return St(n,(e,i)=>t[i]=`${e}`),t}function xk(n,t,e){return n==e.path&&ni(t,e.parameters)}const Ra="imperative";class ii{constructor(t,e){this.id=t,this.url=e}}class Zf extends ii{constructor(t,e,i="imperative",r=null){super(t,e),this.type=0,this.navigationTrigger=i,this.restoredState=r}toString(){return`NavigationStart(id: ${this.id}, url: '${this.url}')`}}class qr extends ii{constructor(t,e,i){super(t,e),this.urlAfterRedirects=i,this.type=1}toString(){return`NavigationEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}')`}}class Sd extends ii{constructor(t,e,i,r){super(t,e),this.reason=i,this.code=r,this.type=2}toString(){return`NavigationCancel(id: ${this.id}, url: '${this.url}')`}}class Dk extends ii{constructor(t,e,i,r){super(t,e),this.reason=i,this.code=r,this.type=16}}class wk extends ii{constructor(t,e,i,r){super(t,e),this.error=i,this.target=r,this.type=3}toString(){return`NavigationError(id: ${this.id}, url: '${this.url}', error: ${this.error})`}}class G_ extends ii{constructor(t,e,i,r){super(t,e),this.urlAfterRedirects=i,this.state=r,this.type=4}toString(){return`RoutesRecognized(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`}}class z_ extends ii{constructor(t,e,i,r){super(t,e),this.urlAfterRedirects=i,this.state=r,this.type=7}toString(){return`GuardsCheckStart(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`}}class Y_ extends ii{constructor(t,e,i,r,o){super(t,e),this.urlAfterRedirects=i,this.state=r,this.shouldActivate=o,this.type=8}toString(){return`GuardsCheckEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state}, shouldActivate: ${this.shouldActivate})`}}class X_ extends ii{constructor(t,e,i,r){super(t,e),this.urlAfterRedirects=i,this.state=r,this.type=5}toString(){return`ResolveStart(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`}}class Z_ extends ii{constructor(t,e,i,r){super(t,e),this.urlAfterRedirects=i,this.state=r,this.type=6}toString(){return`ResolveEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`}}class $_{constructor(t){this.route=t,this.type=9}toString(){return`RouteConfigLoadStart(path: ${this.route.path})`}}class eB{constructor(t){this.route=t,this.type=10}toString(){return`RouteConfigLoadEnd(path: ${this.route.path})`}}class tB{constructor(t){this.snapshot=t,this.type=11}toString(){return`ChildActivationStart(path: '${this.snapshot.routeConfig&&this.snapshot.routeConfig.path||""}')`}}class nB{constructor(t){this.snapshot=t,this.type=12}toString(){return`ChildActivationEnd(path: '${this.snapshot.routeConfig&&this.snapshot.routeConfig.path||""}')`}}class iB{constructor(t){this.snapshot=t,this.type=13}toString(){return`ActivationStart(path: '${this.snapshot.routeConfig&&this.snapshot.routeConfig.path||""}')`}}class rB{constructor(t){this.snapshot=t,this.type=14}toString(){return`ActivationEnd(path: '${this.snapshot.routeConfig&&this.snapshot.routeConfig.path||""}')`}}class Ek{constructor(t,e,i){this.routerEvent=t,this.position=e,this.anchor=i,this.type=15}toString(){return`Scroll(anchor: '${this.anchor}', position: '${this.position?`${this.position[0]}, ${this.position[1]}`:null}')`}}let sB=(()=>{class n{createUrlTree(e,i,r,o,s,a){return K_(e||i.root,r,o,s,a)}}return n.\u0275fac=function(e){return new(e||n)},n.\u0275prov=R({token:n,factory:n.\u0275fac}),n})(),aB=(()=>{class n{}return n.\u0275fac=function(e){return new(e||n)},n.\u0275prov=R({token:n,factory:function(t){return sB.\u0275fac(t)},providedIn:"root"}),n})();class Ik{constructor(t){this._root=t}get root(){return this._root.value}parent(t){const e=this.pathFromRoot(t);return e.length>1?e[e.length-2]:null}children(t){const e=$f(t,this._root);return e?e.children.map(i=>i.value):[]}firstChild(t){const e=$f(t,this._root);return e&&e.children.length>0?e.children[0].value:null}siblings(t){const e=em(t,this._root);return e.length<2?[]:e[e.length-2].children.map(r=>r.value).filter(r=>r!==t)}pathFromRoot(t){return em(t,this._root).map(e=>e.value)}}function $f(n,t){if(n===t.value)return t;for(const e of t.children){const i=$f(n,e);if(i)return i}return null}function em(n,t){if(n===t.value)return[t];for(const e of t.children){const i=em(n,e);if(i.length)return i.unshift(t),i}return[]}class Ri{constructor(t,e){this.value=t,this.children=e}toString(){return`TreeNode(${this.value})`}}function Xo(n){const t={};return n&&n.children.forEach(e=>t[e.value.outlet]=e),t}class Rk extends Ik{constructor(t,e){super(t),this.snapshot=e,tm(this,t)}toString(){return this.snapshot.toString()}}function Tk(n,t){const e=function lB(n,t){const s=new Cd([],{},{},"",{},fe,t,null,n.root,-1,{});return new Ok("",new Ri(s,[]))}(n,t),i=new kn([new ka("",{})]),r=new kn({}),o=new kn({}),s=new kn({}),a=new kn(""),l=new Zo(i,r,s,a,o,fe,t,e.root);return l.snapshot=e.root,new Rk(new Ri(l,[]),e)}class Zo{constructor(t,e,i,r,o,s,a,l){this.url=t,this.params=e,this.queryParams=i,this.fragment=r,this.data=o,this.outlet=s,this.component=a,this.title=this.data?.pipe(B(c=>c[Ca]))??N(void 0),this._futureSnapshot=l}get routeConfig(){return this._futureSnapshot.routeConfig}get root(){return this._routerState.root}get parent(){return this._routerState.parent(this)}get firstChild(){return this._routerState.firstChild(this)}get children(){return this._routerState.children(this)}get pathFromRoot(){return this._routerState.pathFromRoot(this)}get paramMap(){return this._paramMap||(this._paramMap=this.params.pipe(B(t=>Go(t)))),this._paramMap}get queryParamMap(){return this._queryParamMap||(this._queryParamMap=this.queryParams.pipe(B(t=>Go(t)))),this._queryParamMap}toString(){return this.snapshot?this.snapshot.toString():`Future(${this._futureSnapshot})`}}function Mk(n,t="emptyOnly"){const e=n.pathFromRoot;let i=0;if("always"!==t)for(i=e.length-1;i>=1;){const r=e[i],o=e[i-1];if(r.routeConfig&&""===r.routeConfig.path)i--;else{if(o.component)break;i--}}return function cB(n){return n.reduce((t,e)=>({params:{...t.params,...e.params},data:{...t.data,...e.data},resolve:{...e.data,...t.resolve,...e.routeConfig?.data,...e._resolvedData}}),{params:{},data:{},resolve:{}})}(e.slice(i))}class Cd{get title(){return this.data?.[Ca]}constructor(t,e,i,r,o,s,a,l,c,d,u){this.url=t,this.params=e,this.queryParams=i,this.fragment=r,this.data=o,this.outlet=s,this.component=a,this.routeConfig=l,this._urlSegment=c,this._lastPathIndex=d,this._resolve=u}get root(){return this._routerState.root}get parent(){return this._routerState.parent(this)}get firstChild(){return this._routerState.firstChild(this)}get children(){return this._routerState.children(this)}get pathFromRoot(){return this._routerState.pathFromRoot(this)}get paramMap(){return this._paramMap||(this._paramMap=Go(this.params)),this._paramMap}get queryParamMap(){return this._queryParamMap||(this._queryParamMap=Go(this.queryParams)),this._queryParamMap}toString(){return`Route(url:'${this.url.map(i=>i.toString()).join("/")}', path:'${this.routeConfig?this.routeConfig.path:""}')`}}class Ok extends Ik{constructor(t,e){super(e),this.url=t,tm(this,e)}toString(){return Fk(this._root)}}function tm(n,t){t.value._routerState=n,t.children.forEach(e=>tm(n,e))}function Fk(n){const t=n.children.length>0?` { ${n.children.map(Fk).join(", ")} } `:"";return`${n.value}${t}`}function nm(n){if(n.snapshot){const t=n.snapshot,e=n._futureSnapshot;n.snapshot=e,ni(t.queryParams,e.queryParams)||n.queryParams.next(e.queryParams),t.fragment!==e.fragment&&n.fragment.next(e.fragment),ni(t.params,e.params)||n.params.next(e.params),function k_(n,t){if(n.length!==t.length)return!1;for(let e=0;e<n.length;++e)if(!ni(n[e],t[e]))return!1;return!0}(t.url,e.url)||n.url.next(e.url),ni(t.data,e.data)||n.data.next(e.data)}else n.snapshot=n._futureSnapshot,n.data.next(n._futureSnapshot.data)}function im(n,t){const e=ni(n.params,t.params)&&function E_(n,t){return Br(n,t)&&n.every((e,i)=>ni(e.parameters,t[i].parameters))}(n.url,t.url);return e&&!(!n.parent!=!t.parent)&&(!n.parent||im(n.parent,t.parent))}function Ta(n,t,e){if(e&&n.shouldReuseRoute(t.value,e.value.snapshot)){const i=e.value;i._futureSnapshot=t.value;const r=function uB(n,t,e){return t.children.map(i=>{for(const r of e.children)if(n.shouldReuseRoute(i.value,r.value.snapshot))return Ta(n,i,r);return Ta(n,i)})}(n,t,e);return new Ri(i,r)}{if(n.shouldAttach(t.value)){const o=n.retrieve(t.value);if(null!==o){const s=o.route;return s.value._futureSnapshot=t.value,s.children=t.children.map(a=>Ta(n,a)),s}}const i=function hB(n){return new Zo(new kn(n.url),new kn(n.params),new kn(n.queryParams),new kn(n.fragment),new kn(n.data),n.outlet,n.component,n)}(t.value),r=t.children.map(o=>Ta(n,o));return new Ri(i,r)}}const rm="ngNavigationCancelingError";function Vk(n,t){const{redirectTo:e,navigationBehaviorOptions:i}=jr(t)?{redirectTo:t,navigationBehaviorOptions:void 0}:t,r=Uk(!1,0,t);return r.url=e,r.navigationBehaviorOptions=i,r}function Uk(n,t,e){const i=new Error("NavigationCancelingError: "+(n||""));return i[rm]=!0,i.cancellationCode=t,e&&(i.url=e),i}function Nk(n){return Pk(n)&&jr(n.url)}function Pk(n){return n&&n[rm]}class pB{constructor(){this.outlet=null,this.route=null,this.resolver=null,this.injector=null,this.children=new Ma,this.attachRef=null}}let Ma=(()=>{class n{constructor(){this.contexts=new Map}onChildOutletCreated(e,i){const r=this.getOrCreateContext(e);r.outlet=i,this.contexts.set(e,r)}onChildOutletDestroyed(e){const i=this.getContext(e);i&&(i.outlet=null,i.attachRef=null)}onOutletDeactivated(){const e=this.contexts;return this.contexts=new Map,e}onOutletReAttached(e){this.contexts=e}getOrCreateContext(e){let i=this.getContext(e);return i||(i=new pB,this.contexts.set(e,i)),i}getContext(e){return this.contexts.get(e)||null}}return n.\u0275fac=function(e){return new(e||n)},n.\u0275prov=R({token:n,factory:n.\u0275fac,providedIn:"root"}),n})();const kd=!1;let xd=(()=>{class n{constructor(){this.activated=null,this._activatedRoute=null,this.name=fe,this.activateEvents=new O,this.deactivateEvents=new O,this.attachEvents=new O,this.detachEvents=new O,this.parentContexts=ie(Ma),this.location=ie(jt),this.changeDetector=ie(Xe),this.environmentInjector=ie(yi)}ngOnChanges(e){if(e.name){const{firstChange:i,previousValue:r}=e.name;if(i)return;this.isTrackedInParentContexts(r)&&(this.deactivate(),this.parentContexts.onChildOutletDestroyed(r)),this.initializeOutletWithName()}}ngOnDestroy(){this.isTrackedInParentContexts(this.name)&&this.parentContexts.onChildOutletDestroyed(this.name)}isTrackedInParentContexts(e){return this.parentContexts.getContext(e)?.outlet===this}ngOnInit(){this.initializeOutletWithName()}initializeOutletWithName(){if(this.parentContexts.onChildOutletCreated(this.name,this),this.activated)return;const e=this.parentContexts.getContext(this.name);e?.route&&(e.attachRef?this.attach(e.attachRef,e.route):this.activateWith(e.route,e.injector))}get isActivated(){return!!this.activated}get component(){if(!this.activated)throw new C(4012,kd);return this.activated.instance}get activatedRoute(){if(!this.activated)throw new C(4012,kd);return this._activatedRoute}get activatedRouteData(){return this._activatedRoute?this._activatedRoute.snapshot.data:{}}detach(){if(!this.activated)throw new C(4012,kd);this.location.detach();const e=this.activated;return this.activated=null,this._activatedRoute=null,this.detachEvents.emit(e.instance),e}attach(e,i){this.activated=e,this._activatedRoute=i,this.location.insert(e.hostView),this.attachEvents.emit(e.instance)}deactivate(){if(this.activated){const e=this.component;this.activated.destroy(),this.activated=null,this._activatedRoute=null,this.deactivateEvents.emit(e)}}activateWith(e,i){if(this.isActivated)throw new C(4013,kd);this._activatedRoute=e;const r=this.location,s=e.snapshot.component,a=this.parentContexts.getOrCreateContext(this.name).children,l=new fB(e,a,r.injector);if(i&&function mB(n){return!!n.resolveComponentFactory}(i)){const c=i.resolveComponentFactory(s);this.activated=r.createComponent(c,r.length,l)}else this.activated=r.createComponent(s,{index:r.length,injector:l,environmentInjector:i??this.environmentInjector});this.changeDetector.markForCheck(),this.activateEvents.emit(this.activated.instance)}}return n.\u0275fac=function(e){return new(e||n)},n.\u0275dir=M({type:n,selectors:[["router-outlet"]],inputs:{name:"name"},outputs:{activateEvents:"activate",deactivateEvents:"deactivate",attachEvents:"attach",detachEvents:"detach"},exportAs:["outlet"],standalone:!0,features:[ze]}),n})();class fB{constructor(t,e,i){this.route=t,this.childContexts=e,this.parent=i}get(t,e){return t===Zo?this.route:t===Ma?this.childContexts:this.parent.get(t,e)}}let om=(()=>{class n{}return n.\u0275fac=function(e){return new(e||n)},n.\u0275cmp=ee({type:n,selectors:[["ng-component"]],standalone:!0,features:[qp],decls:1,vars:0,template:function(e,i){1&e&&q(0,"router-outlet")},dependencies:[xd],encapsulation:2}),n})();function _k(n,t){return n.providers&&!n._injector&&(n._injector=_c(n.providers,t,`Route: ${n.path}`)),n._injector??t}function am(n){const t=n.children&&n.children.map(am),e=t?{...n,children:t}:{...n};return!e.component&&!e.loadComponent&&(t||e.loadChildren)&&e.outlet&&e.outlet!==fe&&(e.component=om),e}function Dn(n){return n.outlet||fe}function Bk(n,t){const e=n.filter(i=>Dn(i)===t);return e.push(...n.filter(i=>Dn(i)!==t)),e}function Oa(n){if(!n)return null;if(n.routeConfig?._injector)return n.routeConfig._injector;for(let t=n.parent;t;t=t.parent){const e=t.routeConfig;if(e?._loadedInjector)return e._loadedInjector;if(e?._injector)return e._injector}return null}class AB{constructor(t,e,i,r){this.routeReuseStrategy=t,this.futureState=e,this.currState=i,this.forwardEvent=r}activate(t){const e=this.futureState._root,i=this.currState?this.currState._root:null;this.deactivateChildRoutes(e,i,t),nm(this.futureState.root),this.activateChildRoutes(e,i,t)}deactivateChildRoutes(t,e,i){const r=Xo(e);t.children.forEach(o=>{const s=o.value.outlet;this.deactivateRoutes(o,r[s],i),delete r[s]}),St(r,(o,s)=>{this.deactivateRouteAndItsChildren(o,i)})}deactivateRoutes(t,e,i){const r=t.value,o=e?e.value:null;if(r===o)if(r.component){const s=i.getContext(r.outlet);s&&this.deactivateChildRoutes(t,e,s.children)}else this.deactivateChildRoutes(t,e,i);else o&&this.deactivateRouteAndItsChildren(e,i)}deactivateRouteAndItsChildren(t,e){t.value.component&&this.routeReuseStrategy.shouldDetach(t.value.snapshot)?this.detachAndStoreRouteSubtree(t,e):this.deactivateRouteAndOutlet(t,e)}detachAndStoreRouteSubtree(t,e){const i=e.getContext(t.value.outlet),r=i&&t.value.component?i.children:e,o=Xo(t);for(const s of Object.keys(o))this.deactivateRouteAndItsChildren(o[s],r);if(i&&i.outlet){const s=i.outlet.detach(),a=i.children.onOutletDeactivated();this.routeReuseStrategy.store(t.value.snapshot,{componentRef:s,route:t,contexts:a})}}deactivateRouteAndOutlet(t,e){const i=e.getContext(t.value.outlet),r=i&&t.value.component?i.children:e,o=Xo(t);for(const s of Object.keys(o))this.deactivateRouteAndItsChildren(o[s],r);i&&i.outlet&&(i.outlet.deactivate(),i.children.onOutletDeactivated(),i.attachRef=null,i.resolver=null,i.route=null)}activateChildRoutes(t,e,i){const r=Xo(e);t.children.forEach(o=>{this.activateRoutes(o,r[o.value.outlet],i),this.forwardEvent(new rB(o.value.snapshot))}),t.children.length&&this.forwardEvent(new nB(t.value.snapshot))}activateRoutes(t,e,i){const r=t.value,o=e?e.value:null;if(nm(r),r===o)if(r.component){const s=i.getOrCreateContext(r.outlet);this.activateChildRoutes(t,e,s.children)}else this.activateChildRoutes(t,e,i);else if(r.component){const s=i.getOrCreateContext(r.outlet);if(this.routeReuseStrategy.shouldAttach(r.snapshot)){const a=this.routeReuseStrategy.retrieve(r.snapshot);this.routeReuseStrategy.store(r.snapshot,null),s.children.onOutletReAttached(a.contexts),s.attachRef=a.componentRef,s.route=a.route.value,s.outlet&&s.outlet.attach(a.componentRef,a.route.value),nm(a.route.value),this.activateChildRoutes(t,null,s.children)}else{const a=Oa(r.snapshot),l=a?.get(kr)??null;s.attachRef=null,s.route=r,s.resolver=l,s.injector=a,s.outlet&&s.outlet.activateWith(r,s.injector),this.activateChildRoutes(t,null,s.children)}}else this.activateChildRoutes(t,null,i)}}class jk{constructor(t){this.path=t,this.route=this.path[this.path.length-1]}}class Dd{constructor(t,e){this.component=t,this.route=e}}function SB(n,t,e){const i=n._root;return Fa(i,t?t._root:null,e,[i.value])}function $o(n,t){const e=Symbol(),i=t.get(n,e);return i===e?"function"!=typeof n||function I1(n){return null!==jl(n)}(n)?t.get(n):n:i}function Fa(n,t,e,i,r={canDeactivateChecks:[],canActivateChecks:[]}){const o=Xo(t);return n.children.forEach(s=>{(function kB(n,t,e,i,r={canDeactivateChecks:[],canActivateChecks:[]}){const o=n.value,s=t?t.value:null,a=e?e.getContext(n.value.outlet):null;if(s&&o.routeConfig===s.routeConfig){const l=function xB(n,t,e){if("function"==typeof e)return e(n,t);switch(e){case"pathParamsChange":return!Br(n.url,t.url);case"pathParamsOrQueryParamsChange":return!Br(n.url,t.url)||!ni(n.queryParams,t.queryParams);case"always":return!0;case"paramsOrQueryParamsChange":return!im(n,t)||!ni(n.queryParams,t.queryParams);default:return!im(n,t)}}(s,o,o.routeConfig.runGuardsAndResolvers);l?r.canActivateChecks.push(new jk(i)):(o.data=s.data,o._resolvedData=s._resolvedData),Fa(n,t,o.component?a?a.children:null:e,i,r),l&&a&&a.outlet&&a.outlet.isActivated&&r.canDeactivateChecks.push(new Dd(a.outlet.component,s))}else s&&Va(t,a,r),r.canActivateChecks.push(new jk(i)),Fa(n,null,o.component?a?a.children:null:e,i,r)})(s,o[s.value.outlet],e,i.concat([s.value]),r),delete o[s.value.outlet]}),St(o,(s,a)=>Va(s,e.getContext(a),r)),r}function Va(n,t,e){const i=Xo(n),r=n.value;St(i,(o,s)=>{Va(o,r.component?t?t.children.getContext(s):null:t,e)}),e.canDeactivateChecks.push(new Dd(r.component&&t&&t.outlet&&t.outlet.isActivated?t.outlet.component:null,r))}function Ua(n){return"function"==typeof n}function lm(n){return n instanceof dd||"EmptyError"===n?.name}const wd=Symbol("INITIAL_VALUE");function es(){return Mt(n=>Kf(n.map(t=>t.pipe(Ue(1),xn(wd)))).pipe(B(t=>{for(const e of t)if(!0!==e){if(e===wd)return wd;if(!1===e||e instanceof _r)return e}return!0}),Re(t=>t!==wd),Ue(1)))}function qk(n){return function zI(...n){return ab(n)}(nt(t=>{if(jr(t))throw Vk(0,t)}),B(t=>!0===t))}const cm={matched:!1,consumedSegments:[],remainingSegments:[],parameters:{},positionalParamSegments:{}};function Kk(n,t,e,i,r){const o=dm(n,t,e);return o.matched?function qB(n,t,e,i){const r=t.canMatch;return r&&0!==r.length?N(r.map(s=>{const a=$o(s,n);return Yi(function TB(n){return n&&Ua(n.canMatch)}(a)?a.canMatch(t,e):n.runInContext(()=>a(t,e)))})).pipe(es(),qk()):N(!0)}(i=_k(t,i),t,e).pipe(B(s=>!0===s?o:{...cm})):N(o)}function dm(n,t,e){if(""===t.path)return"full"===t.pathMatch&&(n.hasChildren()||e.length>0)?{...cm}:{matched:!0,consumedSegments:[],remainingSegments:e,parameters:{},positionalParamSegments:{}};const r=(t.matcher||C_)(e,n,t);if(!r)return{...cm};const o={};St(r.posParams,(a,l)=>{o[l]=a.path});const s=r.consumed.length>0?{...o,...r.consumed[r.consumed.length-1].parameters}:o;return{matched:!0,consumedSegments:r.consumed,remainingSegments:e.slice(r.consumed.length),parameters:s,positionalParamSegments:r.posParams??{}}}function Ed(n,t,e,i){if(e.length>0&&function LB(n,t,e){return e.some(i=>Id(n,t,i)&&Dn(i)!==fe)}(n,e,i)){const o=new ge(t,function HB(n,t,e,i){const r={};r[fe]=i,i._sourceSegment=n,i._segmentIndexShift=t.length;for(const o of e)if(""===o.path&&Dn(o)!==fe){const s=new ge([],{});s._sourceSegment=n,s._segmentIndexShift=t.length,r[Dn(o)]=s}return r}(n,t,i,new ge(e,n.children)));return o._sourceSegment=n,o._segmentIndexShift=t.length,{segmentGroup:o,slicedSegments:[]}}if(0===e.length&&function JB(n,t,e){return e.some(i=>Id(n,t,i))}(n,e,i)){const o=new ge(n.segments,function KB(n,t,e,i,r){const o={};for(const s of i)if(Id(n,e,s)&&!r[Dn(s)]){const a=new ge([],{});a._sourceSegment=n,a._segmentIndexShift=t.length,o[Dn(s)]=a}return{...r,...o}}(n,t,e,i,n.children));return o._sourceSegment=n,o._segmentIndexShift=t.length,{segmentGroup:o,slicedSegments:e}}const r=new ge(n.segments,n.children);return r._sourceSegment=n,r._segmentIndexShift=t.length,{segmentGroup:r,slicedSegments:e}}function Id(n,t,e){return(!(n.hasChildren()||t.length>0)||"full"!==e.pathMatch)&&""===e.path}function Hk(n,t,e,i){return!!(Dn(n)===i||i!==fe&&Id(t,e,n))&&("**"===n.path||dm(t,n,e).matched)}function Lk(n,t,e){return 0===t.length&&!n.children[e]}const Rd=!1;class Td{constructor(t){this.segmentGroup=t||null}}class Jk{constructor(t){this.urlTree=t}}function Na(n){return Pr(new Td(n))}function Wk(n){return Pr(new Jk(n))}class zB{constructor(t,e,i,r,o){this.injector=t,this.configLoader=e,this.urlSerializer=i,this.urlTree=r,this.config=o,this.allowRedirects=!0}apply(){const t=Ed(this.urlTree.root,[],[],this.config).segmentGroup,e=new ge(t.segments,t.children);return this.expandSegmentGroup(this.injector,this.config,e,fe).pipe(B(o=>this.createUrlTree(Ad(o),this.urlTree.queryParams,this.urlTree.fragment))).pipe(Ii(o=>{if(o instanceof Jk)return this.allowRedirects=!1,this.match(o.urlTree);throw o instanceof Td?this.noMatchError(o):o}))}match(t){return this.expandSegmentGroup(this.injector,this.config,t.root,fe).pipe(B(r=>this.createUrlTree(Ad(r),t.queryParams,t.fragment))).pipe(Ii(r=>{throw r instanceof Td?this.noMatchError(r):r}))}noMatchError(t){return new C(4002,Rd)}createUrlTree(t,e,i){const r=Gf(t);return new _r(r,e,i)}expandSegmentGroup(t,e,i,r){return 0===i.segments.length&&i.hasChildren()?this.expandChildren(t,e,i).pipe(B(o=>new ge([],o))):this.expandSegment(t,i,e,i.segments,r,!0)}expandChildren(t,e,i){const r=[];for(const o of Object.keys(i.children))"primary"===o?r.unshift(o):r.push(o);return it(r).pipe(zi(o=>{const s=i.children[o],a=Bk(e,o);return this.expandSegmentGroup(t,a,s,o).pipe(B(l=>({segment:l,outlet:o})))}),ok((o,s)=>(o[s.outlet]=s.segment,o),{}),sk())}expandSegment(t,e,i,r,o,s){return it(i).pipe(zi(a=>this.expandSegmentAgainstRoute(t,e,i,a,r,o,s).pipe(Ii(c=>{if(c instanceof Td)return N(null);throw c}))),Gi(a=>!!a),Ii((a,l)=>{if(lm(a))return Lk(e,r,o)?N(new ge([],{})):Na(e);throw a}))}expandSegmentAgainstRoute(t,e,i,r,o,s,a){return Hk(r,e,o,s)?void 0===r.redirectTo?this.matchSegmentAgainstRoute(t,e,r,o,s):a&&this.allowRedirects?this.expandSegmentAgainstRouteUsingRedirect(t,e,i,r,o,s):Na(e):Na(e)}expandSegmentAgainstRouteUsingRedirect(t,e,i,r,o,s){return"**"===r.path?this.expandWildCardWithParamsAgainstRouteUsingRedirect(t,i,r,s):this.expandRegularSegmentAgainstRouteUsingRedirect(t,e,i,r,o,s)}expandWildCardWithParamsAgainstRouteUsingRedirect(t,e,i,r){const o=this.applyRedirectCommands([],i.redirectTo,{});return i.redirectTo.startsWith("/")?Wk(o):this.lineralizeSegments(i,o).pipe(lt(s=>{const a=new ge(s,{});return this.expandSegment(t,a,e,s,r,!1)}))}expandRegularSegmentAgainstRouteUsingRedirect(t,e,i,r,o,s){const{matched:a,consumedSegments:l,remainingSegments:c,positionalParamSegments:d}=dm(e,r,o);if(!a)return Na(e);const u=this.applyRedirectCommands(l,r.redirectTo,d);return r.redirectTo.startsWith("/")?Wk(u):this.lineralizeSegments(r,u).pipe(lt(h=>this.expandSegment(t,e,i,h.concat(c),s,!1)))}matchSegmentAgainstRoute(t,e,i,r,o){return"**"===i.path?(t=_k(i,t),i.loadChildren?(i._loadedRoutes?N({routes:i._loadedRoutes,injector:i._loadedInjector}):this.configLoader.loadChildren(t,i)).pipe(B(a=>(i._loadedRoutes=a.routes,i._loadedInjector=a.injector,new ge(r,{})))):N(new ge(r,{}))):Kk(e,i,r,t).pipe(Mt(({matched:s,consumedSegments:a,remainingSegments:l})=>s?this.getChildConfig(t=i._injector??t,i,r).pipe(lt(d=>{const u=d.injector??t,h=d.routes,{segmentGroup:f,slicedSegments:m}=Ed(e,a,l,h),g=new ge(f.segments,f.children);if(0===m.length&&g.hasChildren())return this.expandChildren(u,h,g).pipe(B(S=>new ge(a,S)));if(0===h.length&&0===m.length)return N(new ge(a,{}));const A=Dn(i)===o;return this.expandSegment(u,g,h,m,A?fe:o,!0).pipe(B(T=>new ge(a.concat(T.segments),T.children)))})):Na(e)))}getChildConfig(t,e,i){return e.children?N({routes:e.children,injector:t}):e.loadChildren?void 0!==e._loadedRoutes?N({routes:e._loadedRoutes,injector:e._loadedInjector}):function jB(n,t,e,i){const r=t.canLoad;return void 0===r||0===r.length?N(!0):N(r.map(s=>{const a=$o(s,n);return Yi(function wB(n){return n&&Ua(n.canLoad)}(a)?a.canLoad(t,e):n.runInContext(()=>a(t,e)))})).pipe(es(),qk())}(t,e,i).pipe(lt(r=>r?this.configLoader.loadChildren(t,e).pipe(nt(o=>{e._loadedRoutes=o.routes,e._loadedInjector=o.injector})):function QB(n){return Pr(Uk(Rd,3))}())):N({routes:[],injector:t})}lineralizeSegments(t,e){let i=[],r=e.root;for(;;){if(i=i.concat(r.segments),0===r.numberOfChildren)return N(i);if(r.numberOfChildren>1||!r.children[fe])return Pr(new C(4e3,Rd));r=r.children[fe]}}applyRedirectCommands(t,e,i){return this.applyRedirectCreateUrlTree(e,this.urlSerializer.parse(e),t,i)}applyRedirectCreateUrlTree(t,e,i,r){const o=this.createSegmentGroup(t,e.root,i,r);return new _r(o,this.createQueryParams(e.queryParams,this.urlTree.queryParams),e.fragment)}createQueryParams(t,e){const i={};return St(t,(r,o)=>{if("string"==typeof r&&r.startsWith(":")){const a=r.substring(1);i[o]=e[a]}else i[o]=r}),i}createSegmentGroup(t,e,i,r){const o=this.createSegments(t,e.segments,i,r);let s={};return St(e.children,(a,l)=>{s[l]=this.createSegmentGroup(t,a,i,r)}),new ge(o,s)}createSegments(t,e,i,r){return e.map(o=>o.path.startsWith(":")?this.findPosParam(t,o,r):this.findOrReturn(o,i))}findPosParam(t,e,i){const r=i[e.path.substring(1)];if(!r)throw new C(4001,Rd);return r}findOrReturn(t,e){let i=0;for(const r of e){if(r.path===t.path)return e.splice(i),r;i++}return t}}class XB{}class ej{constructor(t,e,i,r,o,s,a){this.injector=t,this.rootComponentType=e,this.config=i,this.urlTree=r,this.url=o,this.paramsInheritanceStrategy=s,this.urlSerializer=a}recognize(){const t=Ed(this.urlTree.root,[],[],this.config.filter(e=>void 0===e.redirectTo)).segmentGroup;return this.processSegmentGroup(this.injector,this.config,t,fe).pipe(B(e=>{if(null===e)return null;const i=new Cd([],Object.freeze({}),Object.freeze({...this.urlTree.queryParams}),this.urlTree.fragment,{},fe,this.rootComponentType,null,this.urlTree.root,-1,{}),r=new Ri(i,e),o=new Ok(this.url,r);return this.inheritParamsAndData(o._root),o}))}inheritParamsAndData(t){const e=t.value,i=Mk(e,this.paramsInheritanceStrategy);e.params=Object.freeze(i.params),e.data=Object.freeze(i.data),t.children.forEach(r=>this.inheritParamsAndData(r))}processSegmentGroup(t,e,i,r){return 0===i.segments.length&&i.hasChildren()?this.processChildren(t,e,i):this.processSegment(t,e,i,i.segments,r)}processChildren(t,e,i){return it(Object.keys(i.children)).pipe(zi(r=>{const o=i.children[r],s=Bk(e,r);return this.processSegmentGroup(t,s,o,r)}),ok((r,o)=>r&&o?(r.push(...o),r):null),ak(r=>null!==r),ud(null),sk(),B(r=>{if(null===r)return null;const o=Gk(r);return function tj(n){n.sort((t,e)=>t.value.outlet===fe?-1:e.value.outlet===fe?1:t.value.outlet.localeCompare(e.value.outlet))}(o),o}))}processSegment(t,e,i,r,o){return it(e).pipe(zi(s=>this.processSegmentAgainstRoute(s._injector??t,s,i,r,o)),Gi(s=>!!s),Ii(s=>{if(lm(s))return Lk(i,r,o)?N([]):N(null);throw s}))}processSegmentAgainstRoute(t,e,i,r,o){if(e.redirectTo||!Hk(e,i,r,o))return N(null);let s;if("**"===e.path){const a=r.length>0?dk(r).parameters:{},l=Yk(i)+r.length;s=N({snapshot:new Cd(r,a,Object.freeze({...this.urlTree.queryParams}),this.urlTree.fragment,Xk(e),Dn(e),e.component??e._loadedComponent??null,e,zk(i),l,Zk(e)),consumedSegments:[],remainingSegments:[]})}else s=Kk(i,e,r,t).pipe(B(({matched:a,consumedSegments:l,remainingSegments:c,parameters:d})=>{if(!a)return null;const u=Yk(i)+l.length;return{snapshot:new Cd(l,d,Object.freeze({...this.urlTree.queryParams}),this.urlTree.fragment,Xk(e),Dn(e),e.component??e._loadedComponent??null,e,zk(i),u,Zk(e)),consumedSegments:l,remainingSegments:c}}));return s.pipe(Mt(a=>{if(null===a)return N(null);const{snapshot:l,consumedSegments:c,remainingSegments:d}=a;t=e._injector??t;const u=e._loadedInjector??t,h=function nj(n){return n.children?n.children:n.loadChildren?n._loadedRoutes:[]}(e),{segmentGroup:f,slicedSegments:m}=Ed(i,c,d,h.filter(A=>void 0===A.redirectTo));if(0===m.length&&f.hasChildren())return this.processChildren(u,h,f).pipe(B(A=>null===A?null:[new Ri(l,A)]));if(0===h.length&&0===m.length)return N([new Ri(l,[])]);const g=Dn(e)===o;return this.processSegment(u,h,f,m,g?fe:o).pipe(B(A=>null===A?null:[new Ri(l,A)]))}))}}function ij(n){const t=n.value.routeConfig;return t&&""===t.path&&void 0===t.redirectTo}function Gk(n){const t=[],e=new Set;for(const i of n){if(!ij(i)){t.push(i);continue}const r=t.find(o=>i.value.routeConfig===o.value.routeConfig);void 0!==r?(r.children.push(...i.children),e.add(r)):t.push(i)}for(const i of e){const r=Gk(i.children);t.push(new Ri(i.value,r))}return t.filter(i=>!e.has(i))}function zk(n){let t=n;for(;t._sourceSegment;)t=t._sourceSegment;return t}function Yk(n){let t=n,e=t._segmentIndexShift??0;for(;t._sourceSegment;)t=t._sourceSegment,e+=t._segmentIndexShift??0;return e-1}function Xk(n){return n.data||{}}function Zk(n){return n.resolve||{}}function $k(n){return"string"==typeof n.title||null===n.title}function um(n){return Mt(t=>{const e=n(t);return e?it(e).pipe(B(()=>t)):N(t)})}const ts=new D("ROUTES");let hm=(()=>{class n{constructor(e,i){this.injector=e,this.compiler=i,this.componentLoaders=new WeakMap,this.childrenLoaders=new WeakMap}loadComponent(e){if(this.componentLoaders.get(e))return this.componentLoaders.get(e);if(e._loadedComponent)return N(e._loadedComponent);this.onLoadStartListener&&this.onLoadStartListener(e);const i=Yi(e.loadComponent()).pipe(B(tx),nt(o=>{this.onLoadEndListener&&this.onLoadEndListener(e),e._loadedComponent=o}),pd(()=>{this.componentLoaders.delete(e)})),r=new Lf(i,()=>new P).pipe(Hf());return this.componentLoaders.set(e,r),r}loadChildren(e,i){if(this.childrenLoaders.get(i))return this.childrenLoaders.get(i);if(i._loadedRoutes)return N({routes:i._loadedRoutes,injector:i._loadedInjector});this.onLoadStartListener&&this.onLoadStartListener(i);const o=this.loadModuleFactoryOrRoutes(i.loadChildren).pipe(B(a=>{this.onLoadEndListener&&this.onLoadEndListener(i);let l,c,d=!1;Array.isArray(a)?c=a:(l=a.create(e).injector,c=ck(l.get(ts,[],G.Self|G.Optional)));return{routes:c.map(am),injector:l}}),pd(()=>{this.childrenLoaders.delete(i)})),s=new Lf(o,()=>new P).pipe(Hf());return this.childrenLoaders.set(i,s),s}loadModuleFactoryOrRoutes(e){return Yi(e()).pipe(B(tx),lt(r=>r instanceof HS||Array.isArray(r)?N(r):it(this.compiler.compileModuleAsync(r))))}}return n.\u0275fac=function(e){return new(e||n)(v(ht),v(V0))},n.\u0275prov=R({token:n,factory:n.\u0275fac,providedIn:"root"}),n})();function tx(n){return function hj(n){return n&&"object"==typeof n&&"default"in n}(n)?n.default:n}let Od=(()=>{class n{get hasRequestedNavigation(){return 0!==this.navigationId}constructor(){this.currentNavigation=null,this.lastSuccessfulNavigation=null,this.events=new P,this.configLoader=ie(hm),this.environmentInjector=ie(yi),this.urlSerializer=ie(xa),this.rootContexts=ie(Ma),this.navigationId=0,this.afterPreactivation=()=>N(void 0),this.rootComponentType=null,this.configLoader.onLoadEndListener=r=>this.events.next(new eB(r)),this.configLoader.onLoadStartListener=r=>this.events.next(new $_(r))}complete(){this.transitions?.complete()}handleNavigationRequest(e){const i=++this.navigationId;this.transitions?.next({...this.transitions.value,...e,id:i})}setupNavigations(e){return this.transitions=new kn({id:0,targetPageId:0,currentUrlTree:e.currentUrlTree,currentRawUrl:e.currentUrlTree,extractedUrl:e.urlHandlingStrategy.extract(e.currentUrlTree),urlAfterRedirects:e.urlHandlingStrategy.extract(e.currentUrlTree),rawUrl:e.currentUrlTree,extras:{},resolve:null,reject:null,promise:Promise.resolve(!0),source:Ra,restoredState:null,currentSnapshot:e.routerState.snapshot,targetSnapshot:null,currentRouterState:e.routerState,targetRouterState:null,guards:{canActivateChecks:[],canDeactivateChecks:[]},guardsResult:null}),this.transitions.pipe(Re(i=>0!==i.id),B(i=>({...i,extractedUrl:e.urlHandlingStrategy.extract(i.rawUrl)})),Mt(i=>{let r=!1,o=!1;return N(i).pipe(nt(s=>{this.currentNavigation={id:s.id,initialUrl:s.rawUrl,extractedUrl:s.extractedUrl,trigger:s.source,extras:s.extras,previousNavigation:this.lastSuccessfulNavigation?{...this.lastSuccessfulNavigation,previousNavigation:null}:null}}),Mt(s=>{const a=e.browserUrlTree.toString(),l=!e.navigated||s.extractedUrl.toString()!==a||a!==e.currentUrlTree.toString();if(!l&&"reload"!==(s.extras.onSameUrlNavigation??e.onSameUrlNavigation)){const d="";return this.events.next(new Dk(s.id,e.serializeUrl(i.rawUrl),d,0)),e.rawUrlTree=s.rawUrl,s.resolve(null),Mn}if(e.urlHandlingStrategy.shouldProcessUrl(s.rawUrl))return nx(s.source)&&(e.browserUrlTree=s.extractedUrl),N(s).pipe(Mt(d=>{const u=this.transitions?.getValue();return this.events.next(new Zf(d.id,this.urlSerializer.serialize(d.extractedUrl),d.source,d.restoredState)),u!==this.transitions?.getValue()?Mn:Promise.resolve(d)}),function YB(n,t,e,i){return Mt(r=>function GB(n,t,e,i,r){return new zB(n,t,e,i,r).apply()}(n,t,e,r.extractedUrl,i).pipe(B(o=>({...r,urlAfterRedirects:o}))))}(this.environmentInjector,this.configLoader,this.urlSerializer,e.config),nt(d=>{this.currentNavigation={...this.currentNavigation,finalUrl:d.urlAfterRedirects},i.urlAfterRedirects=d.urlAfterRedirects}),function oj(n,t,e,i,r){return lt(o=>function $B(n,t,e,i,r,o,s="emptyOnly"){return new ej(n,t,e,i,r,s,o).recognize().pipe(Mt(a=>null===a?function ZB(n){return new Me(t=>t.error(n))}(new XB):N(a)))}(n,t,e,o.urlAfterRedirects,i.serialize(o.urlAfterRedirects),i,r).pipe(B(s=>({...o,targetSnapshot:s}))))}(this.environmentInjector,this.rootComponentType,e.config,this.urlSerializer,e.paramsInheritanceStrategy),nt(d=>{if(i.targetSnapshot=d.targetSnapshot,"eager"===e.urlUpdateStrategy){if(!d.extras.skipLocationChange){const h=e.urlHandlingStrategy.merge(d.urlAfterRedirects,d.rawUrl);e.setBrowserUrl(h,d)}e.browserUrlTree=d.urlAfterRedirects}const u=new G_(d.id,this.urlSerializer.serialize(d.extractedUrl),this.urlSerializer.serialize(d.urlAfterRedirects),d.targetSnapshot);this.events.next(u)}));if(l&&e.urlHandlingStrategy.shouldProcessUrl(e.rawUrlTree)){const{id:d,extractedUrl:u,source:h,restoredState:f,extras:m}=s,g=new Zf(d,this.urlSerializer.serialize(u),h,f);this.events.next(g);const A=Tk(u,this.rootComponentType).snapshot;return N(i={...s,targetSnapshot:A,urlAfterRedirects:u,extras:{...m,skipLocationChange:!1,replaceUrl:!1}})}{const d="";return this.events.next(new Dk(s.id,e.serializeUrl(i.extractedUrl),d,1)),e.rawUrlTree=s.rawUrl,s.resolve(null),Mn}}),nt(s=>{const a=new z_(s.id,this.urlSerializer.serialize(s.extractedUrl),this.urlSerializer.serialize(s.urlAfterRedirects),s.targetSnapshot);this.events.next(a)}),B(s=>i={...s,guards:SB(s.targetSnapshot,s.currentSnapshot,this.rootContexts)}),function OB(n,t){return lt(e=>{const{targetSnapshot:i,currentSnapshot:r,guards:{canActivateChecks:o,canDeactivateChecks:s}}=e;return 0===s.length&&0===o.length?N({...e,guardsResult:!0}):function FB(n,t,e,i){return it(n).pipe(lt(r=>function BB(n,t,e,i,r){const o=t&&t.routeConfig?t.routeConfig.canDeactivate:null;return o&&0!==o.length?N(o.map(a=>{const l=Oa(t)??r,c=$o(a,l);return Yi(function RB(n){return n&&Ua(n.canDeactivate)}(c)?c.canDeactivate(n,t,e,i):l.runInContext(()=>c(n,t,e,i))).pipe(Gi())})).pipe(es()):N(!0)}(r.component,r.route,e,t,i)),Gi(r=>!0!==r,!0))}(s,i,r,n).pipe(lt(a=>a&&function DB(n){return"boolean"==typeof n}(a)?function VB(n,t,e,i){return it(t).pipe(zi(r=>Qo(function NB(n,t){return null!==n&&t&&t(new tB(n)),N(!0)}(r.route.parent,i),function UB(n,t){return null!==n&&t&&t(new iB(n)),N(!0)}(r.route,i),function _B(n,t,e){const i=t[t.length-1],o=t.slice(0,t.length-1).reverse().map(s=>function CB(n){const t=n.routeConfig?n.routeConfig.canActivateChild:null;return t&&0!==t.length?{node:n,guards:t}:null}(s)).filter(s=>null!==s).map(s=>Nr(()=>N(s.guards.map(l=>{const c=Oa(s.node)??e,d=$o(l,c);return Yi(function IB(n){return n&&Ua(n.canActivateChild)}(d)?d.canActivateChild(i,n):c.runInContext(()=>d(i,n))).pipe(Gi())})).pipe(es())));return N(o).pipe(es())}(n,r.path,e),function PB(n,t,e){const i=t.routeConfig?t.routeConfig.canActivate:null;if(!i||0===i.length)return N(!0);const r=i.map(o=>Nr(()=>{const s=Oa(t)??e,a=$o(o,s);return Yi(function EB(n){return n&&Ua(n.canActivate)}(a)?a.canActivate(t,n):s.runInContext(()=>a(t,n))).pipe(Gi())}));return N(r).pipe(es())}(n,r.route,e))),Gi(r=>!0!==r,!0))}(i,o,n,t):N(a)),B(a=>({...e,guardsResult:a})))})}(this.environmentInjector,s=>this.events.next(s)),nt(s=>{if(i.guardsResult=s.guardsResult,jr(s.guardsResult))throw Vk(0,s.guardsResult);const a=new Y_(s.id,this.urlSerializer.serialize(s.extractedUrl),this.urlSerializer.serialize(s.urlAfterRedirects),s.targetSnapshot,!!s.guardsResult);this.events.next(a)}),Re(s=>!!s.guardsResult||(e.restoreHistory(s),this.cancelNavigationTransition(s,"",3,e),!1)),um(s=>{if(s.guards.canActivateChecks.length)return N(s).pipe(nt(a=>{const l=new X_(a.id,this.urlSerializer.serialize(a.extractedUrl),this.urlSerializer.serialize(a.urlAfterRedirects),a.targetSnapshot);this.events.next(l)}),Mt(a=>{let l=!1;return N(a).pipe(function sj(n,t){return lt(e=>{const{targetSnapshot:i,guards:{canActivateChecks:r}}=e;if(!r.length)return N(e);let o=0;return it(r).pipe(zi(s=>function aj(n,t,e,i){const r=n.routeConfig,o=n._resolve;return void 0!==r?.title&&!$k(r)&&(o[Ca]=r.title),function lj(n,t,e,i){const r=function cj(n){return[...Object.keys(n),...Object.getOwnPropertySymbols(n)]}(n);if(0===r.length)return N({});const o={};return it(r).pipe(lt(s=>function dj(n,t,e,i){const r=Oa(t)??i,o=$o(n,r);return Yi(o.resolve?o.resolve(t,e):r.runInContext(()=>o(t,e)))}(n[s],t,e,i).pipe(Gi(),nt(a=>{o[s]=a}))),Jf(1),hd(o),Ii(s=>lm(s)?Mn:Pr(s)))}(o,n,t,i).pipe(B(s=>(n._resolvedData=s,n.data=Mk(n,e).resolve,r&&$k(r)&&(n.data[Ca]=r.title),null)))}(s.route,i,n,t)),nt(()=>o++),Jf(1),lt(s=>o===r.length?N(e):Mn))})}(e.paramsInheritanceStrategy,this.environmentInjector),nt({next:()=>l=!0,complete:()=>{l||(e.restoreHistory(a),this.cancelNavigationTransition(a,"",2,e))}}))}),nt(a=>{const l=new Z_(a.id,this.urlSerializer.serialize(a.extractedUrl),this.urlSerializer.serialize(a.urlAfterRedirects),a.targetSnapshot);this.events.next(l)}))}),um(s=>{const a=l=>{const c=[];l.routeConfig?.loadComponent&&!l.routeConfig._loadedComponent&&c.push(this.configLoader.loadComponent(l.routeConfig).pipe(nt(d=>{l.component=d}),B(()=>{})));for(const d of l.children)c.push(...a(d));return c};return Kf(a(s.targetSnapshot.root)).pipe(ud(),Ue(1))}),um(()=>this.afterPreactivation()),B(s=>{const a=function dB(n,t,e){const i=Ta(n,t._root,e?e._root:void 0);return new Rk(i,t)}(e.routeReuseStrategy,s.targetSnapshot,s.currentRouterState);return i={...s,targetRouterState:a}}),nt(s=>{e.currentUrlTree=s.urlAfterRedirects,e.rawUrlTree=e.urlHandlingStrategy.merge(s.urlAfterRedirects,s.rawUrl),e.routerState=s.targetRouterState,"deferred"===e.urlUpdateStrategy&&(s.extras.skipLocationChange||e.setBrowserUrl(e.rawUrlTree,s),e.browserUrlTree=s.urlAfterRedirects)}),((n,t,e)=>B(i=>(new AB(t,i.targetRouterState,i.currentRouterState,e).activate(n),i)))(this.rootContexts,e.routeReuseStrategy,s=>this.events.next(s)),nt({next:s=>{r=!0,this.lastSuccessfulNavigation=this.currentNavigation,e.navigated=!0,this.events.next(new qr(s.id,this.urlSerializer.serialize(s.extractedUrl),this.urlSerializer.serialize(e.currentUrlTree))),e.titleStrategy?.updateTitle(s.targetRouterState.snapshot),s.resolve(!0)},complete:()=>{r=!0}}),pd(()=>{r||o||this.cancelNavigationTransition(i,"",1,e),this.currentNavigation?.id===i.id&&(this.currentNavigation=null)}),Ii(s=>{if(o=!0,Pk(s)){Nk(s)||(e.navigated=!0,e.restoreHistory(i,!0));const a=new Sd(i.id,this.urlSerializer.serialize(i.extractedUrl),s.message,s.cancellationCode);if(this.events.next(a),Nk(s)){const l=e.urlHandlingStrategy.merge(s.url,e.rawUrlTree),c={skipLocationChange:i.extras.skipLocationChange,replaceUrl:"eager"===e.urlUpdateStrategy||nx(i.source)};e.scheduleNavigation(l,Ra,null,c,{resolve:i.resolve,reject:i.reject,promise:i.promise})}else i.resolve(!1)}else{e.restoreHistory(i,!0);const a=new wk(i.id,this.urlSerializer.serialize(i.extractedUrl),s,i.targetSnapshot??void 0);this.events.next(a);try{i.resolve(e.errorHandler(s))}catch(l){i.reject(l)}}return Mn}))}))}cancelNavigationTransition(e,i,r,o){const s=new Sd(e.id,this.urlSerializer.serialize(e.extractedUrl),i,r);this.events.next(s),e.resolve(!1)}}return n.\u0275fac=function(e){return new(e||n)},n.\u0275prov=R({token:n,factory:n.\u0275fac,providedIn:"root"}),n})();function nx(n){return n!==Ra}let ix=(()=>{class n{buildTitle(e){let i,r=e.root;for(;void 0!==r;)i=this.getResolvedTitleForRoute(r)??i,r=r.children.find(o=>o.outlet===fe);return i}getResolvedTitleForRoute(e){return e.data[Ca]}}return n.\u0275fac=function(e){return new(e||n)},n.\u0275prov=R({token:n,factory:function(){return ie(pj)},providedIn:"root"}),n})(),pj=(()=>{class n extends ix{constructor(e){super(),this.title=e}updateTitle(e){const i=this.buildTitle(e);void 0!==i&&this.title.setTitle(i)}}return n.\u0275fac=function(e){return new(e||n)(v(XC))},n.\u0275prov=R({token:n,factory:n.\u0275fac,providedIn:"root"}),n})(),fj=(()=>{class n{}return n.\u0275fac=function(e){return new(e||n)},n.\u0275prov=R({token:n,factory:function(){return ie(gj)},providedIn:"root"}),n})();class mj{shouldDetach(t){return!1}store(t,e){}shouldAttach(t){return!1}retrieve(t){return null}shouldReuseRoute(t,e){return t.routeConfig===e.routeConfig}}let gj=(()=>{class n extends mj{}return n.\u0275fac=function(){let t;return function(i){return(t||(t=rt(n)))(i||n)}}(),n.\u0275prov=R({token:n,factory:n.\u0275fac,providedIn:"root"}),n})();const Fd=new D("",{providedIn:"root",factory:()=>({})});let yj=(()=>{class n{}return n.\u0275fac=function(e){return new(e||n)},n.\u0275prov=R({token:n,factory:function(){return ie(vj)},providedIn:"root"}),n})(),vj=(()=>{class n{shouldProcessUrl(e){return!0}extract(e){return e}merge(e,i){return e}}return n.\u0275fac=function(e){return new(e||n)},n.\u0275prov=R({token:n,factory:n.\u0275fac,providedIn:"root"}),n})();function Aj(n){throw n}function Sj(n,t,e){return t.parse("/")}const Cj={paths:"exact",fragment:"ignored",matrixParams:"ignored",queryParams:"exact"},kj={paths:"subset",fragment:"ignored",matrixParams:"ignored",queryParams:"subset"};let Xt=(()=>{class n{get navigationId(){return this.navigationTransitions.navigationId}get browserPageId(){return this.location.getState()?.\u0275routerPageId}get events(){return this.navigationTransitions.events}constructor(){this.disposed=!1,this.currentPageId=0,this.console=ie(XV),this.isNgZoneEnabled=!1,this.options=ie(Fd,{optional:!0})||{},this.errorHandler=this.options.errorHandler||Aj,this.malformedUriErrorHandler=this.options.malformedUriErrorHandler||Sj,this.navigated=!1,this.lastSuccessfulId=-1,this.urlHandlingStrategy=ie(yj),this.routeReuseStrategy=ie(fj),this.urlCreationStrategy=ie(aB),this.titleStrategy=ie(ix),this.onSameUrlNavigation=this.options.onSameUrlNavigation||"ignore",this.paramsInheritanceStrategy=this.options.paramsInheritanceStrategy||"emptyOnly",this.urlUpdateStrategy=this.options.urlUpdateStrategy||"deferred",this.canceledNavigationResolution=this.options.canceledNavigationResolution||"replace",this.config=ck(ie(ts,{optional:!0})??[]),this.navigationTransitions=ie(Od),this.urlSerializer=ie(xa),this.location=ie(ga),this.isNgZoneEnabled=ie(j)instanceof j&&j.isInAngularZone(),this.resetConfig(this.config),this.currentUrlTree=new _r,this.rawUrlTree=this.currentUrlTree,this.browserUrlTree=this.currentUrlTree,this.routerState=Tk(this.currentUrlTree,null),this.navigationTransitions.setupNavigations(this).subscribe(e=>{this.lastSuccessfulId=e.id,this.currentPageId=e.targetPageId},e=>{this.console.warn(`Unhandled Navigation Error: ${e}`)})}resetRootComponentType(e){this.routerState.root.component=e,this.navigationTransitions.rootComponentType=e}initialNavigation(){if(this.setUpLocationChangeListener(),!this.navigationTransitions.hasRequestedNavigation){const e=this.location.getState();this.navigateToSyncWithBrowser(this.location.path(!0),Ra,e)}}setUpLocationChangeListener(){this.locationSubscription||(this.locationSubscription=this.location.subscribe(e=>{const i="popstate"===e.type?"popstate":"hashchange";"popstate"===i&&setTimeout(()=>{this.navigateToSyncWithBrowser(e.url,i,e.state)},0)}))}navigateToSyncWithBrowser(e,i,r){const o={replaceUrl:!0},s=r?.navigationId?r:null;if(r){const l={...r};delete l.navigationId,delete l.\u0275routerPageId,0!==Object.keys(l).length&&(o.state=l)}const a=this.parseUrl(e);this.scheduleNavigation(a,i,s,o)}get url(){return this.serializeUrl(this.currentUrlTree)}getCurrentNavigation(){return this.navigationTransitions.currentNavigation}resetConfig(e){this.config=e.map(am),this.navigated=!1,this.lastSuccessfulId=-1}ngOnDestroy(){this.dispose()}dispose(){this.navigationTransitions.complete(),this.locationSubscription&&(this.locationSubscription.unsubscribe(),this.locationSubscription=void 0),this.disposed=!0}createUrlTree(e,i={}){const{relativeTo:r,queryParams:o,fragment:s,queryParamsHandling:a,preserveFragment:l}=i,c=l?this.currentUrlTree.fragment:s;let d=null;switch(a){case"merge":d={...this.currentUrlTree.queryParams,...o};break;case"preserve":d=this.currentUrlTree.queryParams;break;default:d=o||null}return null!==d&&(d=this.removeEmptyProps(d)),this.urlCreationStrategy.createUrlTree(r,this.routerState,this.currentUrlTree,e,d,c??null)}navigateByUrl(e,i={skipLocationChange:!1}){const r=jr(e)?e:this.parseUrl(e),o=this.urlHandlingStrategy.merge(r,this.rawUrlTree);return this.scheduleNavigation(o,Ra,null,i)}navigate(e,i={skipLocationChange:!1}){return function xj(n){for(let t=0;t<n.length;t++){if(null==n[t])throw new C(4008,!1)}}(e),this.navigateByUrl(this.createUrlTree(e,i),i)}serializeUrl(e){return this.urlSerializer.serialize(e)}parseUrl(e){let i;try{i=this.urlSerializer.parse(e)}catch(r){i=this.malformedUriErrorHandler(r,this.urlSerializer,e)}return i}isActive(e,i){let r;if(r=!0===i?{...Cj}:!1===i?{...kj}:i,jr(e))return hk(this.currentUrlTree,e,r);const o=this.parseUrl(e);return hk(this.currentUrlTree,o,r)}removeEmptyProps(e){return Object.keys(e).reduce((i,r)=>{const o=e[r];return null!=o&&(i[r]=o),i},{})}scheduleNavigation(e,i,r,o,s){if(this.disposed)return Promise.resolve(!1);let a,l,c,d;return s?(a=s.resolve,l=s.reject,c=s.promise):c=new Promise((u,h)=>{a=u,l=h}),d="computed"===this.canceledNavigationResolution?r&&r.\u0275routerPageId?r.\u0275routerPageId:o.replaceUrl||o.skipLocationChange?this.browserPageId??0:(this.browserPageId??0)+1:0,this.navigationTransitions.handleNavigationRequest({targetPageId:d,source:i,restoredState:r,currentUrlTree:this.currentUrlTree,currentRawUrl:this.currentUrlTree,rawUrl:e,extras:o,resolve:a,reject:l,promise:c,currentSnapshot:this.routerState.snapshot,currentRouterState:this.routerState}),c.catch(u=>Promise.reject(u))}setBrowserUrl(e,i){const r=this.urlSerializer.serialize(e),o={...i.extras.state,...this.generateNgRouterState(i.id,i.targetPageId)};this.location.isCurrentPathEqualTo(r)||i.extras.replaceUrl?this.location.replaceState(r,"",o):this.location.go(r,"",o)}restoreHistory(e,i=!1){if("computed"===this.canceledNavigationResolution){const r=this.currentPageId-e.targetPageId;"popstate"!==e.source&&"eager"!==this.urlUpdateStrategy&&this.currentUrlTree!==this.getCurrentNavigation()?.finalUrl||0===r?this.currentUrlTree===this.getCurrentNavigation()?.finalUrl&&0===r&&(this.resetState(e),this.browserUrlTree=e.currentUrlTree,this.resetUrlToCurrentUrlTree()):this.location.historyGo(r)}else"replace"===this.canceledNavigationResolution&&(i&&this.resetState(e),this.resetUrlToCurrentUrlTree())}resetState(e){this.routerState=e.currentRouterState,this.currentUrlTree=e.currentUrlTree,this.rawUrlTree=this.urlHandlingStrategy.merge(this.currentUrlTree,e.rawUrl)}resetUrlToCurrentUrlTree(){this.location.replaceState(this.urlSerializer.serialize(this.rawUrlTree),"",this.generateNgRouterState(this.lastSuccessfulId,this.currentPageId))}generateNgRouterState(e,i){return"computed"===this.canceledNavigationResolution?{navigationId:e,\u0275routerPageId:i}:{navigationId:e}}}return n.\u0275fac=function(e){return new(e||n)},n.\u0275prov=R({token:n,factory:n.\u0275fac,providedIn:"root"}),n})(),ns=(()=>{class n{constructor(e,i,r,o,s,a){this.router=e,this.route=i,this.tabIndexAttribute=r,this.renderer=o,this.el=s,this.locationStrategy=a,this._preserveFragment=!1,this._skipLocationChange=!1,this._replaceUrl=!1,this.href=null,this.commands=null,this.onChanges=new P;const l=s.nativeElement.tagName;this.isAnchorElement="A"===l||"AREA"===l,this.isAnchorElement?this.subscription=e.events.subscribe(c=>{c instanceof qr&&this.updateHref()}):this.setTabIndexIfNotOnNativeEl("0")}set preserveFragment(e){this._preserveFragment=Jo(e)}get preserveFragment(){return this._preserveFragment}set skipLocationChange(e){this._skipLocationChange=Jo(e)}get skipLocationChange(){return this._skipLocationChange}set replaceUrl(e){this._replaceUrl=Jo(e)}get replaceUrl(){return this._replaceUrl}setTabIndexIfNotOnNativeEl(e){null!=this.tabIndexAttribute||this.isAnchorElement||this.applyAttributeValue("tabindex",e)}ngOnChanges(e){this.isAnchorElement&&this.updateHref(),this.onChanges.next(this)}set routerLink(e){null!=e?(this.commands=Array.isArray(e)?e:[e],this.setTabIndexIfNotOnNativeEl("0")):(this.commands=null,this.setTabIndexIfNotOnNativeEl(null))}onClick(e,i,r,o,s){return!!(null===this.urlTree||this.isAnchorElement&&(0!==e||i||r||o||s||"string"==typeof this.target&&"_self"!=this.target))||(this.router.navigateByUrl(this.urlTree,{skipLocationChange:this.skipLocationChange,replaceUrl:this.replaceUrl,state:this.state}),!this.isAnchorElement)}ngOnDestroy(){this.subscription?.unsubscribe()}updateHref(){this.href=null!==this.urlTree&&this.locationStrategy?this.locationStrategy?.prepareExternalUrl(this.router.serializeUrl(this.urlTree)):null;const e=null===this.href?null:function Av(n,t,e){return function iM(n,t){return"src"===t&&("embed"===n||"frame"===n||"iframe"===n||"media"===n||"script"===n)||"href"===t&&("base"===n||"link"===n)?vv:Gs}(t,e)(n)}(this.href,this.el.nativeElement.tagName.toLowerCase(),"href");this.applyAttributeValue("href",e)}applyAttributeValue(e,i){const r=this.renderer,o=this.el.nativeElement;null!==i?r.setAttribute(o,e,i):r.removeAttribute(o,e)}get urlTree(){return null===this.commands?null:this.router.createUrlTree(this.commands,{relativeTo:void 0!==this.relativeTo?this.relativeTo:this.route,queryParams:this.queryParams,fragment:this.fragment,queryParamsHandling:this.queryParamsHandling,preserveFragment:this.preserveFragment})}}return n.\u0275fac=function(e){return new(e||n)(p(Xt),p(Zo),Hi("tabindex"),p(vi),p(z),p(Fr))},n.\u0275dir=M({type:n,selectors:[["","routerLink",""]],hostVars:1,hostBindings:function(e,i){1&e&&H("click",function(o){return i.onClick(o.button,o.ctrlKey,o.shiftKey,o.altKey,o.metaKey)}),2&e&&pe("target",i.target)},inputs:{target:"target",queryParams:"queryParams",fragment:"fragment",queryParamsHandling:"queryParamsHandling",state:"state",relativeTo:"relativeTo",preserveFragment:"preserveFragment",skipLocationChange:"skipLocationChange",replaceUrl:"replaceUrl",routerLink:"routerLink"},standalone:!0,features:[ze]}),n})();class ox{}let Ej=(()=>{class n{constructor(e,i,r,o,s){this.router=e,this.injector=r,this.preloadingStrategy=o,this.loader=s}setUpPreloading(){this.subscription=this.router.events.pipe(Re(e=>e instanceof qr),zi(()=>this.preload())).subscribe(()=>{})}preload(){return this.processRoutes(this.injector,this.router.config)}ngOnDestroy(){this.subscription&&this.subscription.unsubscribe()}processRoutes(e,i){const r=[];for(const o of i){o.providers&&!o._injector&&(o._injector=_c(o.providers,e,`Route: ${o.path}`));const s=o._injector??e,a=o._loadedInjector??s;o.loadChildren&&!o._loadedRoutes&&void 0===o.canLoad||o.loadComponent&&!o._loadedComponent?r.push(this.preloadConfig(s,o)):(o.children||o._loadedRoutes)&&r.push(this.processRoutes(a,o.children??o._loadedRoutes))}return it(r).pipe(ro())}preloadConfig(e,i){return this.preloadingStrategy.preload(i,()=>{let r;r=i.loadChildren&&void 0===i.canLoad?this.loader.loadChildren(e,i):N(null);const o=r.pipe(lt(s=>null===s?N(void 0):(i._loadedRoutes=s.routes,i._loadedInjector=s.injector,this.processRoutes(s.injector??e,s.routes))));return i.loadComponent&&!i._loadedComponent?it([o,this.loader.loadComponent(i)]).pipe(ro()):o})}}return n.\u0275fac=function(e){return new(e||n)(v(Xt),v(V0),v(yi),v(ox),v(hm))},n.\u0275prov=R({token:n,factory:n.\u0275fac,providedIn:"root"}),n})();const pm=new D("");let sx=(()=>{class n{constructor(e,i,r,o,s={}){this.urlSerializer=e,this.transitions=i,this.viewportScroller=r,this.zone=o,this.options=s,this.lastId=0,this.lastSource="imperative",this.restoredId=0,this.store={},s.scrollPositionRestoration=s.scrollPositionRestoration||"disabled",s.anchorScrolling=s.anchorScrolling||"disabled"}init(){"disabled"!==this.options.scrollPositionRestoration&&this.viewportScroller.setHistoryScrollRestoration("manual"),this.routerEventsSubscription=this.createScrollEvents(),this.scrollEventsSubscription=this.consumeScrollEvents()}createScrollEvents(){return this.transitions.events.subscribe(e=>{e instanceof Zf?(this.store[this.lastId]=this.viewportScroller.getScrollPosition(),this.lastSource=e.navigationTrigger,this.restoredId=e.restoredState?e.restoredState.navigationId:0):e instanceof qr&&(this.lastId=e.id,this.scheduleScrollEvent(e,this.urlSerializer.parse(e.urlAfterRedirects).fragment))})}consumeScrollEvents(){return this.transitions.events.subscribe(e=>{e instanceof Ek&&(e.position?"top"===this.options.scrollPositionRestoration?this.viewportScroller.scrollToPosition([0,0]):"enabled"===this.options.scrollPositionRestoration&&this.viewportScroller.scrollToPosition(e.position):e.anchor&&"enabled"===this.options.anchorScrolling?this.viewportScroller.scrollToAnchor(e.anchor):"disabled"!==this.options.scrollPositionRestoration&&this.viewportScroller.scrollToPosition([0,0]))})}scheduleScrollEvent(e,i){this.zone.runOutsideAngular(()=>{setTimeout(()=>{this.zone.run(()=>{this.transitions.events.next(new Ek(e,"popstate"===this.lastSource?this.store[this.restoredId]:null,i))})},0)})}ngOnDestroy(){this.routerEventsSubscription?.unsubscribe(),this.scrollEventsSubscription?.unsubscribe()}}return n.\u0275fac=function(e){Li()},n.\u0275prov=R({token:n,factory:n.\u0275fac}),n})();function Kr(n,t){return{\u0275kind:n,\u0275providers:t}}function lx(){const n=ie(ht);return t=>{const e=n.get(Mr);if(t!==e.components[0])return;const i=n.get(Xt),r=n.get(cx);1===n.get(mm)&&i.initialNavigation(),n.get(dx,null,G.Optional)?.setUpPreloading(),n.get(pm,null,G.Optional)?.init(),i.resetRootComponentType(e.componentTypes[0]),r.closed||(r.next(),r.unsubscribe())}}const cx=new D("",{factory:()=>new P}),mm=new D("",{providedIn:"root",factory:()=>1});const dx=new D("");function Oj(n){return Kr(0,[{provide:dx,useExisting:Ej},{provide:ox,useExisting:n}])}const ux=new D("ROUTER_FORROOT_GUARD"),Fj=[ga,{provide:xa,useClass:Wf},Xt,Ma,{provide:Zo,useFactory:function ax(n){return n.routerState.root},deps:[Xt]},hm,[]];function Vj(){return new q0("Router",Xt)}let hx=(()=>{class n{constructor(e){}static forRoot(e,i){return{ngModule:n,providers:[Fj,[],{provide:ts,multi:!0,useValue:e},{provide:ux,useFactory:_j,deps:[[Xt,new yn,new gi]]},{provide:Fd,useValue:i||{}},i?.useHash?{provide:Fr,useClass:BU}:{provide:Fr,useClass:dC},{provide:pm,useFactory:()=>{const n=ie(iP),t=ie(j),e=ie(Fd),i=ie(Od),r=ie(xa);return e.scrollOffset&&n.setOffset(e.scrollOffset),new sx(r,i,n,t,e)}},i?.preloadingStrategy?Oj(i.preloadingStrategy).\u0275providers:[],{provide:q0,multi:!0,useFactory:Vj},i?.initialNavigation?Bj(i):[],[{provide:px,useFactory:lx},{provide:F0,multi:!0,useExisting:px}]]}}static forChild(e){return{ngModule:n,providers:[{provide:ts,multi:!0,useValue:e}]}}}return n.\u0275fac=function(e){return new(e||n)(v(ux,8))},n.\u0275mod=he({type:n}),n.\u0275inj=ce({imports:[om]}),n})();function _j(n){return"guarded"}function Bj(n){return["disabled"===n.initialNavigation?Kr(3,[{provide:pa,multi:!0,useFactory:()=>{const t=ie(Xt);return()=>{t.setUpLocationChangeListener()}}},{provide:mm,useValue:2}]).\u0275providers:[],"enabledBlocking"===n.initialNavigation?Kr(2,[{provide:mm,useValue:0},{provide:pa,multi:!0,deps:[ht],useFactory:t=>{const e=t.get(PU,Promise.resolve());return()=>e.then(()=>new Promise(r=>{const o=t.get(Xt),s=t.get(cx);(function i(r){t.get(Xt).events.pipe(Re(s=>s instanceof qr||s instanceof Sd||s instanceof wk),B(s=>s instanceof qr||s instanceof Sd&&(0===s.code||1===s.code)&&null),Re(s=>null!==s),Ue(1)).subscribe(()=>{r()})})(()=>{r(!0)}),t.get(Od).afterPreactivation=()=>(r(!0),s.closed?N(void 0):s),o.initialNavigation()}))}}]).\u0275providers:[]]}const px=new D("");class ri{constructor(){this.setPathVar=new O}setPath(t){this.setPathVar.emit(t)}}let gm;ri.\u0275fac=function(t){return new(t||ri)},ri.\u0275prov=R({token:ri,factory:ri.\u0275fac,providedIn:"root"});try{gm=typeof Intl<"u"&&Intl.v8BreakIterator}catch{gm=!1}let rs,Ze=(()=>{class n{constructor(e){this._platformId=e,this.isBrowser=this._platformId?Tf(this._platformId):"object"==typeof document&&!!document,this.EDGE=this.isBrowser&&/(edge)/i.test(navigator.userAgent),this.TRIDENT=this.isBrowser&&/(msie|trident)/i.test(navigator.userAgent),this.BLINK=this.isBrowser&&!(!window.chrome&&!gm)&&typeof CSS<"u"&&!this.EDGE&&!this.TRIDENT,this.WEBKIT=this.isBrowser&&/AppleWebKit/i.test(navigator.userAgent)&&!this.BLINK&&!this.EDGE&&!this.TRIDENT,this.IOS=this.isBrowser&&/iPad|iPhone|iPod/.test(navigator.userAgent)&&!("MSStream"in window),this.FIREFOX=this.isBrowser&&/(firefox|minefield)/i.test(navigator.userAgent),this.ANDROID=this.isBrowser&&/android/i.test(navigator.userAgent)&&!this.TRIDENT,this.SAFARI=this.isBrowser&&/safari/i.test(navigator.userAgent)&&this.WEBKIT}}return n.\u0275fac=function(e){return new(e||n)(v(fa))},n.\u0275prov=R({token:n,factory:n.\u0275fac,providedIn:"root"}),n})();const fx=["color","button","checkbox","date","datetime-local","email","file","hidden","image","month","number","password","radio","range","reset","search","submit","tel","text","time","url","week"];function mx(){if(rs)return rs;if("object"!=typeof document||!document)return rs=new Set(fx),rs;let n=document.createElement("input");return rs=new Set(fx.filter(t=>(n.setAttribute("type",t),n.type===t))),rs}let _a,Vd,Hr,bm;function os(n){return function qj(){if(null==_a&&typeof window<"u")try{window.addEventListener("test",null,Object.defineProperty({},"passive",{get:()=>_a=!0}))}finally{_a=_a||!1}return _a}()?n:!!n.capture}function gx(){if(null==Hr){if("object"!=typeof document||!document||"function"!=typeof Element||!Element)return Hr=!1,Hr;if("scrollBehavior"in document.documentElement.style)Hr=!0;else{const n=Element.prototype.scrollTo;Hr=!!n&&!/\{\s*\[native code\]\s*\}/.test(n.toString())}}return Hr}function Ba(){if("object"!=typeof document||!document)return 0;if(null==Vd){const n=document.createElement("div"),t=n.style;n.dir="rtl",t.width="1px",t.overflow="auto",t.visibility="hidden",t.pointerEvents="none",t.position="absolute";const e=document.createElement("div"),i=e.style;i.width="2px",i.height="1px",n.appendChild(e),document.body.appendChild(n),Vd=0,0===n.scrollLeft&&(n.scrollLeft=1,Vd=0===n.scrollLeft?1:2),n.remove()}return Vd}function ja(){let n=typeof document<"u"&&document?document.activeElement:null;for(;n&&n.shadowRoot;){const t=n.shadowRoot.activeElement;if(t===n)break;n=t}return n}function Xi(n){return n.composedPath?n.composedPath()[0]:n.target}function ym(){return typeof __karma__<"u"&&!!__karma__||typeof jasmine<"u"&&!!jasmine||typeof jest<"u"&&!!jest||typeof Mocha<"u"&&!!Mocha}function Ht(n,...t){return t.length?t.some(e=>n[e]):n.altKey||n.shiftKey||n.ctrlKey||n.metaKey}class $j extends ke{constructor(t,e){super()}schedule(t,e=0){return this}}const Pd={setInterval(n,t,...e){const{delegate:i}=Pd;return i?.setInterval?i.setInterval(n,t,...e):setInterval(n,t,...e)},clearInterval(n){const{delegate:t}=Pd;return(t?.clearInterval||clearInterval)(n)},delegate:void 0};class vm extends $j{constructor(t,e){super(t,e),this.scheduler=t,this.work=e,this.pending=!1}schedule(t,e=0){var i;if(this.closed)return this;this.state=t;const r=this.id,o=this.scheduler;return null!=r&&(this.id=this.recycleAsyncId(o,r,e)),this.pending=!0,this.delay=e,this.id=null!==(i=this.id)&&void 0!==i?i:this.requestAsyncId(o,this.id,e),this}requestAsyncId(t,e,i=0){return Pd.setInterval(t.flush.bind(t,this),i)}recycleAsyncId(t,e,i=0){if(null!=i&&this.delay===i&&!1===this.pending)return e;null!=e&&Pd.clearInterval(e)}execute(t,e){if(this.closed)return new Error("executing a cancelled action");this.pending=!1;const i=this._execute(t,e);if(i)return i;!1===this.pending&&null!=this.id&&(this.id=this.recycleAsyncId(this.scheduler,this.id,null))}_execute(t,e){let r,i=!1;try{this.work(t)}catch(o){i=!0,r=o||new Error("Scheduled action threw falsy error")}if(i)return this.unsubscribe(),r}unsubscribe(){if(!this.closed){const{id:t,scheduler:e}=this,{actions:i}=e;this.work=this.state=this.scheduler=null,this.pending=!1,io(i,this),null!=t&&(this.id=this.recycleAsyncId(e,t,null)),this.delay=null,super.unsubscribe()}}}const yx={now:()=>(yx.delegate||Date).now(),delegate:void 0};class Ha{constructor(t,e=Ha.now){this.schedulerActionCtor=t,this.now=e}schedule(t,e=0,i){return new this.schedulerActionCtor(this,t).schedule(i,e)}}Ha.now=yx.now;class Am extends Ha{constructor(t,e=Ha.now){super(t,e),this.actions=[],this._active=!1}flush(t){const{actions:e}=this;if(this._active)return void e.push(t);let i;this._active=!0;do{if(i=t.execute(t.state,t.delay))break}while(t=e.shift());if(this._active=!1,i){for(;t=e.shift();)t.unsubscribe();throw i}}}const _d=new Am(vm),eq=_d;function Bd(n,t=_d){return Le((e,i)=>{let r=null,o=null,s=null;const a=()=>{if(r){r.unsubscribe(),r=null;const c=o;o=null,i.next(c)}};function l(){const c=s+n,d=t.now();if(d<c)return r=this.schedule(void 0,c-d),void i.add(r);a()}e.subscribe(Ke(i,c=>{o=c,s=t.now(),r||(r=t.schedule(l,n),i.add(r))},()=>{a(),i.complete()},void 0,()=>{o=r=null}))})}function vx(n){return Re((t,e)=>n<=e)}function Sm(n,t=Bi){return n=n??tq,Le((e,i)=>{let r,o=!0;e.subscribe(Ke(i,s=>{const a=t(s);(o||!n(r,a))&&(o=!1,r=a,i.next(s))}))})}function tq(n,t){return n===t}function Te(n){return Le((t,e)=>{Vt(n).subscribe(Ke(e,()=>e.complete(),xs)),!e.closed&&t.subscribe(e)})}function ue(n){return null!=n&&"false"!=`${n}`}function oi(n,t=0){return function nq(n){return!isNaN(parseFloat(n))&&!isNaN(Number(n))}(n)?Number(n):t}function jd(n){return Array.isArray(n)?n:[n]}function at(n){return null==n?"":"string"==typeof n?n:`${n}px`}function Oi(n){return n instanceof z?n.nativeElement:n}let Ax=(()=>{class n{create(e){return typeof MutationObserver>"u"?null:new MutationObserver(e)}}return n.\u0275fac=function(e){return new(e||n)},n.\u0275prov=R({token:n,factory:n.\u0275fac,providedIn:"root"}),n})(),rq=(()=>{class n{constructor(e){this._mutationObserverFactory=e,this._observedElements=new Map}ngOnDestroy(){this._observedElements.forEach((e,i)=>this._cleanupObserver(i))}observe(e){const i=Oi(e);return new Me(r=>{const s=this._observeElement(i).subscribe(r);return()=>{s.unsubscribe(),this._unobserveElement(i)}})}_observeElement(e){if(this._observedElements.has(e))this._observedElements.get(e).count++;else{const i=new P,r=this._mutationObserverFactory.create(o=>i.next(o));r&&r.observe(e,{characterData:!0,childList:!0,subtree:!0}),this._observedElements.set(e,{observer:r,stream:i,count:1})}return this._observedElements.get(e).stream}_unobserveElement(e){this._observedElements.has(e)&&(this._observedElements.get(e).count--,this._observedElements.get(e).count||this._cleanupObserver(e))}_cleanupObserver(e){if(this._observedElements.has(e)){const{observer:i,stream:r}=this._observedElements.get(e);i&&i.disconnect(),r.complete(),this._observedElements.delete(e)}}}return n.\u0275fac=function(e){return new(e||n)(v(Ax))},n.\u0275prov=R({token:n,factory:n.\u0275fac,providedIn:"root"}),n})(),oq=(()=>{class n{get disabled(){return this._disabled}set disabled(e){this._disabled=ue(e),this._disabled?this._unsubscribe():this._subscribe()}get debounce(){return this._debounce}set debounce(e){this._debounce=oi(e),this._subscribe()}constructor(e,i,r){this._contentObserver=e,this._elementRef=i,this._ngZone=r,this.event=new O,this._disabled=!1,this._currentSubscription=null}ngAfterContentInit(){!this._currentSubscription&&!this.disabled&&this._subscribe()}ngOnDestroy(){this._unsubscribe()}_subscribe(){this._unsubscribe();const e=this._contentObserver.observe(this._elementRef);this._ngZone.runOutsideAngular(()=>{this._currentSubscription=(this.debounce?e.pipe(Bd(this.debounce)):e).subscribe(this.event)})}_unsubscribe(){this._currentSubscription?.unsubscribe()}}return n.\u0275fac=function(e){return new(e||n)(p(rq),p(z),p(j))},n.\u0275dir=M({type:n,selectors:[["","cdkObserveContent",""]],inputs:{disabled:["cdkObserveContentDisabled","disabled"],debounce:"debounce"},outputs:{event:"cdkObserveContent"},exportAs:["cdkObserveContent"]}),n})(),Sx=(()=>{class n{}return n.\u0275fac=function(e){return new(e||n)},n.\u0275mod=he({type:n}),n.\u0275inj=ce({providers:[Ax]}),n})();const Cx=new Set;let ls,sq=(()=>{class n{constructor(e){this._platform=e,this._matchMedia=this._platform.isBrowser&&window.matchMedia?window.matchMedia.bind(window):lq}matchMedia(e){return(this._platform.WEBKIT||this._platform.BLINK)&&function aq(n){if(!Cx.has(n))try{ls||(ls=document.createElement("style"),ls.setAttribute("type","text/css"),document.head.appendChild(ls)),ls.sheet&&(ls.sheet.insertRule(`@media ${n} {body{ }}`,0),Cx.add(n))}catch(t){console.error(t)}}(e),this._matchMedia(e)}}return n.\u0275fac=function(e){return new(e||n)(v(Ze))},n.\u0275prov=R({token:n,factory:n.\u0275fac,providedIn:"root"}),n})();function lq(n){return{matches:"all"===n||""===n,media:n,addListener:()=>{},removeListener:()=>{}}}let cq=(()=>{class n{constructor(e,i){this._mediaMatcher=e,this._zone=i,this._queries=new Map,this._destroySubject=new P}ngOnDestroy(){this._destroySubject.next(),this._destroySubject.complete()}isMatched(e){return kx(jd(e)).some(r=>this._registerQuery(r).mql.matches)}observe(e){let o=Kf(kx(jd(e)).map(s=>this._registerQuery(s).observable));return o=Qo(o.pipe(Ue(1)),o.pipe(vx(1),Bd(0))),o.pipe(B(s=>{const a={matches:!1,breakpoints:{}};return s.forEach(({matches:l,query:c})=>{a.matches=a.matches||l,a.breakpoints[c]=l}),a}))}_registerQuery(e){if(this._queries.has(e))return this._queries.get(e);const i=this._mediaMatcher.matchMedia(e),o={observable:new Me(s=>{const a=l=>this._zone.run(()=>s.next(l));return i.addListener(a),()=>{i.removeListener(a)}}).pipe(xn(i),B(({matches:s})=>({query:e,matches:s})),Te(this._destroySubject)),mql:i};return this._queries.set(e,o),o}}return n.\u0275fac=function(e){return new(e||n)(v(sq),v(j))},n.\u0275prov=R({token:n,factory:n.\u0275fac,providedIn:"root"}),n})();function kx(n){return n.map(t=>t.split(",")).reduce((t,e)=>t.concat(e)).map(t=>t.trim())}function qd(n,t){return(n.getAttribute(t)||"").match(/\S+/g)||[]}const Dx="cdk-describedby-message",Kd="cdk-describedby-host";let Cm=0,hq=(()=>{class n{constructor(e,i){this._platform=i,this._messageRegistry=new Map,this._messagesContainer=null,this._id=""+Cm++,this._document=e,this._id=ie(Lo)+"-"+Cm++}describe(e,i,r){if(!this._canBeDescribed(e,i))return;const o=km(i,r);"string"!=typeof i?(wx(i,this._id),this._messageRegistry.set(o,{messageElement:i,referenceCount:0})):this._messageRegistry.has(o)||this._createMessageElement(i,r),this._isElementDescribedByMessage(e,o)||this._addMessageReference(e,o)}removeDescription(e,i,r){if(!i||!this._isElementNode(e))return;const o=km(i,r);if(this._isElementDescribedByMessage(e,o)&&this._removeMessageReference(e,o),"string"==typeof i){const s=this._messageRegistry.get(o);s&&0===s.referenceCount&&this._deleteMessageElement(o)}0===this._messagesContainer?.childNodes.length&&(this._messagesContainer.remove(),this._messagesContainer=null)}ngOnDestroy(){const e=this._document.querySelectorAll(`[${Kd}="${this._id}"]`);for(let i=0;i<e.length;i++)this._removeCdkDescribedByReferenceIds(e[i]),e[i].removeAttribute(Kd);this._messagesContainer?.remove(),this._messagesContainer=null,this._messageRegistry.clear()}_createMessageElement(e,i){const r=this._document.createElement("div");wx(r,this._id),r.textContent=e,i&&r.setAttribute("role",i),this._createMessagesContainer(),this._messagesContainer.appendChild(r),this._messageRegistry.set(km(e,i),{messageElement:r,referenceCount:0})}_deleteMessageElement(e){this._messageRegistry.get(e)?.messageElement?.remove(),this._messageRegistry.delete(e)}_createMessagesContainer(){if(this._messagesContainer)return;const e="cdk-describedby-message-container",i=this._document.querySelectorAll(`.${e}[platform="server"]`);for(let o=0;o<i.length;o++)i[o].remove();const r=this._document.createElement("div");r.style.visibility="hidden",r.classList.add(e),r.classList.add("cdk-visually-hidden"),this._platform&&!this._platform.isBrowser&&r.setAttribute("platform","server"),this._document.body.appendChild(r),this._messagesContainer=r}_removeCdkDescribedByReferenceIds(e){const i=qd(e,"aria-describedby").filter(r=>0!=r.indexOf(Dx));e.setAttribute("aria-describedby",i.join(" "))}_addMessageReference(e,i){const r=this._messageRegistry.get(i);(function dq(n,t,e){const i=qd(n,t);i.some(r=>r.trim()==e.trim())||(i.push(e.trim()),n.setAttribute(t,i.join(" ")))})(e,"aria-describedby",r.messageElement.id),e.setAttribute(Kd,this._id),r.referenceCount++}_removeMessageReference(e,i){const r=this._messageRegistry.get(i);r.referenceCount--,function uq(n,t,e){const r=qd(n,t).filter(o=>o!=e.trim());r.length?n.setAttribute(t,r.join(" ")):n.removeAttribute(t)}(e,"aria-describedby",r.messageElement.id),e.removeAttribute(Kd)}_isElementDescribedByMessage(e,i){const r=qd(e,"aria-describedby"),o=this._messageRegistry.get(i),s=o&&o.messageElement.id;return!!s&&-1!=r.indexOf(s)}_canBeDescribed(e,i){if(!this._isElementNode(e))return!1;if(i&&"object"==typeof i)return!0;const r=null==i?"":`${i}`.trim(),o=e.getAttribute("aria-label");return!(!r||o&&o.trim()===r)}_isElementNode(e){return e.nodeType===this._document.ELEMENT_NODE}}return n.\u0275fac=function(e){return new(e||n)(v(Y),v(Ze))},n.\u0275prov=R({token:n,factory:n.\u0275fac,providedIn:"root"}),n})();function km(n,t){return"string"==typeof n?`${t||""}/${n}`:n}function wx(n,t){n.id||(n.id=`${Dx}-${t}-${Cm++}`)}class pq{constructor(t){this._items=t,this._activeItemIndex=-1,this._activeItem=null,this._wrap=!1,this._letterKeyStream=new P,this._typeaheadSubscription=ke.EMPTY,this._vertical=!0,this._allowedModifierKeys=[],this._homeAndEnd=!1,this._pageUpAndDown={enabled:!1,delta:10},this._skipPredicateFn=e=>e.disabled,this._pressedLetters=[],this.tabOut=new P,this.change=new P,t instanceof qo&&(this._itemChangesSubscription=t.changes.subscribe(e=>{if(this._activeItem){const r=e.toArray().indexOf(this._activeItem);r>-1&&r!==this._activeItemIndex&&(this._activeItemIndex=r)}}))}skipPredicate(t){return this._skipPredicateFn=t,this}withWrap(t=!0){return this._wrap=t,this}withVerticalOrientation(t=!0){return this._vertical=t,this}withHorizontalOrientation(t){return this._horizontal=t,this}withAllowedModifierKeys(t){return this._allowedModifierKeys=t,this}withTypeAhead(t=200){return this._typeaheadSubscription.unsubscribe(),this._typeaheadSubscription=this._letterKeyStream.pipe(nt(e=>this._pressedLetters.push(e)),Bd(t),Re(()=>this._pressedLetters.length>0),B(()=>this._pressedLetters.join(""))).subscribe(e=>{const i=this._getItemsArray();for(let r=1;r<i.length+1;r++){const o=(this._activeItemIndex+r)%i.length,s=i[o];if(!this._skipPredicateFn(s)&&0===s.getLabel().toUpperCase().trim().indexOf(e)){this.setActiveItem(o);break}}this._pressedLetters=[]}),this}cancelTypeahead(){return this._pressedLetters=[],this}withHomeAndEnd(t=!0){return this._homeAndEnd=t,this}withPageUpDown(t=!0,e=10){return this._pageUpAndDown={enabled:t,delta:e},this}setActiveItem(t){const e=this._activeItem;this.updateActiveItem(t),this._activeItem!==e&&this.change.next(this._activeItemIndex)}onKeydown(t){const e=t.keyCode,r=["altKey","ctrlKey","metaKey","shiftKey"].every(o=>!t[o]||this._allowedModifierKeys.indexOf(o)>-1);switch(e){case 9:return void this.tabOut.next();case 40:if(this._vertical&&r){this.setNextItemActive();break}return;case 38:if(this._vertical&&r){this.setPreviousItemActive();break}return;case 39:if(this._horizontal&&r){"rtl"===this._horizontal?this.setPreviousItemActive():this.setNextItemActive();break}return;case 37:if(this._horizontal&&r){"rtl"===this._horizontal?this.setNextItemActive():this.setPreviousItemActive();break}return;case 36:if(this._homeAndEnd&&r){this.setFirstItemActive();break}return;case 35:if(this._homeAndEnd&&r){this.setLastItemActive();break}return;case 33:if(this._pageUpAndDown.enabled&&r){const o=this._activeItemIndex-this._pageUpAndDown.delta;this._setActiveItemByIndex(o>0?o:0,1);break}return;case 34:if(this._pageUpAndDown.enabled&&r){const o=this._activeItemIndex+this._pageUpAndDown.delta,s=this._getItemsArray().length;this._setActiveItemByIndex(o<s?o:s-1,-1);break}return;default:return void((r||Ht(t,"shiftKey"))&&(t.key&&1===t.key.length?this._letterKeyStream.next(t.key.toLocaleUpperCase()):(e>=65&&e<=90||e>=48&&e<=57)&&this._letterKeyStream.next(String.fromCharCode(e))))}this._pressedLetters=[],t.preventDefault()}get activeItemIndex(){return this._activeItemIndex}get activeItem(){return this._activeItem}isTyping(){return this._pressedLetters.length>0}setFirstItemActive(){this._setActiveItemByIndex(0,1)}setLastItemActive(){this._setActiveItemByIndex(this._items.length-1,-1)}setNextItemActive(){this._activeItemIndex<0?this.setFirstItemActive():this._setActiveItemByDelta(1)}setPreviousItemActive(){this._activeItemIndex<0&&this._wrap?this.setLastItemActive():this._setActiveItemByDelta(-1)}updateActiveItem(t){const e=this._getItemsArray(),i="number"==typeof t?t:e.indexOf(t);this._activeItem=e[i]??null,this._activeItemIndex=i}destroy(){this._typeaheadSubscription.unsubscribe(),this._itemChangesSubscription?.unsubscribe(),this._letterKeyStream.complete(),this.tabOut.complete(),this.change.complete(),this._pressedLetters=[]}_setActiveItemByDelta(t){this._wrap?this._setActiveInWrapMode(t):this._setActiveInDefaultMode(t)}_setActiveInWrapMode(t){const e=this._getItemsArray();for(let i=1;i<=e.length;i++){const r=(this._activeItemIndex+t*i+e.length)%e.length;if(!this._skipPredicateFn(e[r]))return void this.setActiveItem(r)}}_setActiveInDefaultMode(t){this._setActiveItemByIndex(this._activeItemIndex+t,t)}_setActiveItemByIndex(t,e){const i=this._getItemsArray();if(i[t]){for(;this._skipPredicateFn(i[t]);)if(!i[t+=e])return;this.setActiveItem(t)}}_getItemsArray(){return this._items instanceof qo?this._items.toArray():this._items}}class fq extends pq{setActiveItem(t){this.activeItem&&this.activeItem.setInactiveStyles(),super.setActiveItem(t),this.activeItem&&this.activeItem.setActiveStyles()}}let La=(()=>{class n{constructor(e){this._platform=e}isDisabled(e){return e.hasAttribute("disabled")}isVisible(e){return function gq(n){return!!(n.offsetWidth||n.offsetHeight||"function"==typeof n.getClientRects&&n.getClientRects().length)}(e)&&"visible"===getComputedStyle(e).visibility}isTabbable(e){if(!this._platform.isBrowser)return!1;const i=function mq(n){try{return n.frameElement}catch{return null}}(function xq(n){return n.ownerDocument&&n.ownerDocument.defaultView||window}(e));if(i&&(-1===Ix(i)||!this.isVisible(i)))return!1;let r=e.nodeName.toLowerCase(),o=Ix(e);return e.hasAttribute("contenteditable")?-1!==o:!("iframe"===r||"object"===r||this._platform.WEBKIT&&this._platform.IOS&&!function Cq(n){let t=n.nodeName.toLowerCase(),e="input"===t&&n.type;return"text"===e||"password"===e||"select"===t||"textarea"===t}(e))&&("audio"===r?!!e.hasAttribute("controls")&&-1!==o:"video"===r?-1!==o&&(null!==o||this._platform.FIREFOX||e.hasAttribute("controls")):e.tabIndex>=0)}isFocusable(e,i){return function kq(n){return!function yq(n){return function Aq(n){return"input"==n.nodeName.toLowerCase()}(n)&&"hidden"==n.type}(n)&&(function bq(n){let t=n.nodeName.toLowerCase();return"input"===t||"select"===t||"button"===t||"textarea"===t}(n)||function vq(n){return function Sq(n){return"a"==n.nodeName.toLowerCase()}(n)&&n.hasAttribute("href")}(n)||n.hasAttribute("contenteditable")||Ex(n))}(e)&&!this.isDisabled(e)&&(i?.ignoreVisibility||this.isVisible(e))}}return n.\u0275fac=function(e){return new(e||n)(v(Ze))},n.\u0275prov=R({token:n,factory:n.\u0275fac,providedIn:"root"}),n})();function Ex(n){if(!n.hasAttribute("tabindex")||void 0===n.tabIndex)return!1;let t=n.getAttribute("tabindex");return!(!t||isNaN(parseInt(t,10)))}function Ix(n){if(!Ex(n))return null;const t=parseInt(n.getAttribute("tabindex")||"",10);return isNaN(t)?-1:t}class Dq{get enabled(){return this._enabled}set enabled(t){this._enabled=t,this._startAnchor&&this._endAnchor&&(this._toggleAnchorTabIndex(t,this._startAnchor),this._toggleAnchorTabIndex(t,this._endAnchor))}constructor(t,e,i,r,o=!1){this._element=t,this._checker=e,this._ngZone=i,this._document=r,this._hasAttached=!1,this.startAnchorListener=()=>this.focusLastTabbableElement(),this.endAnchorListener=()=>this.focusFirstTabbableElement(),this._enabled=!0,o||this.attachAnchors()}destroy(){const t=this._startAnchor,e=this._endAnchor;t&&(t.removeEventListener("focus",this.startAnchorListener),t.remove()),e&&(e.removeEventListener("focus",this.endAnchorListener),e.remove()),this._startAnchor=this._endAnchor=null,this._hasAttached=!1}attachAnchors(){return!!this._hasAttached||(this._ngZone.runOutsideAngular(()=>{this._startAnchor||(this._startAnchor=this._createAnchor(),this._startAnchor.addEventListener("focus",this.startAnchorListener)),this._endAnchor||(this._endAnchor=this._createAnchor(),this._endAnchor.addEventListener("focus",this.endAnchorListener))}),this._element.parentNode&&(this._element.parentNode.insertBefore(this._startAnchor,this._element),this._element.parentNode.insertBefore(this._endAnchor,this._element.nextSibling),this._hasAttached=!0),this._hasAttached)}focusInitialElementWhenReady(t){return new Promise(e=>{this._executeOnStable(()=>e(this.focusInitialElement(t)))})}focusFirstTabbableElementWhenReady(t){return new Promise(e=>{this._executeOnStable(()=>e(this.focusFirstTabbableElement(t)))})}focusLastTabbableElementWhenReady(t){return new Promise(e=>{this._executeOnStable(()=>e(this.focusLastTabbableElement(t)))})}_getRegionBoundary(t){const e=this._element.querySelectorAll(`[cdk-focus-region-${t}], [cdkFocusRegion${t}], [cdk-focus-${t}]`);return"start"==t?e.length?e[0]:this._getFirstTabbableElement(this._element):e.length?e[e.length-1]:this._getLastTabbableElement(this._element)}focusInitialElement(t){const e=this._element.querySelector("[cdk-focus-initial], [cdkFocusInitial]");if(e){if(!this._checker.isFocusable(e)){const i=this._getFirstTabbableElement(e);return i?.focus(t),!!i}return e.focus(t),!0}return this.focusFirstTabbableElement(t)}focusFirstTabbableElement(t){const e=this._getRegionBoundary("start");return e&&e.focus(t),!!e}focusLastTabbableElement(t){const e=this._getRegionBoundary("end");return e&&e.focus(t),!!e}hasAttached(){return this._hasAttached}_getFirstTabbableElement(t){if(this._checker.isFocusable(t)&&this._checker.isTabbable(t))return t;const e=t.children;for(let i=0;i<e.length;i++){const r=e[i].nodeType===this._document.ELEMENT_NODE?this._getFirstTabbableElement(e[i]):null;if(r)return r}return null}_getLastTabbableElement(t){if(this._checker.isFocusable(t)&&this._checker.isTabbable(t))return t;const e=t.children;for(let i=e.length-1;i>=0;i--){const r=e[i].nodeType===this._document.ELEMENT_NODE?this._getLastTabbableElement(e[i]):null;if(r)return r}return null}_createAnchor(){const t=this._document.createElement("div");return this._toggleAnchorTabIndex(this._enabled,t),t.classList.add("cdk-visually-hidden"),t.classList.add("cdk-focus-trap-anchor"),t.setAttribute("aria-hidden","true"),t}_toggleAnchorTabIndex(t,e){t?e.setAttribute("tabindex","0"):e.removeAttribute("tabindex")}toggleAnchors(t){this._startAnchor&&this._endAnchor&&(this._toggleAnchorTabIndex(t,this._startAnchor),this._toggleAnchorTabIndex(t,this._endAnchor))}_executeOnStable(t){this._ngZone.isStable?t():this._ngZone.onStable.pipe(Ue(1)).subscribe(t)}}let Ja=(()=>{class n{constructor(e,i,r){this._checker=e,this._ngZone=i,this._document=r}create(e,i=!1){return new Dq(e,this._checker,this._ngZone,this._document,i)}}return n.\u0275fac=function(e){return new(e||n)(v(La),v(j),v(Y))},n.\u0275prov=R({token:n,factory:n.\u0275fac,providedIn:"root"}),n})(),wq=(()=>{class n{get enabled(){return this.focusTrap.enabled}set enabled(e){this.focusTrap.enabled=ue(e)}get autoCapture(){return this._autoCapture}set autoCapture(e){this._autoCapture=ue(e)}constructor(e,i,r){this._elementRef=e,this._focusTrapFactory=i,this._previouslyFocusedElement=null,this.focusTrap=this._focusTrapFactory.create(this._elementRef.nativeElement,!0)}ngOnDestroy(){this.focusTrap.destroy(),this._previouslyFocusedElement&&(this._previouslyFocusedElement.focus(),this._previouslyFocusedElement=null)}ngAfterContentInit(){this.focusTrap.attachAnchors(),this.autoCapture&&this._captureFocus()}ngDoCheck(){this.focusTrap.hasAttached()||this.focusTrap.attachAnchors()}ngOnChanges(e){const i=e.autoCapture;i&&!i.firstChange&&this.autoCapture&&this.focusTrap.hasAttached()&&this._captureFocus()}_captureFocus(){this._previouslyFocusedElement=ja(),this.focusTrap.focusInitialElementWhenReady()}}return n.\u0275fac=function(e){return new(e||n)(p(z),p(Ja),p(Y))},n.\u0275dir=M({type:n,selectors:[["","cdkTrapFocus",""]],inputs:{enabled:["cdkTrapFocus","enabled"],autoCapture:["cdkTrapFocusAutoCapture","autoCapture"]},exportAs:["cdkTrapFocus"],features:[ze]}),n})();function Rx(n){return 0===n.buttons||0===n.offsetX&&0===n.offsetY}function Tx(n){const t=n.touches&&n.touches[0]||n.changedTouches&&n.changedTouches[0];return!(!t||-1!==t.identifier||null!=t.radiusX&&1!==t.radiusX||null!=t.radiusY&&1!==t.radiusY)}const Eq=new D("cdk-input-modality-detector-options"),Iq={ignoreKeys:[18,17,224,91,16]},cs=os({passive:!0,capture:!0});let Rq=(()=>{class n{get mostRecentModality(){return this._modality.value}constructor(e,i,r,o){this._platform=e,this._mostRecentTarget=null,this._modality=new kn(null),this._lastTouchMs=0,this._onKeydown=s=>{this._options?.ignoreKeys?.some(a=>a===s.keyCode)||(this._modality.next("keyboard"),this._mostRecentTarget=Xi(s))},this._onMousedown=s=>{Date.now()-this._lastTouchMs<650||(this._modality.next(Rx(s)?"keyboard":"mouse"),this._mostRecentTarget=Xi(s))},this._onTouchstart=s=>{Tx(s)?this._modality.next("keyboard"):(this._lastTouchMs=Date.now(),this._modality.next("touch"),this._mostRecentTarget=Xi(s))},this._options={...Iq,...o},this.modalityDetected=this._modality.pipe(vx(1)),this.modalityChanged=this.modalityDetected.pipe(Sm()),e.isBrowser&&i.runOutsideAngular(()=>{r.addEventListener("keydown",this._onKeydown,cs),r.addEventListener("mousedown",this._onMousedown,cs),r.addEventListener("touchstart",this._onTouchstart,cs)})}ngOnDestroy(){this._modality.complete(),this._platform.isBrowser&&(document.removeEventListener("keydown",this._onKeydown,cs),document.removeEventListener("mousedown",this._onMousedown,cs),document.removeEventListener("touchstart",this._onTouchstart,cs))}}return n.\u0275fac=function(e){return new(e||n)(v(Ze),v(j),v(Y),v(Eq,8))},n.\u0275prov=R({token:n,factory:n.\u0275fac,providedIn:"root"}),n})();const Tq=new D("liveAnnouncerElement",{providedIn:"root",factory:function Mq(){return null}}),Oq=new D("LIVE_ANNOUNCER_DEFAULT_OPTIONS");let Fq=0,Vq=(()=>{class n{constructor(e,i,r,o){this._ngZone=i,this._defaultOptions=o,this._document=r,this._liveElement=e||this._createLiveElement()}announce(e,...i){const r=this._defaultOptions;let o,s;return 1===i.length&&"number"==typeof i[0]?s=i[0]:[o,s]=i,this.clear(),clearTimeout(this._previousTimeout),o||(o=r&&r.politeness?r.politeness:"polite"),null==s&&r&&(s=r.duration),this._liveElement.setAttribute("aria-live",o),this._liveElement.id&&this._exposeAnnouncerToModals(this._liveElement.id),this._ngZone.runOutsideAngular(()=>(this._currentPromise||(this._currentPromise=new Promise(a=>this._currentResolve=a)),clearTimeout(this._previousTimeout),this._previousTimeout=setTimeout(()=>{this._liveElement.textContent=e,"number"==typeof s&&(this._previousTimeout=setTimeout(()=>this.clear(),s)),this._currentResolve(),this._currentPromise=this._currentResolve=void 0},100),this._currentPromise))}clear(){this._liveElement&&(this._liveElement.textContent="")}ngOnDestroy(){clearTimeout(this._previousTimeout),this._liveElement?.remove(),this._liveElement=null,this._currentResolve?.(),this._currentPromise=this._currentResolve=void 0}_createLiveElement(){const e="cdk-live-announcer-element",i=this._document.getElementsByClassName(e),r=this._document.createElement("div");for(let o=0;o<i.length;o++)i[o].remove();return r.classList.add(e),r.classList.add("cdk-visually-hidden"),r.setAttribute("aria-atomic","true"),r.setAttribute("aria-live","polite"),r.id="cdk-live-announcer-"+Fq++,this._document.body.appendChild(r),r}_exposeAnnouncerToModals(e){const i=this._document.querySelectorAll('body > .cdk-overlay-container [aria-modal="true"]');for(let r=0;r<i.length;r++){const o=i[r],s=o.getAttribute("aria-owns");s?-1===s.indexOf(e)&&o.setAttribute("aria-owns",s+" "+e):o.setAttribute("aria-owns",e)}}}return n.\u0275fac=function(e){return new(e||n)(v(Tq,8),v(j),v(Y),v(Oq,8))},n.\u0275prov=R({token:n,factory:n.\u0275fac,providedIn:"root"}),n})();const Uq=new D("cdk-focus-monitor-default-options"),Hd=os({passive:!0,capture:!0});let er=(()=>{class n{constructor(e,i,r,o,s){this._ngZone=e,this._platform=i,this._inputModalityDetector=r,this._origin=null,this._windowFocused=!1,this._originFromTouchInteraction=!1,this._elementInfo=new Map,this._monitoredElementCount=0,this._rootNodeFocusListenerCount=new Map,this._windowFocusListener=()=>{this._windowFocused=!0,this._windowFocusTimeoutId=window.setTimeout(()=>this._windowFocused=!1)},this._stopInputModalityDetector=new P,this._rootNodeFocusAndBlurListener=a=>{for(let c=Xi(a);c;c=c.parentElement)"focus"===a.type?this._onFocus(a,c):this._onBlur(a,c)},this._document=o,this._detectionMode=s?.detectionMode||0}monitor(e,i=!1){const r=Oi(e);if(!this._platform.isBrowser||1!==r.nodeType)return N(null);const o=function Hj(n){if(function Kj(){if(null==bm){const n=typeof document<"u"?document.head:null;bm=!(!n||!n.createShadowRoot&&!n.attachShadow)}return bm}()){const t=n.getRootNode?n.getRootNode():null;if(typeof ShadowRoot<"u"&&ShadowRoot&&t instanceof ShadowRoot)return t}return null}(r)||this._getDocument(),s=this._elementInfo.get(r);if(s)return i&&(s.checkChildren=!0),s.subject;const a={checkChildren:i,subject:new P,rootNode:o};return this._elementInfo.set(r,a),this._registerGlobalListeners(a),a.subject}stopMonitoring(e){const i=Oi(e),r=this._elementInfo.get(i);r&&(r.subject.complete(),this._setClasses(i),this._elementInfo.delete(i),this._removeGlobalListeners(r))}focusVia(e,i,r){const o=Oi(e);o===this._getDocument().activeElement?this._getClosestElementsInfo(o).forEach(([a,l])=>this._originChanged(a,i,l)):(this._setOrigin(i),"function"==typeof o.focus&&o.focus(r))}ngOnDestroy(){this._elementInfo.forEach((e,i)=>this.stopMonitoring(i))}_getDocument(){return this._document||document}_getWindow(){return this._getDocument().defaultView||window}_getFocusOrigin(e){return this._origin?this._originFromTouchInteraction?this._shouldBeAttributedToTouch(e)?"touch":"program":this._origin:this._windowFocused&&this._lastFocusOrigin?this._lastFocusOrigin:e&&this._isLastInteractionFromInputLabel(e)?"mouse":"program"}_shouldBeAttributedToTouch(e){return 1===this._detectionMode||!!e?.contains(this._inputModalityDetector._mostRecentTarget)}_setClasses(e,i){e.classList.toggle("cdk-focused",!!i),e.classList.toggle("cdk-touch-focused","touch"===i),e.classList.toggle("cdk-keyboard-focused","keyboard"===i),e.classList.toggle("cdk-mouse-focused","mouse"===i),e.classList.toggle("cdk-program-focused","program"===i)}_setOrigin(e,i=!1){this._ngZone.runOutsideAngular(()=>{this._origin=e,this._originFromTouchInteraction="touch"===e&&i,0===this._detectionMode&&(clearTimeout(this._originTimeoutId),this._originTimeoutId=setTimeout(()=>this._origin=null,this._originFromTouchInteraction?650:1))})}_onFocus(e,i){const r=this._elementInfo.get(i),o=Xi(e);!r||!r.checkChildren&&i!==o||this._originChanged(i,this._getFocusOrigin(o),r)}_onBlur(e,i){const r=this._elementInfo.get(i);!r||r.checkChildren&&e.relatedTarget instanceof Node&&i.contains(e.relatedTarget)||(this._setClasses(i),this._emitOrigin(r,null))}_emitOrigin(e,i){e.subject.observers.length&&this._ngZone.run(()=>e.subject.next(i))}_registerGlobalListeners(e){if(!this._platform.isBrowser)return;const i=e.rootNode,r=this._rootNodeFocusListenerCount.get(i)||0;r||this._ngZone.runOutsideAngular(()=>{i.addEventListener("focus",this._rootNodeFocusAndBlurListener,Hd),i.addEventListener("blur",this._rootNodeFocusAndBlurListener,Hd)}),this._rootNodeFocusListenerCount.set(i,r+1),1==++this._monitoredElementCount&&(this._ngZone.runOutsideAngular(()=>{this._getWindow().addEventListener("focus",this._windowFocusListener)}),this._inputModalityDetector.modalityDetected.pipe(Te(this._stopInputModalityDetector)).subscribe(o=>{this._setOrigin(o,!0)}))}_removeGlobalListeners(e){const i=e.rootNode;if(this._rootNodeFocusListenerCount.has(i)){const r=this._rootNodeFocusListenerCount.get(i);r>1?this._rootNodeFocusListenerCount.set(i,r-1):(i.removeEventListener("focus",this._rootNodeFocusAndBlurListener,Hd),i.removeEventListener("blur",this._rootNodeFocusAndBlurListener,Hd),this._rootNodeFocusListenerCount.delete(i))}--this._monitoredElementCount||(this._getWindow().removeEventListener("focus",this._windowFocusListener),this._stopInputModalityDetector.next(),clearTimeout(this._windowFocusTimeoutId),clearTimeout(this._originTimeoutId))}_originChanged(e,i,r){this._setClasses(e,i),this._emitOrigin(r,i),this._lastFocusOrigin=i}_getClosestElementsInfo(e){const i=[];return this._elementInfo.forEach((r,o)=>{(o===e||r.checkChildren&&o.contains(e))&&i.push([o,r])}),i}_isLastInteractionFromInputLabel(e){const{_mostRecentTarget:i,mostRecentModality:r}=this._inputModalityDetector;if("mouse"!==r||!i||i===e||"INPUT"!==e.nodeName&&"TEXTAREA"!==e.nodeName||e.disabled)return!1;const o=e.labels;if(o)for(let s=0;s<o.length;s++)if(o[s].contains(i))return!0;return!1}}return n.\u0275fac=function(e){return new(e||n)(v(j),v(Ze),v(Rq),v(Y,8),v(Uq,8))},n.\u0275prov=R({token:n,factory:n.\u0275fac,providedIn:"root"}),n})(),Nq=(()=>{class n{constructor(e,i){this._elementRef=e,this._focusMonitor=i,this._focusOrigin=null,this.cdkFocusChange=new O}get focusOrigin(){return this._focusOrigin}ngAfterViewInit(){const e=this._elementRef.nativeElement;this._monitorSubscription=this._focusMonitor.monitor(e,1===e.nodeType&&e.hasAttribute("cdkMonitorSubtreeFocus")).subscribe(i=>{this._focusOrigin=i,this.cdkFocusChange.emit(i)})}ngOnDestroy(){this._focusMonitor.stopMonitoring(this._elementRef),this._monitorSubscription&&this._monitorSubscription.unsubscribe()}}return n.\u0275fac=function(e){return new(e||n)(p(z),p(er))},n.\u0275dir=M({type:n,selectors:[["","cdkMonitorElementFocus",""],["","cdkMonitorSubtreeFocus",""]],outputs:{cdkFocusChange:"cdkFocusChange"},exportAs:["cdkMonitorFocus"]}),n})();const Ox="cdk-high-contrast-black-on-white",Fx="cdk-high-contrast-white-on-black",xm="cdk-high-contrast-active";let Vx=(()=>{class n{constructor(e,i){this._platform=e,this._document=i,this._breakpointSubscription=ie(cq).observe("(forced-colors: active)").subscribe(()=>{this._hasCheckedHighContrastMode&&(this._hasCheckedHighContrastMode=!1,this._applyBodyHighContrastModeCssClasses())})}getHighContrastMode(){if(!this._platform.isBrowser)return 0;const e=this._document.createElement("div");e.style.backgroundColor="rgb(1,2,3)",e.style.position="absolute",this._document.body.appendChild(e);const i=this._document.defaultView||window,r=i&&i.getComputedStyle?i.getComputedStyle(e):null,o=(r&&r.backgroundColor||"").replace(/ /g,"");switch(e.remove(),o){case"rgb(0,0,0)":case"rgb(45,50,54)":case"rgb(32,32,32)":return 2;case"rgb(255,255,255)":case"rgb(255,250,239)":return 1}return 0}ngOnDestroy(){this._breakpointSubscription.unsubscribe()}_applyBodyHighContrastModeCssClasses(){if(!this._hasCheckedHighContrastMode&&this._platform.isBrowser&&this._document.body){const e=this._document.body.classList;e.remove(xm,Ox,Fx),this._hasCheckedHighContrastMode=!0;const i=this.getHighContrastMode();1===i?e.add(xm,Ox):2===i&&e.add(xm,Fx)}}}return n.\u0275fac=function(e){return new(e||n)(v(Ze),v(Y))},n.\u0275prov=R({token:n,factory:n.\u0275fac,providedIn:"root"}),n})(),Dm=(()=>{class n{constructor(e){e._applyBodyHighContrastModeCssClasses()}}return n.\u0275fac=function(e){return new(e||n)(v(Vx))},n.\u0275mod=he({type:n}),n.\u0275inj=ce({imports:[Sx]}),n})();const Pq=new D("cdk-dir-doc",{providedIn:"root",factory:function _q(){return ie(Y)}}),Bq=/^(ar|ckb|dv|he|iw|fa|nqo|ps|sd|ug|ur|yi|.*[-_](Adlm|Arab|Hebr|Nkoo|Rohg|Thaa))(?!.*[-_](Latn|Cyrl)($|-|_))($|-|_)/i;let Lt=(()=>{class n{constructor(e){this.value="ltr",this.change=new O,e&&(this.value=function jq(n){const t=n?.toLowerCase()||"";return"auto"===t&&typeof navigator<"u"&&navigator?.language?Bq.test(navigator.language)?"rtl":"ltr":"rtl"===t?"rtl":"ltr"}((e.body?e.body.dir:null)||(e.documentElement?e.documentElement.dir:null)||"ltr"))}ngOnDestroy(){this.change.complete()}}return n.\u0275fac=function(e){return new(e||n)(v(Pq,8))},n.\u0275prov=R({token:n,factory:n.\u0275fac,providedIn:"root"}),n})(),Wa=(()=>{class n{}return n.\u0275fac=function(e){return new(e||n)},n.\u0275mod=he({type:n}),n.\u0275inj=ce({}),n})();const qq=["text"];function Kq(n,t){if(1&n&&q(0,"mat-pseudo-checkbox",5),2&n){const e=re();I("state",e.selected?"checked":"unchecked")("disabled",e.disabled)}}function Hq(n,t){if(1&n&&(b(0,"span",6),E(1),y()),2&n){const e=re();w(1),An("(",e.group.label,")")}}const Lq=[[["mat-icon"]],"*"],Jq=["mat-icon","*"],Qq=new D("mat-sanity-checks",{providedIn:"root",factory:function Wq(){return!0}});let Ne=(()=>{class n{constructor(e,i,r){this._sanityChecks=i,this._document=r,this._hasDoneGlobalChecks=!1,e._applyBodyHighContrastModeCssClasses(),this._hasDoneGlobalChecks||(this._hasDoneGlobalChecks=!0)}_checkIsEnabled(e){return!ym()&&("boolean"==typeof this._sanityChecks?this._sanityChecks:!!this._sanityChecks[e])}}return n.\u0275fac=function(e){return new(e||n)(v(Vx),v(Qq,8),v(Y))},n.\u0275mod=he({type:n}),n.\u0275inj=ce({imports:[Wa,Wa]}),n})();function Px(n){return class extends n{get disabled(){return this._disabled}set disabled(t){this._disabled=ue(t)}constructor(...t){super(...t),this._disabled=!1}}}function Qa(n,t){return class extends n{get color(){return this._color}set color(e){const i=e||this.defaultColor;i!==this._color&&(this._color&&this._elementRef.nativeElement.classList.remove(`mat-${this._color}`),i&&this._elementRef.nativeElement.classList.add(`mat-${i}`),this._color=i)}constructor(...e){super(...e),this.defaultColor=t,this.color=t}}}function wm(n){return class extends n{get disableRipple(){return this._disableRipple}set disableRipple(t){this._disableRipple=ue(t)}constructor(...t){super(...t),this._disableRipple=!1}}}function _x(n,t=0){return class extends n{get tabIndex(){return this.disabled?-1:this._tabIndex}set tabIndex(e){this._tabIndex=null!=e?oi(e):this.defaultTabIndex}constructor(...e){super(...e),this._tabIndex=t,this.defaultTabIndex=t}}}function Bx(n){return class extends n{updateErrorState(){const t=this.errorState,o=(this.errorStateMatcher||this._defaultErrorStateMatcher).isErrorState(this.ngControl?this.ngControl.control:null,this._parentFormGroup||this._parentForm);o!==t&&(this.errorState=o,this.stateChanges.next())}constructor(...t){super(...t),this.errorState=!1}}}const jx=new D("MAT_DATE_LOCALE",{providedIn:"root",factory:function Gq(){return ie(ei)}});class Ct{constructor(){this._localeChanges=new P,this.localeChanges=this._localeChanges}getValidDateOrNull(t){return this.isDateInstance(t)&&this.isValid(t)?t:null}deserialize(t){return null==t||this.isDateInstance(t)&&this.isValid(t)?t:this.invalid()}setLocale(t){this.locale=t,this._localeChanges.next()}compareDate(t,e){return this.getYear(t)-this.getYear(e)||this.getMonth(t)-this.getMonth(e)||this.getDate(t)-this.getDate(e)}sameDate(t,e){if(t&&e){let i=this.isValid(t),r=this.isValid(e);return i&&r?!this.compareDate(t,e):i==r}return t==e}clampDate(t,e,i){return e&&this.compareDate(t,e)<0?e:i&&this.compareDate(t,i)>0?i:t}}const Jr=new D("mat-date-formats"),zq=/^\d{4}-\d{2}-\d{2}(?:T\d{2}:\d{2}:\d{2}(?:\.\d+)?(?:Z|(?:(?:\+|-)\d{2}:\d{2}))?)?$/;function Em(n,t){const e=Array(n);for(let i=0;i<n;i++)e[i]=t(i);return e}let Yq=(()=>{class n extends Ct{constructor(e,i){super(),this.useUtcForDisplay=!1,super.setLocale(e)}getYear(e){return e.getFullYear()}getMonth(e){return e.getMonth()}getDate(e){return e.getDate()}getDayOfWeek(e){return e.getDay()}getMonthNames(e){const i=new Intl.DateTimeFormat(this.locale,{month:e,timeZone:"utc"});return Em(12,r=>this._format(i,new Date(2017,r,1)))}getDateNames(){const e=new Intl.DateTimeFormat(this.locale,{day:"numeric",timeZone:"utc"});return Em(31,i=>this._format(e,new Date(2017,0,i+1)))}getDayOfWeekNames(e){const i=new Intl.DateTimeFormat(this.locale,{weekday:e,timeZone:"utc"});return Em(7,r=>this._format(i,new Date(2017,0,r+1)))}getYearName(e){const i=new Intl.DateTimeFormat(this.locale,{year:"numeric",timeZone:"utc"});return this._format(i,e)}getFirstDayOfWeek(){return 0}getNumDaysInMonth(e){return this.getDate(this._createDateWithOverflow(this.getYear(e),this.getMonth(e)+1,0))}clone(e){return new Date(e.getTime())}createDate(e,i,r){let o=this._createDateWithOverflow(e,i,r);return o.getMonth(),o}today(){return new Date}parse(e,i){return"number"==typeof e?new Date(e):e?new Date(Date.parse(e)):null}format(e,i){if(!this.isValid(e))throw Error("NativeDateAdapter: Cannot format invalid date.");const r=new Intl.DateTimeFormat(this.locale,{...i,timeZone:"utc"});return this._format(r,e)}addCalendarYears(e,i){return this.addCalendarMonths(e,12*i)}addCalendarMonths(e,i){let r=this._createDateWithOverflow(this.getYear(e),this.getMonth(e)+i,this.getDate(e));return this.getMonth(r)!=((this.getMonth(e)+i)%12+12)%12&&(r=this._createDateWithOverflow(this.getYear(r),this.getMonth(r),0)),r}addCalendarDays(e,i){return this._createDateWithOverflow(this.getYear(e),this.getMonth(e),this.getDate(e)+i)}toIso8601(e){return[e.getUTCFullYear(),this._2digit(e.getUTCMonth()+1),this._2digit(e.getUTCDate())].join("-")}deserialize(e){if("string"==typeof e){if(!e)return null;if(zq.test(e)){let i=new Date(e);if(this.isValid(i))return i}}return super.deserialize(e)}isDateInstance(e){return e instanceof Date}isValid(e){return!isNaN(e.getTime())}invalid(){return new Date(NaN)}_createDateWithOverflow(e,i,r){const o=new Date;return o.setFullYear(e,i,r),o.setHours(0,0,0,0),o}_2digit(e){return("00"+e).slice(-2)}_format(e,i){const r=new Date;return r.setUTCFullYear(i.getFullYear(),i.getMonth(),i.getDate()),r.setUTCHours(i.getHours(),i.getMinutes(),i.getSeconds(),i.getMilliseconds()),e.format(r)}}return n.\u0275fac=function(e){return new(e||n)(v(jx,8),v(Ze))},n.\u0275prov=R({token:n,factory:n.\u0275fac}),n})();const Xq={parse:{dateInput:null},display:{dateInput:{year:"numeric",month:"numeric",day:"numeric"},monthYearLabel:{year:"numeric",month:"short"},dateA11yLabel:{year:"numeric",month:"long",day:"numeric"},monthYearA11yLabel:{year:"numeric",month:"long"}}};let Zq=(()=>{class n{}return n.\u0275fac=function(e){return new(e||n)},n.\u0275mod=he({type:n}),n.\u0275inj=ce({providers:[{provide:Ct,useClass:Yq}]}),n})(),qx=(()=>{class n{}return n.\u0275fac=function(e){return new(e||n)},n.\u0275mod=he({type:n}),n.\u0275inj=ce({providers:[{provide:Jr,useValue:Xq}],imports:[Zq]}),n})(),Kx=(()=>{class n{isErrorState(e,i){return!!(e&&e.invalid&&(e.touched||i&&i.submitted))}}return n.\u0275fac=function(e){return new(e||n)},n.\u0275prov=R({token:n,factory:n.\u0275fac,providedIn:"root"}),n})();class $q{constructor(t,e,i,r=!1){this._renderer=t,this.element=e,this.config=i,this._animationForciblyDisabledThroughCss=r,this.state=3}fadeOut(){this._renderer.fadeOutRipple(this)}}const Hx=os({passive:!0,capture:!0});class eK{constructor(){this._events=new Map,this._delegateEventHandler=t=>{const e=Xi(t);e&&this._events.get(t.type)?.forEach((i,r)=>{(r===e||r.contains(e))&&i.forEach(o=>o.handleEvent(t))})}}addHandler(t,e,i,r){const o=this._events.get(e);if(o){const s=o.get(i);s?s.add(r):o.set(i,new Set([r]))}else this._events.set(e,new Map([[i,new Set([r])]])),t.runOutsideAngular(()=>{document.addEventListener(e,this._delegateEventHandler,Hx)})}removeHandler(t,e,i){const r=this._events.get(t);if(!r)return;const o=r.get(e);o&&(o.delete(i),0===o.size&&r.delete(e),0===r.size&&(this._events.delete(t),document.removeEventListener(t,this._delegateEventHandler,Hx)))}}const Lx={enterDuration:225,exitDuration:150},Jx=os({passive:!0,capture:!0}),Wx=["mousedown","touchstart"],Qx=["mouseup","mouseleave","touchend","touchcancel"];class za{constructor(t,e,i,r){this._target=t,this._ngZone=e,this._platform=r,this._isPointerDown=!1,this._activeRipples=new Map,this._pointerUpEventsRegistered=!1,r.isBrowser&&(this._containerElement=Oi(i))}fadeInRipple(t,e,i={}){const r=this._containerRect=this._containerRect||this._containerElement.getBoundingClientRect(),o={...Lx,...i.animation};i.centered&&(t=r.left+r.width/2,e=r.top+r.height/2);const s=i.radius||function nK(n,t,e){const i=Math.max(Math.abs(n-e.left),Math.abs(n-e.right)),r=Math.max(Math.abs(t-e.top),Math.abs(t-e.bottom));return Math.sqrt(i*i+r*r)}(t,e,r),a=t-r.left,l=e-r.top,c=o.enterDuration,d=document.createElement("div");d.classList.add("mat-ripple-element"),d.style.left=a-s+"px",d.style.top=l-s+"px",d.style.height=2*s+"px",d.style.width=2*s+"px",null!=i.color&&(d.style.backgroundColor=i.color),d.style.transitionDuration=`${c}ms`,this._containerElement.appendChild(d);const u=window.getComputedStyle(d),f=u.transitionDuration,m="none"===u.transitionProperty||"0s"===f||"0s, 0s"===f||0===r.width&&0===r.height,g=new $q(this,d,i,m);d.style.transform="scale3d(1, 1, 1)",g.state=0,i.persistent||(this._mostRecentTransientRipple=g);let A=null;return!m&&(c||o.exitDuration)&&this._ngZone.runOutsideAngular(()=>{const k=()=>this._finishRippleTransition(g),T=()=>this._destroyRipple(g);d.addEventListener("transitionend",k),d.addEventListener("transitioncancel",T),A={onTransitionEnd:k,onTransitionCancel:T}}),this._activeRipples.set(g,A),(m||!c)&&this._finishRippleTransition(g),g}fadeOutRipple(t){if(2===t.state||3===t.state)return;const e=t.element,i={...Lx,...t.config.animation};e.style.transitionDuration=`${i.exitDuration}ms`,e.style.opacity="0",t.state=2,(t._animationForciblyDisabledThroughCss||!i.exitDuration)&&this._finishRippleTransition(t)}fadeOutAll(){this._getActiveRipples().forEach(t=>t.fadeOut())}fadeOutAllNonPersistent(){this._getActiveRipples().forEach(t=>{t.config.persistent||t.fadeOut()})}setupTriggerEvents(t){const e=Oi(t);!this._platform.isBrowser||!e||e===this._triggerElement||(this._removeTriggerEvents(),this._triggerElement=e,Wx.forEach(i=>{za._eventManager.addHandler(this._ngZone,i,e,this)}))}handleEvent(t){"mousedown"===t.type?this._onMousedown(t):"touchstart"===t.type?this._onTouchStart(t):this._onPointerUp(),this._pointerUpEventsRegistered||(this._ngZone.runOutsideAngular(()=>{Qx.forEach(e=>{this._triggerElement.addEventListener(e,this,Jx)})}),this._pointerUpEventsRegistered=!0)}_finishRippleTransition(t){0===t.state?this._startFadeOutTransition(t):2===t.state&&this._destroyRipple(t)}_startFadeOutTransition(t){const e=t===this._mostRecentTransientRipple,{persistent:i}=t.config;t.state=1,!i&&(!e||!this._isPointerDown)&&t.fadeOut()}_destroyRipple(t){const e=this._activeRipples.get(t)??null;this._activeRipples.delete(t),this._activeRipples.size||(this._containerRect=null),t===this._mostRecentTransientRipple&&(this._mostRecentTransientRipple=null),t.state=3,null!==e&&(t.element.removeEventListener("transitionend",e.onTransitionEnd),t.element.removeEventListener("transitioncancel",e.onTransitionCancel)),t.element.remove()}_onMousedown(t){const e=Rx(t),i=this._lastTouchStartEvent&&Date.now()<this._lastTouchStartEvent+800;!this._target.rippleDisabled&&!e&&!i&&(this._isPointerDown=!0,this.fadeInRipple(t.clientX,t.clientY,this._target.rippleConfig))}_onTouchStart(t){if(!this._target.rippleDisabled&&!Tx(t)){this._lastTouchStartEvent=Date.now(),this._isPointerDown=!0;const e=t.changedTouches;for(let i=0;i<e.length;i++)this.fadeInRipple(e[i].clientX,e[i].clientY,this._target.rippleConfig)}}_onPointerUp(){this._isPointerDown&&(this._isPointerDown=!1,this._getActiveRipples().forEach(t=>{!t.config.persistent&&(1===t.state||t.config.terminateOnPointerUp&&0===t.state)&&t.fadeOut()}))}_getActiveRipples(){return Array.from(this._activeRipples.keys())}_removeTriggerEvents(){const t=this._triggerElement;t&&(Wx.forEach(e=>za._eventManager.removeHandler(e,t,this)),this._pointerUpEventsRegistered&&Qx.forEach(e=>t.removeEventListener(e,this,Jx)))}}za._eventManager=new eK;const iK=new D("mat-ripple-global-options");let Ya=(()=>{class n{get disabled(){return this._disabled}set disabled(e){e&&this.fadeOutAllNonPersistent(),this._disabled=e,this._setupTriggerEventsIfEnabled()}get trigger(){return this._trigger||this._elementRef.nativeElement}set trigger(e){this._trigger=e,this._setupTriggerEventsIfEnabled()}constructor(e,i,r,o,s){this._elementRef=e,this._animationMode=s,this.radius=0,this._disabled=!1,this._isInitialized=!1,this._globalOptions=o||{},this._rippleRenderer=new za(this,i,e,r)}ngOnInit(){this._isInitialized=!0,this._setupTriggerEventsIfEnabled()}ngOnDestroy(){this._rippleRenderer._removeTriggerEvents()}fadeOutAll(){this._rippleRenderer.fadeOutAll()}fadeOutAllNonPersistent(){this._rippleRenderer.fadeOutAllNonPersistent()}get rippleConfig(){return{centered:this.centered,radius:this.radius,color:this.color,animation:{...this._globalOptions.animation,..."NoopAnimations"===this._animationMode?{enterDuration:0,exitDuration:0}:{},...this.animation},terminateOnPointerUp:this._globalOptions.terminateOnPointerUp}}get rippleDisabled(){return this.disabled||!!this._globalOptions.disabled}_setupTriggerEventsIfEnabled(){!this.disabled&&this._isInitialized&&this._rippleRenderer.setupTriggerEvents(this.trigger)}launch(e,i=0,r){return"number"==typeof e?this._rippleRenderer.fadeInRipple(e,i,{...this.rippleConfig,...r}):this._rippleRenderer.fadeInRipple(0,0,{...this.rippleConfig,...e})}}return n.\u0275fac=function(e){return new(e||n)(p(z),p(j),p(Ze),p(iK,8),p(Kt,8))},n.\u0275dir=M({type:n,selectors:[["","mat-ripple",""],["","matRipple",""]],hostAttrs:[1,"mat-ripple"],hostVars:2,hostBindings:function(e,i){2&e&&me("mat-ripple-unbounded",i.unbounded)},inputs:{color:["matRippleColor","color"],unbounded:["matRippleUnbounded","unbounded"],centered:["matRippleCentered","centered"],radius:["matRippleRadius","radius"],animation:["matRippleAnimation","animation"],disabled:["matRippleDisabled","disabled"],trigger:["matRippleTrigger","trigger"]},exportAs:["matRipple"]}),n})(),Im=(()=>{class n{}return n.\u0275fac=function(e){return new(e||n)},n.\u0275mod=he({type:n}),n.\u0275inj=ce({imports:[Ne,Ne]}),n})(),rK=(()=>{class n{constructor(e){this._animationMode=e,this.state="unchecked",this.disabled=!1}}return n.\u0275fac=function(e){return new(e||n)(p(Kt,8))},n.\u0275cmp=ee({type:n,selectors:[["mat-pseudo-checkbox"]],hostAttrs:[1,"mat-pseudo-checkbox"],hostVars:8,hostBindings:function(e,i){2&e&&me("mat-pseudo-checkbox-indeterminate","indeterminate"===i.state)("mat-pseudo-checkbox-checked","checked"===i.state)("mat-pseudo-checkbox-disabled",i.disabled)("_mat-animation-noopable","NoopAnimations"===i._animationMode)},inputs:{state:"state",disabled:"disabled"},decls:0,vars:0,template:function(e,i){},styles:['.mat-pseudo-checkbox{border:2px solid;border-radius:2px;cursor:pointer;display:inline-block;vertical-align:middle;box-sizing:border-box;position:relative;flex-shrink:0;transition:border-color 90ms cubic-bezier(0, 0, 0.2, 0.1),background-color 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox::after{position:absolute;opacity:0;content:"";border-bottom:2px solid currentColor;transition:opacity 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox.mat-pseudo-checkbox-checked,.mat-pseudo-checkbox.mat-pseudo-checkbox-indeterminate{border-color:rgba(0,0,0,0)}.mat-pseudo-checkbox._mat-animation-noopable{transition:none !important;animation:none !important}.mat-pseudo-checkbox._mat-animation-noopable::after{transition:none}.mat-pseudo-checkbox-disabled{cursor:default}.mat-pseudo-checkbox-indeterminate::after{left:1px;opacity:1;border-radius:2px}.mat-pseudo-checkbox-checked::after{left:1px;border-left:2px solid currentColor;transform:rotate(-45deg);opacity:1;box-sizing:content-box}.mat-pseudo-checkbox{width:18px;height:18px}.mat-pseudo-checkbox-indeterminate::after{top:6px;width:12px}.mat-pseudo-checkbox-checked::after{top:2.7px;width:10px;height:4px}'],encapsulation:2,changeDetection:0}),n})(),oK=(()=>{class n{}return n.\u0275fac=function(e){return new(e||n)},n.\u0275mod=he({type:n}),n.\u0275inj=ce({imports:[Ne]}),n})();const Gx=new D("MAT_OPTION_PARENT_COMPONENT"),zx=new D("MatOptgroup");let sK=0;class aK{constructor(t,e=!1){this.source=t,this.isUserInput=e}}let lK=(()=>{class n{get multiple(){return this._parent&&this._parent.multiple}get selected(){return this._selected}get disabled(){return this.group&&this.group.disabled||this._disabled}set disabled(e){this._disabled=ue(e)}get disableRipple(){return!(!this._parent||!this._parent.disableRipple)}constructor(e,i,r,o){this._element=e,this._changeDetectorRef=i,this._parent=r,this.group=o,this._selected=!1,this._active=!1,this._disabled=!1,this._mostRecentViewValue="",this.id="mat-option-"+sK++,this.onSelectionChange=new O,this._stateChanges=new P}get active(){return this._active}get viewValue(){return(this._text?.nativeElement.textContent||"").trim()}select(){this._selected||(this._selected=!0,this._changeDetectorRef.markForCheck(),this._emitSelectionChangeEvent())}deselect(){this._selected&&(this._selected=!1,this._changeDetectorRef.markForCheck(),this._emitSelectionChangeEvent())}focus(e,i){const r=this._getHostElement();"function"==typeof r.focus&&r.focus(i)}setActiveStyles(){this._active||(this._active=!0,this._changeDetectorRef.markForCheck())}setInactiveStyles(){this._active&&(this._active=!1,this._changeDetectorRef.markForCheck())}getLabel(){return this.viewValue}_handleKeydown(e){(13===e.keyCode||32===e.keyCode)&&!Ht(e)&&(this._selectViaInteraction(),e.preventDefault())}_selectViaInteraction(){this.disabled||(this._selected=!this.multiple||!this._selected,this._changeDetectorRef.markForCheck(),this._emitSelectionChangeEvent(!0))}_getAriaSelected(){return this.selected||!this.multiple&&null}_getTabIndex(){return this.disabled?"-1":"0"}_getHostElement(){return this._element.nativeElement}ngAfterViewChecked(){if(this._selected){const e=this.viewValue;e!==this._mostRecentViewValue&&(this._mostRecentViewValue&&this._stateChanges.next(),this._mostRecentViewValue=e)}}ngOnDestroy(){this._stateChanges.complete()}_emitSelectionChangeEvent(e=!1){this.onSelectionChange.emit(new aK(this,e))}}return n.\u0275fac=function(e){Li()},n.\u0275dir=M({type:n,viewQuery:function(e,i){if(1&e&&je(qq,7),2&e){let r;oe(r=se())&&(i._text=r.first)}},inputs:{value:"value",id:"id",disabled:"disabled"},outputs:{onSelectionChange:"onSelectionChange"}}),n})(),Rm=(()=>{class n extends lK{constructor(e,i,r,o){super(e,i,r,o)}}return n.\u0275fac=function(e){return new(e||n)(p(z),p(Xe),p(Gx,8),p(zx,8))},n.\u0275cmp=ee({type:n,selectors:[["mat-option"]],hostAttrs:["role","option",1,"mat-mdc-option","mat-mdc-focus-indicator","mdc-list-item"],hostVars:12,hostBindings:function(e,i){1&e&&H("click",function(){return i._selectViaInteraction()})("keydown",function(o){return i._handleKeydown(o)}),2&e&&(Rr("id",i.id),pe("tabindex",i._getTabIndex())("aria-selected",i._getAriaSelected())("aria-disabled",i.disabled.toString()),me("mdc-list-item--selected",i.selected)("mat-mdc-option-multiple",i.multiple)("mat-mdc-option-active",i.active)("mdc-list-item--disabled",i.disabled))},exportAs:["matOption"],features:[K],ngContentSelectors:Jq,decls:7,vars:4,consts:[["class","mat-mdc-option-pseudo-checkbox",3,"state","disabled",4,"ngIf"],[1,"mdc-list-item__primary-text"],["text",""],["class","cdk-visually-hidden",4,"ngIf"],["mat-ripple","",1,"mat-mdc-option-ripple",3,"matRippleTrigger","matRippleDisabled"],[1,"mat-mdc-option-pseudo-checkbox",3,"state","disabled"],[1,"cdk-visually-hidden"]],template:function(e,i){1&e&&(Tt(Lq),J(0,Kq,1,2,"mat-pseudo-checkbox",0),Ie(1),b(2,"span",1,2),Ie(4,1),y(),J(5,Hq,2,1,"span",3),q(6,"div",4)),2&e&&(I("ngIf",i.multiple),w(5),I("ngIf",i.group&&i.group._inert),w(1),I("matRippleTrigger",i._getHostElement())("matRippleDisabled",i.disabled||i.disableRipple))},dependencies:[Ya,wi,rK],styles:['.mat-mdc-option{display:flex;position:relative;align-items:center;justify-content:flex-start;overflow:hidden;padding:0;padding-left:16px;padding-right:16px;-webkit-user-select:none;user-select:none;cursor:pointer;-webkit-tap-highlight-color:rgba(0,0,0,0);min-height:48px}.mat-mdc-option:focus{outline:none}[dir=rtl] .mat-mdc-option,.mat-mdc-option[dir=rtl]{padding-left:16px;padding-right:16px}.mat-mdc-option.mdc-list-item{align-items:center}.mat-mdc-option.mdc-list-item--disabled{opacity:.38;cursor:default}.mat-mdc-optgroup .mat-mdc-option:not(.mat-mdc-option-multiple){padding-left:32px}[dir=rtl] .mat-mdc-optgroup .mat-mdc-option:not(.mat-mdc-option-multiple){padding-left:16px;padding-right:32px}.mat-mdc-option .mat-icon,.mat-mdc-option .mat-pseudo-checkbox{margin-right:16px;flex-shrink:0}[dir=rtl] .mat-mdc-option .mat-icon,[dir=rtl] .mat-mdc-option .mat-pseudo-checkbox{margin-right:0;margin-left:16px}.mat-mdc-option .mat-mdc-option-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-mdc-option .mdc-list-item__primary-text{white-space:normal;font-size:inherit;font-weight:inherit;letter-spacing:inherit;line-height:inherit;font-family:inherit;text-decoration:inherit;text-transform:inherit}.cdk-high-contrast-active .mat-mdc-option.mdc-list-item--selected:not(.mat-mdc-option-multiple)::after{content:"";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}[dir=rtl] .cdk-high-contrast-active .mat-mdc-option.mdc-list-item--selected:not(.mat-mdc-option-multiple)::after{right:auto;left:16px}.mat-mdc-option-active::before{content:""}'],encapsulation:2,changeDetection:0}),n})(),Yx=(()=>{class n{}return n.\u0275fac=function(e){return new(e||n)},n.\u0275mod=he({type:n}),n.\u0275inj=ce({imports:[Im,Ei,Ne,oK]}),n})();function Xx(...n){const t=xb(n),{args:e,keys:i}=tk(n),r=new Me(o=>{const{length:s}=e;if(!s)return void o.complete();const a=new Array(s);let l=s,c=s;for(let d=0;d<s;d++){let u=!1;Vt(e[d]).subscribe(Ke(o,h=>{u||(u=!0,c--),a[d]=h},()=>l--,void 0,()=>{(!l||!u)&&(c||o.next(i?nk(i,a):a),o.complete())}))}});return t?r.pipe(qf(t)):r}class Tm{}class tr{constructor(t){this.normalizedNames=new Map,this.lazyUpdate=null,t?this.lazyInit="string"==typeof t?()=>{this.headers=new Map,t.split("\n").forEach(e=>{const i=e.indexOf(":");if(i>0){const r=e.slice(0,i),o=r.toLowerCase(),s=e.slice(i+1).trim();this.maybeSetNormalizedName(r,o),this.headers.has(o)?this.headers.get(o).push(s):this.headers.set(o,[s])}})}:()=>{this.headers=new Map,Object.keys(t).forEach(e=>{let i=t[e];const r=e.toLowerCase();"string"==typeof i&&(i=[i]),i.length>0&&(this.headers.set(r,i),this.maybeSetNormalizedName(e,r))})}:this.headers=new Map}has(t){return this.init(),this.headers.has(t.toLowerCase())}get(t){this.init();const e=this.headers.get(t.toLowerCase());return e&&e.length>0?e[0]:null}keys(){return this.init(),Array.from(this.normalizedNames.values())}getAll(t){return this.init(),this.headers.get(t.toLowerCase())||null}append(t,e){return this.clone({name:t,value:e,op:"a"})}set(t,e){return this.clone({name:t,value:e,op:"s"})}delete(t,e){return this.clone({name:t,value:e,op:"d"})}maybeSetNormalizedName(t,e){this.normalizedNames.has(e)||this.normalizedNames.set(e,t)}init(){this.lazyInit&&(this.lazyInit instanceof tr?this.copyFrom(this.lazyInit):this.lazyInit(),this.lazyInit=null,this.lazyUpdate&&(this.lazyUpdate.forEach(t=>this.applyUpdate(t)),this.lazyUpdate=null))}copyFrom(t){t.init(),Array.from(t.headers.keys()).forEach(e=>{this.headers.set(e,t.headers.get(e)),this.normalizedNames.set(e,t.normalizedNames.get(e))})}clone(t){const e=new tr;return e.lazyInit=this.lazyInit&&this.lazyInit instanceof tr?this.lazyInit:this,e.lazyUpdate=(this.lazyUpdate||[]).concat([t]),e}applyUpdate(t){const e=t.name.toLowerCase();switch(t.op){case"a":case"s":let i=t.value;if("string"==typeof i&&(i=[i]),0===i.length)return;this.maybeSetNormalizedName(t.name,e);const r=("a"===t.op?this.headers.get(e):void 0)||[];r.push(...i),this.headers.set(e,r);break;case"d":const o=t.value;if(o){let s=this.headers.get(e);if(!s)return;s=s.filter(a=>-1===o.indexOf(a)),0===s.length?(this.headers.delete(e),this.normalizedNames.delete(e)):this.headers.set(e,s)}else this.headers.delete(e),this.normalizedNames.delete(e)}}forEach(t){this.init(),Array.from(this.normalizedNames.keys()).forEach(e=>t(this.normalizedNames.get(e),this.headers.get(e)))}}class uK{encodeKey(t){return $x(t)}encodeValue(t){return $x(t)}decodeKey(t){return decodeURIComponent(t)}decodeValue(t){return decodeURIComponent(t)}}const pK=/%(\d[a-f0-9])/gi,fK={40:"@","3A":":",24:"$","2C":",","3B":";","3D":"=","3F":"?","2F":"/"};function $x(n){return encodeURIComponent(n).replace(pK,(t,e)=>fK[e]??t)}function Ld(n){return`${n}`}class nr{constructor(t={}){if(this.updates=null,this.cloneFrom=null,this.encoder=t.encoder||new uK,t.fromString){if(t.fromObject)throw new Error("Cannot specify both fromString and fromObject.");this.map=function hK(n,t){const e=new Map;return n.length>0&&n.replace(/^\?/,"").split("&").forEach(r=>{const o=r.indexOf("="),[s,a]=-1==o?[t.decodeKey(r),""]:[t.decodeKey(r.slice(0,o)),t.decodeValue(r.slice(o+1))],l=e.get(s)||[];l.push(a),e.set(s,l)}),e}(t.fromString,this.encoder)}else t.fromObject?(this.map=new Map,Object.keys(t.fromObject).forEach(e=>{const i=t.fromObject[e],r=Array.isArray(i)?i.map(Ld):[Ld(i)];this.map.set(e,r)})):this.map=null}has(t){return this.init(),this.map.has(t)}get(t){this.init();const e=this.map.get(t);return e?e[0]:null}getAll(t){return this.init(),this.map.get(t)||null}keys(){return this.init(),Array.from(this.map.keys())}append(t,e){return this.clone({param:t,value:e,op:"a"})}appendAll(t){const e=[];return Object.keys(t).forEach(i=>{const r=t[i];Array.isArray(r)?r.forEach(o=>{e.push({param:i,value:o,op:"a"})}):e.push({param:i,value:r,op:"a"})}),this.clone(e)}set(t,e){return this.clone({param:t,value:e,op:"s"})}delete(t,e){return this.clone({param:t,value:e,op:"d"})}toString(){return this.init(),this.keys().map(t=>{const e=this.encoder.encodeKey(t);return this.map.get(t).map(i=>e+"="+this.encoder.encodeValue(i)).join("&")}).filter(t=>""!==t).join("&")}clone(t){const e=new nr({encoder:this.encoder});return e.cloneFrom=this.cloneFrom||this,e.updates=(this.updates||[]).concat(t),e}init(){null===this.map&&(this.map=new Map),null!==this.cloneFrom&&(this.cloneFrom.init(),this.cloneFrom.keys().forEach(t=>this.map.set(t,this.cloneFrom.map.get(t))),this.updates.forEach(t=>{switch(t.op){case"a":case"s":const e=("a"===t.op?this.map.get(t.param):void 0)||[];e.push(Ld(t.value)),this.map.set(t.param,e);break;case"d":if(void 0===t.value){this.map.delete(t.param);break}{let i=this.map.get(t.param)||[];const r=i.indexOf(Ld(t.value));-1!==r&&i.splice(r,1),i.length>0?this.map.set(t.param,i):this.map.delete(t.param)}}}),this.cloneFrom=this.updates=null)}}class mK{constructor(){this.map=new Map}set(t,e){return this.map.set(t,e),this}get(t){return this.map.has(t)||this.map.set(t,t.defaultValue()),this.map.get(t)}delete(t){return this.map.delete(t),this}has(t){return this.map.has(t)}keys(){return this.map.keys()}}function eD(n){return typeof ArrayBuffer<"u"&&n instanceof ArrayBuffer}function tD(n){return typeof Blob<"u"&&n instanceof Blob}function nD(n){return typeof FormData<"u"&&n instanceof FormData}class Xa{constructor(t,e,i,r){let o;if(this.url=e,this.body=null,this.reportProgress=!1,this.withCredentials=!1,this.responseType="json",this.method=t.toUpperCase(),function gK(n){switch(n){case"DELETE":case"GET":case"HEAD":case"OPTIONS":case"JSONP":return!1;default:return!0}}(this.method)||r?(this.body=void 0!==i?i:null,o=r):o=i,o&&(this.reportProgress=!!o.reportProgress,this.withCredentials=!!o.withCredentials,o.responseType&&(this.responseType=o.responseType),o.headers&&(this.headers=o.headers),o.context&&(this.context=o.context),o.params&&(this.params=o.params)),this.headers||(this.headers=new tr),this.context||(this.context=new mK),this.params){const s=this.params.toString();if(0===s.length)this.urlWithParams=e;else{const a=e.indexOf("?");this.urlWithParams=e+(-1===a?"?":a<e.length-1?"&":"")+s}}else this.params=new nr,this.urlWithParams=e}serializeBody(){return null===this.body?null:eD(this.body)||tD(this.body)||nD(this.body)||function bK(n){return typeof URLSearchParams<"u"&&n instanceof URLSearchParams}(this.body)||"string"==typeof this.body?this.body:this.body instanceof nr?this.body.toString():"object"==typeof this.body||"boolean"==typeof this.body||Array.isArray(this.body)?JSON.stringify(this.body):this.body.toString()}detectContentTypeHeader(){return null===this.body||nD(this.body)?null:tD(this.body)?this.body.type||null:eD(this.body)?null:"string"==typeof this.body?"text/plain":this.body instanceof nr?"application/x-www-form-urlencoded;charset=UTF-8":"object"==typeof this.body||"number"==typeof this.body||"boolean"==typeof this.body?"application/json":null}clone(t={}){const e=t.method||this.method,i=t.url||this.url,r=t.responseType||this.responseType,o=void 0!==t.body?t.body:this.body,s=void 0!==t.withCredentials?t.withCredentials:this.withCredentials,a=void 0!==t.reportProgress?t.reportProgress:this.reportProgress;let l=t.headers||this.headers,c=t.params||this.params;const d=t.context??this.context;return void 0!==t.setHeaders&&(l=Object.keys(t.setHeaders).reduce((u,h)=>u.set(h,t.setHeaders[h]),l)),t.setParams&&(c=Object.keys(t.setParams).reduce((u,h)=>u.set(h,t.setParams[h]),c)),new Xa(e,i,o,{params:c,headers:l,context:d,reportProgress:a,responseType:r,withCredentials:s})}}var kt=(()=>((kt=kt||{})[kt.Sent=0]="Sent",kt[kt.UploadProgress=1]="UploadProgress",kt[kt.ResponseHeader=2]="ResponseHeader",kt[kt.DownloadProgress=3]="DownloadProgress",kt[kt.Response=4]="Response",kt[kt.User=5]="User",kt))();class yK{constructor(t,e=200,i="OK"){this.headers=t.headers||new tr,this.status=void 0!==t.status?t.status:e,this.statusText=t.statusText||i,this.url=t.url||null,this.ok=this.status>=200&&this.status<300}}class Mm extends yK{constructor(t={}){super(t),this.type=kt.Response,this.body=void 0!==t.body?t.body:null}clone(t={}){return new Mm({body:void 0!==t.body?t.body:this.body,headers:t.headers||this.headers,status:void 0!==t.status?t.status:this.status,statusText:t.statusText||this.statusText,url:t.url||this.url||void 0})}}function Om(n,t){return{body:t,headers:n.headers,context:n.context,observe:n.observe,params:n.params,reportProgress:n.reportProgress,responseType:n.responseType,withCredentials:n.withCredentials}}let Fm=(()=>{class n{constructor(e){this.handler=e}request(e,i,r={}){let o;if(e instanceof Xa)o=e;else{let l,c;l=r.headers instanceof tr?r.headers:new tr(r.headers),r.params&&(c=r.params instanceof nr?r.params:new nr({fromObject:r.params})),o=new Xa(e,i,void 0!==r.body?r.body:null,{headers:l,context:r.context,params:c,reportProgress:r.reportProgress,responseType:r.responseType||"json",withCredentials:r.withCredentials})}const s=N(o).pipe(zi(l=>this.handler.handle(l)));if(e instanceof Xa||"events"===r.observe)return s;const a=s.pipe(Re(l=>l instanceof Mm));switch(r.observe||"body"){case"body":switch(o.responseType){case"arraybuffer":return a.pipe(B(l=>{if(null!==l.body&&!(l.body instanceof ArrayBuffer))throw new Error("Response is not an ArrayBuffer.");return l.body}));case"blob":return a.pipe(B(l=>{if(null!==l.body&&!(l.body instanceof Blob))throw new Error("Response is not a Blob.");return l.body}));case"text":return a.pipe(B(l=>{if(null!==l.body&&"string"!=typeof l.body)throw new Error("Response is not a string.");return l.body}));default:return a.pipe(B(l=>l.body))}case"response":return a;default:throw new Error(`Unreachable: unhandled observe type ${r.observe}}`)}}delete(e,i={}){return this.request("DELETE",e,i)}get(e,i={}){return this.request("GET",e,i)}head(e,i={}){return this.request("HEAD",e,i)}jsonp(e,i){return this.request("JSONP",e,{params:(new nr).append(i,"JSONP_CALLBACK"),observe:"body",responseType:"json"})}options(e,i={}){return this.request("OPTIONS",e,i)}patch(e,i,r={}){return this.request("PATCH",e,Om(r,i))}post(e,i,r={}){return this.request("POST",e,Om(r,i))}put(e,i,r={}){return this.request("PUT",e,Om(r,i))}}return n.\u0275fac=function(e){return new(e||n)(v(Tm))},n.\u0275prov=R({token:n,factory:n.\u0275fac}),n})();const MK=["*"];let Wd;function Za(n){return function OK(){if(void 0===Wd&&(Wd=null,typeof window<"u")){const n=window;void 0!==n.trustedTypes&&(Wd=n.trustedTypes.createPolicy("angular#components",{createHTML:t=>t}))}return Wd}()?.createHTML(n)||n}function dD(n){return Error(`Unable to find icon with the name "${n}"`)}function uD(n){return Error(`The URL provided to MatIconRegistry was not trusted as a resource URL via Angular's DomSanitizer. Attempted URL was "${n}".`)}function hD(n){return Error(`The literal provided to MatIconRegistry was not trusted as safe HTML by Angular's DomSanitizer. Attempted literal was "${n}".`)}class Wr{constructor(t,e,i){this.url=t,this.svgText=e,this.options=i}}let Qd=(()=>{class n{constructor(e,i,r,o){this._httpClient=e,this._sanitizer=i,this._errorHandler=o,this._svgIconConfigs=new Map,this._iconSetConfigs=new Map,this._cachedIconsByUrl=new Map,this._inProgressUrlFetches=new Map,this._fontCssClassesByAlias=new Map,this._resolvers=[],this._defaultFontSetClass=["material-icons","mat-ligature-font"],this._document=r}addSvgIcon(e,i,r){return this.addSvgIconInNamespace("",e,i,r)}addSvgIconLiteral(e,i,r){return this.addSvgIconLiteralInNamespace("",e,i,r)}addSvgIconInNamespace(e,i,r,o){return this._addSvgIconConfig(e,i,new Wr(r,null,o))}addSvgIconResolver(e){return this._resolvers.push(e),this}addSvgIconLiteralInNamespace(e,i,r,o){const s=this._sanitizer.sanitize(Ee.HTML,r);if(!s)throw hD(r);const a=Za(s);return this._addSvgIconConfig(e,i,new Wr("",a,o))}addSvgIconSet(e,i){return this.addSvgIconSetInNamespace("",e,i)}addSvgIconSetLiteral(e,i){return this.addSvgIconSetLiteralInNamespace("",e,i)}addSvgIconSetInNamespace(e,i,r){return this._addSvgIconSetConfig(e,new Wr(i,null,r))}addSvgIconSetLiteralInNamespace(e,i,r){const o=this._sanitizer.sanitize(Ee.HTML,i);if(!o)throw hD(i);const s=Za(o);return this._addSvgIconSetConfig(e,new Wr("",s,r))}registerFontClassAlias(e,i=e){return this._fontCssClassesByAlias.set(e,i),this}classNameForFontAlias(e){return this._fontCssClassesByAlias.get(e)||e}setDefaultFontSetClass(...e){return this._defaultFontSetClass=e,this}getDefaultFontSetClass(){return this._defaultFontSetClass}getSvgIconFromUrl(e){const i=this._sanitizer.sanitize(Ee.RESOURCE_URL,e);if(!i)throw uD(e);const r=this._cachedIconsByUrl.get(i);return r?N(Gd(r)):this._loadSvgIconFromConfig(new Wr(e,null)).pipe(nt(o=>this._cachedIconsByUrl.set(i,o)),B(o=>Gd(o)))}getNamedSvgIcon(e,i=""){const r=pD(i,e);let o=this._svgIconConfigs.get(r);if(o)return this._getSvgFromConfig(o);if(o=this._getIconConfigFromResolvers(i,e),o)return this._svgIconConfigs.set(r,o),this._getSvgFromConfig(o);const s=this._iconSetConfigs.get(i);return s?this._getSvgFromIconSetConfigs(e,s):Pr(dD(r))}ngOnDestroy(){this._resolvers=[],this._svgIconConfigs.clear(),this._iconSetConfigs.clear(),this._cachedIconsByUrl.clear()}_getSvgFromConfig(e){return e.svgText?N(Gd(this._svgElementFromConfig(e))):this._loadSvgIconFromConfig(e).pipe(B(i=>Gd(i)))}_getSvgFromIconSetConfigs(e,i){const r=this._extractIconWithNameFromAnySet(e,i);return r?N(r):Xx(i.filter(s=>!s.svgText).map(s=>this._loadSvgIconSetFromConfig(s).pipe(Ii(a=>{const c=`Loading icon set URL: ${this._sanitizer.sanitize(Ee.RESOURCE_URL,s.url)} failed: ${a.message}`;return this._errorHandler.handleError(new Error(c)),N(null)})))).pipe(B(()=>{const s=this._extractIconWithNameFromAnySet(e,i);if(!s)throw dD(e);return s}))}_extractIconWithNameFromAnySet(e,i){for(let r=i.length-1;r>=0;r--){const o=i[r];if(o.svgText&&o.svgText.toString().indexOf(e)>-1){const s=this._svgElementFromConfig(o),a=this._extractSvgIconFromSet(s,e,o.options);if(a)return a}}return null}_loadSvgIconFromConfig(e){return this._fetchIcon(e).pipe(nt(i=>e.svgText=i),B(()=>this._svgElementFromConfig(e)))}_loadSvgIconSetFromConfig(e){return e.svgText?N(null):this._fetchIcon(e).pipe(nt(i=>e.svgText=i))}_extractSvgIconFromSet(e,i,r){const o=e.querySelector(`[id="${i}"]`);if(!o)return null;const s=o.cloneNode(!0);if(s.removeAttribute("id"),"svg"===s.nodeName.toLowerCase())return this._setSvgAttributes(s,r);if("symbol"===s.nodeName.toLowerCase())return this._setSvgAttributes(this._toSvgElement(s),r);const a=this._svgElementFromString(Za("<svg></svg>"));return a.appendChild(s),this._setSvgAttributes(a,r)}_svgElementFromString(e){const i=this._document.createElement("DIV");i.innerHTML=e;const r=i.querySelector("svg");if(!r)throw Error("<svg> tag not found");return r}_toSvgElement(e){const i=this._svgElementFromString(Za("<svg></svg>")),r=e.attributes;for(let o=0;o<r.length;o++){const{name:s,value:a}=r[o];"id"!==s&&i.setAttribute(s,a)}for(let o=0;o<e.childNodes.length;o++)e.childNodes[o].nodeType===this._document.ELEMENT_NODE&&i.appendChild(e.childNodes[o].cloneNode(!0));return i}_setSvgAttributes(e,i){return e.setAttribute("fit",""),e.setAttribute("height","100%"),e.setAttribute("width","100%"),e.setAttribute("preserveAspectRatio","xMidYMid meet"),e.setAttribute("focusable","false"),i&&i.viewBox&&e.setAttribute("viewBox",i.viewBox),e}_fetchIcon(e){const{url:i,options:r}=e,o=r?.withCredentials??!1;if(!this._httpClient)throw function FK(){return Error("Could not find HttpClient provider for use with Angular Material icons. Please include the HttpClientModule from @angular/common/http in your app imports.")}();if(null==i)throw Error(`Cannot fetch icon from URL "${i}".`);const s=this._sanitizer.sanitize(Ee.RESOURCE_URL,i);if(!s)throw uD(i);const a=this._inProgressUrlFetches.get(s);if(a)return a;const l=this._httpClient.get(s,{responseType:"text",withCredentials:o}).pipe(B(c=>Za(c)),pd(()=>this._inProgressUrlFetches.delete(s)),Ib());return this._inProgressUrlFetches.set(s,l),l}_addSvgIconConfig(e,i,r){return this._svgIconConfigs.set(pD(e,i),r),this}_addSvgIconSetConfig(e,i){const r=this._iconSetConfigs.get(e);return r?r.push(i):this._iconSetConfigs.set(e,[i]),this}_svgElementFromConfig(e){if(!e.svgElement){const i=this._svgElementFromString(e.svgText);this._setSvgAttributes(i,e.options),e.svgElement=i}return e.svgElement}_getIconConfigFromResolvers(e,i){for(let r=0;r<this._resolvers.length;r++){const o=this._resolvers[r](i,e);if(o)return UK(o)?new Wr(o.url,null,o.options):new Wr(o,null)}}}return n.\u0275fac=function(e){return new(e||n)(v(Fm,8),v(jf),v(Y,8),v(Ai))},n.\u0275prov=R({token:n,factory:n.\u0275fac,providedIn:"root"}),n})();function Gd(n){return n.cloneNode(!0)}function pD(n,t){return n+":"+t}function UK(n){return!(!n.url||!n.options)}const NK=Qa(class{constructor(n){this._elementRef=n}}),PK=new D("MAT_ICON_DEFAULT_OPTIONS"),_K=new D("mat-icon-location",{providedIn:"root",factory:function BK(){const n=ie(Y),t=n?n.location:null;return{getPathname:()=>t?t.pathname+t.search:""}}}),fD=["clip-path","color-profile","src","cursor","fill","filter","marker","marker-start","marker-mid","marker-end","mask","stroke"],jK=fD.map(n=>`[${n}]`).join(", "),qK=/^url\(['"]?#(.*?)['"]?\)$/;let hs=(()=>{class n extends NK{get inline(){return this._inline}set inline(e){this._inline=ue(e)}get svgIcon(){return this._svgIcon}set svgIcon(e){e!==this._svgIcon&&(e?this._updateSvgIcon(e):this._svgIcon&&this._clearSvgElement(),this._svgIcon=e)}get fontSet(){return this._fontSet}set fontSet(e){const i=this._cleanupFontValue(e);i!==this._fontSet&&(this._fontSet=i,this._updateFontIconClasses())}get fontIcon(){return this._fontIcon}set fontIcon(e){const i=this._cleanupFontValue(e);i!==this._fontIcon&&(this._fontIcon=i,this._updateFontIconClasses())}constructor(e,i,r,o,s,a){super(e),this._iconRegistry=i,this._location=o,this._errorHandler=s,this._inline=!1,this._previousFontSetClass=[],this._currentIconFetch=ke.EMPTY,a&&(a.color&&(this.color=this.defaultColor=a.color),a.fontSet&&(this.fontSet=a.fontSet)),r||e.nativeElement.setAttribute("aria-hidden","true")}_splitIconName(e){if(!e)return["",""];const i=e.split(":");switch(i.length){case 1:return["",i[0]];case 2:return i;default:throw Error(`Invalid icon name: "${e}"`)}}ngOnInit(){this._updateFontIconClasses()}ngAfterViewChecked(){const e=this._elementsWithExternalReferences;if(e&&e.size){const i=this._location.getPathname();i!==this._previousPath&&(this._previousPath=i,this._prependPathToReferences(i))}}ngOnDestroy(){this._currentIconFetch.unsubscribe(),this._elementsWithExternalReferences&&this._elementsWithExternalReferences.clear()}_usingFontIcon(){return!this.svgIcon}_setSvgElement(e){this._clearSvgElement();const i=this._location.getPathname();this._previousPath=i,this._cacheChildrenWithExternalReferences(e),this._prependPathToReferences(i),this._elementRef.nativeElement.appendChild(e)}_clearSvgElement(){const e=this._elementRef.nativeElement;let i=e.childNodes.length;for(this._elementsWithExternalReferences&&this._elementsWithExternalReferences.clear();i--;){const r=e.childNodes[i];(1!==r.nodeType||"svg"===r.nodeName.toLowerCase())&&r.remove()}}_updateFontIconClasses(){if(!this._usingFontIcon())return;const e=this._elementRef.nativeElement,i=(this.fontSet?this._iconRegistry.classNameForFontAlias(this.fontSet).split(/ +/):this._iconRegistry.getDefaultFontSetClass()).filter(r=>r.length>0);this._previousFontSetClass.forEach(r=>e.classList.remove(r)),i.forEach(r=>e.classList.add(r)),this._previousFontSetClass=i,this.fontIcon!==this._previousFontIconClass&&!i.includes("mat-ligature-font")&&(this._previousFontIconClass&&e.classList.remove(this._previousFontIconClass),this.fontIcon&&e.classList.add(this.fontIcon),this._previousFontIconClass=this.fontIcon)}_cleanupFontValue(e){return"string"==typeof e?e.trim().split(" ")[0]:e}_prependPathToReferences(e){const i=this._elementsWithExternalReferences;i&&i.forEach((r,o)=>{r.forEach(s=>{o.setAttribute(s.name,`url('${e}#${s.value}')`)})})}_cacheChildrenWithExternalReferences(e){const i=e.querySelectorAll(jK),r=this._elementsWithExternalReferences=this._elementsWithExternalReferences||new Map;for(let o=0;o<i.length;o++)fD.forEach(s=>{const a=i[o],l=a.getAttribute(s),c=l?l.match(qK):null;if(c){let d=r.get(a);d||(d=[],r.set(a,d)),d.push({name:s,value:c[1]})}})}_updateSvgIcon(e){if(this._svgNamespace=null,this._svgName=null,this._currentIconFetch.unsubscribe(),e){const[i,r]=this._splitIconName(e);i&&(this._svgNamespace=i),r&&(this._svgName=r),this._currentIconFetch=this._iconRegistry.getNamedSvgIcon(r,i).pipe(Ue(1)).subscribe(o=>this._setSvgElement(o),o=>{this._errorHandler.handleError(new Error(`Error retrieving icon ${i}:${r}! ${o.message}`))})}}}return n.\u0275fac=function(e){return new(e||n)(p(z),p(Qd),Hi("aria-hidden"),p(_K),p(Ai),p(PK,8))},n.\u0275cmp=ee({type:n,selectors:[["mat-icon"]],hostAttrs:["role","img",1,"mat-icon","notranslate"],hostVars:8,hostBindings:function(e,i){2&e&&(pe("data-mat-icon-type",i._usingFontIcon()?"font":"svg")("data-mat-icon-name",i._svgName||i.fontIcon)("data-mat-icon-namespace",i._svgNamespace||i.fontSet)("fontIcon",i._usingFontIcon()?i.fontIcon:null),me("mat-icon-inline",i.inline)("mat-icon-no-color","primary"!==i.color&&"accent"!==i.color&&"warn"!==i.color))},inputs:{color:"color",inline:"inline",svgIcon:"svgIcon",fontSet:"fontSet",fontIcon:"fontIcon"},exportAs:["matIcon"],features:[K],ngContentSelectors:MK,decls:1,vars:0,template:function(e,i){1&e&&(Tt(),Ie(0))},styles:[".mat-icon{-webkit-user-select:none;user-select:none;background-repeat:no-repeat;display:inline-block;fill:currentColor;height:24px;width:24px;overflow:hidden}.mat-icon.mat-icon-inline{font-size:inherit;height:inherit;line-height:inherit;width:inherit}.mat-icon.mat-ligature-font[fontIcon]::before{content:attr(fontIcon)}[dir=rtl] .mat-icon-rtl-mirror{transform:scale(-1, 1)}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon{display:block}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .mat-icon{margin:auto}"],encapsulation:2,changeDetection:0}),n})(),mD=(()=>{class n{}return n.\u0275fac=function(e){return new(e||n)},n.\u0275mod=he({type:n}),n.\u0275inj=ce({imports:[Ne,Ne]}),n})();const KK=["mat-button",""],HK=[[["",8,"material-icons",3,"iconPositionEnd",""],["mat-icon",3,"iconPositionEnd",""],["","matButtonIcon","",3,"iconPositionEnd",""]],"*",[["","iconPositionEnd","",8,"material-icons"],["mat-icon","iconPositionEnd",""],["","matButtonIcon","","iconPositionEnd",""]]],LK=[".material-icons:not([iconPositionEnd]), mat-icon:not([iconPositionEnd]), [matButtonIcon]:not([iconPositionEnd])","*",".material-icons[iconPositionEnd], mat-icon[iconPositionEnd], [matButtonIcon][iconPositionEnd]"],WK=["mat-icon-button",""],QK=["*"],GK=[{selector:"mat-button",mdcClasses:["mdc-button","mat-mdc-button"]},{selector:"mat-flat-button",mdcClasses:["mdc-button","mdc-button--unelevated","mat-mdc-unelevated-button"]},{selector:"mat-raised-button",mdcClasses:["mdc-button","mdc-button--raised","mat-mdc-raised-button"]},{selector:"mat-stroked-button",mdcClasses:["mdc-button","mdc-button--outlined","mat-mdc-outlined-button"]},{selector:"mat-fab",mdcClasses:["mdc-fab","mat-mdc-fab"]},{selector:"mat-mini-fab",mdcClasses:["mdc-fab","mdc-fab--mini","mat-mdc-mini-fab"]},{selector:"mat-icon-button",mdcClasses:["mdc-icon-button","mat-mdc-icon-button"]}],zK=Qa(Px(wm(class{constructor(n){this._elementRef=n}})));let gD=(()=>{class n extends zK{constructor(e,i,r,o){super(e),this._platform=i,this._ngZone=r,this._animationMode=o,this._focusMonitor=ie(er),this._isFab=!1;const s=e.nativeElement.classList;for(const a of GK)this._hasHostAttributes(a.selector)&&a.mdcClasses.forEach(l=>{s.add(l)})}ngAfterViewInit(){this._focusMonitor.monitor(this._elementRef,!0)}ngOnDestroy(){this._focusMonitor.stopMonitoring(this._elementRef)}focus(e="program",i){e?this._focusMonitor.focusVia(this._elementRef.nativeElement,e,i):this._elementRef.nativeElement.focus(i)}_hasHostAttributes(...e){return e.some(i=>this._elementRef.nativeElement.hasAttribute(i))}_isRippleDisabled(){return this.disableRipple||this.disabled}}return n.\u0275fac=function(e){Li()},n.\u0275dir=M({type:n,viewQuery:function(e,i){if(1&e&&je(Ya,5),2&e){let r;oe(r=se())&&(i.ripple=r.first)}},features:[K]}),n})(),Fi=(()=>{class n extends gD{constructor(e,i,r,o){super(e,i,r,o)}}return n.\u0275fac=function(e){return new(e||n)(p(z),p(Ze),p(j),p(Kt,8))},n.\u0275cmp=ee({type:n,selectors:[["button","mat-button",""],["button","mat-raised-button",""],["button","mat-flat-button",""],["button","mat-stroked-button",""]],hostVars:7,hostBindings:function(e,i){2&e&&(pe("disabled",i.disabled||null),me("_mat-animation-noopable","NoopAnimations"===i._animationMode)("mat-unthemed",!i.color)("mat-mdc-button-base",!0))},inputs:{disabled:"disabled",disableRipple:"disableRipple",color:"color"},exportAs:["matButton"],features:[K],attrs:KK,ngContentSelectors:LK,decls:8,vars:6,consts:[[1,"mat-mdc-button-persistent-ripple"],[1,"mdc-button__label"],[1,"mat-mdc-focus-indicator"],["matRipple","",1,"mat-mdc-button-ripple",3,"matRippleDisabled","matRippleTrigger"],[1,"mat-mdc-button-touch-target"]],template:function(e,i){1&e&&(Tt(HK),q(0,"span",0),Ie(1),b(2,"span",1),Ie(3,1),y(),Ie(4,2),q(5,"span",2)(6,"span",3)(7,"span",4)),2&e&&(me("mdc-button__ripple",!i._isFab)("mdc-fab__ripple",i._isFab),w(6),I("matRippleDisabled",i._isRippleDisabled())("matRippleTrigger",i._elementRef.nativeElement))},dependencies:[Ya],styles:['.mdc-touch-target-wrapper{display:inline}.mdc-elevation-overlay{position:absolute;border-radius:inherit;pointer-events:none;opacity:var(--mdc-elevation-overlay-opacity, 0);transition:opacity 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-button{position:relative;display:inline-flex;align-items:center;justify-content:center;box-sizing:border-box;min-width:64px;border:none;outline:none;line-height:inherit;user-select:none;-webkit-appearance:none;overflow:visible;vertical-align:middle;background:rgba(0,0,0,0)}.mdc-button .mdc-elevation-overlay{width:100%;height:100%;top:0;left:0}.mdc-button::-moz-focus-inner{padding:0;border:0}.mdc-button:active{outline:none}.mdc-button:hover{cursor:pointer}.mdc-button:disabled{cursor:default;pointer-events:none}.mdc-button[hidden]{display:none}.mdc-button .mdc-button__icon{margin-left:0;margin-right:8px;display:inline-block;position:relative;vertical-align:top}[dir=rtl] .mdc-button .mdc-button__icon,.mdc-button .mdc-button__icon[dir=rtl]{margin-left:8px;margin-right:0}.mdc-button .mdc-button__progress-indicator{font-size:0;position:absolute;transform:translate(-50%, -50%);top:50%;left:50%;line-height:initial}.mdc-button .mdc-button__label{position:relative}.mdc-button .mdc-button__focus-ring{pointer-events:none;border:2px solid rgba(0,0,0,0);border-radius:6px;box-sizing:content-box;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);height:calc(\n      100% + 4px\n    );width:calc(\n      100% + 4px\n    );display:none}@media screen and (forced-colors: active){.mdc-button .mdc-button__focus-ring{border-color:CanvasText}}.mdc-button .mdc-button__focus-ring::after{content:"";border:2px solid rgba(0,0,0,0);border-radius:8px;display:block;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);height:calc(100% + 4px);width:calc(100% + 4px)}@media screen and (forced-colors: active){.mdc-button .mdc-button__focus-ring::after{border-color:CanvasText}}@media screen and (forced-colors: active){.mdc-button.mdc-ripple-upgraded--background-focused .mdc-button__focus-ring,.mdc-button:not(.mdc-ripple-upgraded):focus .mdc-button__focus-ring{display:block}}.mdc-button .mdc-button__touch{position:absolute;top:50%;height:48px;left:0;right:0;transform:translateY(-50%)}.mdc-button__label+.mdc-button__icon{margin-left:8px;margin-right:0}[dir=rtl] .mdc-button__label+.mdc-button__icon,.mdc-button__label+.mdc-button__icon[dir=rtl]{margin-left:0;margin-right:8px}svg.mdc-button__icon{fill:currentColor}.mdc-button--touch{margin-top:6px;margin-bottom:6px}.mdc-button{padding:0 8px 0 8px}.mdc-button--unelevated{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);padding:0 16px 0 16px}.mdc-button--unelevated.mdc-button--icon-trailing{padding:0 12px 0 16px}.mdc-button--unelevated.mdc-button--icon-leading{padding:0 16px 0 12px}.mdc-button--raised{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);padding:0 16px 0 16px}.mdc-button--raised.mdc-button--icon-trailing{padding:0 12px 0 16px}.mdc-button--raised.mdc-button--icon-leading{padding:0 16px 0 12px}.mdc-button--outlined{border-style:solid;transition:border 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-button--outlined .mdc-button__ripple{border-style:solid;border-color:rgba(0,0,0,0)}.mat-mdc-button{height:var(--mdc-text-button-container-height, 36px);border-radius:var(--mdc-text-button-container-shape, var(--mdc-shape-small, 4px))}.mat-mdc-button:not(:disabled){color:var(--mdc-text-button-label-text-color, inherit)}.mat-mdc-button:disabled{color:var(--mdc-text-button-disabled-label-text-color, rgba(0, 0, 0, 0.38))}.mat-mdc-button .mdc-button__ripple{border-radius:var(--mdc-text-button-container-shape, var(--mdc-shape-small, 4px))}.mat-mdc-unelevated-button{height:var(--mdc-filled-button-container-height, 36px);border-radius:var(--mdc-filled-button-container-shape, var(--mdc-shape-small, 4px))}.mat-mdc-unelevated-button:not(:disabled){background-color:var(--mdc-filled-button-container-color, transparent)}.mat-mdc-unelevated-button:disabled{background-color:var(--mdc-filled-button-disabled-container-color, rgba(0, 0, 0, 0.12))}.mat-mdc-unelevated-button:not(:disabled){color:var(--mdc-filled-button-label-text-color, inherit)}.mat-mdc-unelevated-button:disabled{color:var(--mdc-filled-button-disabled-label-text-color, rgba(0, 0, 0, 0.38))}.mat-mdc-unelevated-button .mdc-button__ripple{border-radius:var(--mdc-filled-button-container-shape, var(--mdc-shape-small, 4px))}.mat-mdc-raised-button{height:var(--mdc-protected-button-container-height, 36px);border-radius:var(--mdc-protected-button-container-shape, var(--mdc-shape-small, 4px));box-shadow:var(--mdc-protected-button-container-elevation, 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12))}.mat-mdc-raised-button:not(:disabled){background-color:var(--mdc-protected-button-container-color, transparent)}.mat-mdc-raised-button:disabled{background-color:var(--mdc-protected-button-disabled-container-color, rgba(0, 0, 0, 0.12))}.mat-mdc-raised-button:not(:disabled){color:var(--mdc-protected-button-label-text-color, inherit)}.mat-mdc-raised-button:disabled{color:var(--mdc-protected-button-disabled-label-text-color, rgba(0, 0, 0, 0.38))}.mat-mdc-raised-button .mdc-button__ripple{border-radius:var(--mdc-protected-button-container-shape, var(--mdc-shape-small, 4px))}.mat-mdc-raised-button.mdc-ripple-upgraded--background-focused,.mat-mdc-raised-button:not(.mdc-ripple-upgraded):focus{box-shadow:var(--mdc-protected-button-focus-container-elevation, 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12))}.mat-mdc-raised-button:hover{box-shadow:var(--mdc-protected-button-hover-container-elevation, 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12))}.mat-mdc-raised-button:not(:disabled):active{box-shadow:var(--mdc-protected-button-pressed-container-elevation, 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12))}.mat-mdc-raised-button:disabled{box-shadow:var(--mdc-protected-button-disabled-container-elevation, 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12))}.mat-mdc-outlined-button{height:var(--mdc-outlined-button-container-height, 36px);border-radius:var(--mdc-outlined-button-container-shape, var(--mdc-shape-small, 4px));padding:0 15px 0 15px;border-width:var(--mdc-outlined-button-outline-width, 1px)}.mat-mdc-outlined-button:not(:disabled){color:var(--mdc-outlined-button-label-text-color, inherit)}.mat-mdc-outlined-button:disabled{color:var(--mdc-outlined-button-disabled-label-text-color, rgba(0, 0, 0, 0.38))}.mat-mdc-outlined-button .mdc-button__ripple{border-radius:var(--mdc-outlined-button-container-shape, var(--mdc-shape-small, 4px))}.mat-mdc-outlined-button:not(:disabled){border-color:var(--mdc-outlined-button-outline-color, rgba(0, 0, 0, 0.12))}.mat-mdc-outlined-button:disabled{border-color:var(--mdc-outlined-button-disabled-outline-color, rgba(0, 0, 0, 0.12))}.mat-mdc-outlined-button.mdc-button--icon-trailing{padding:0 11px 0 15px}.mat-mdc-outlined-button.mdc-button--icon-leading{padding:0 15px 0 11px}.mat-mdc-outlined-button .mdc-button__ripple{top:-1px;left:-1px;bottom:-1px;right:-1px;border-width:var(--mdc-outlined-button-outline-width, 1px)}.mat-mdc-outlined-button .mdc-button__touch{left:calc(-1 * var(--mdc-outlined-button-outline-width, 1px));width:calc(100% + 2 * var(--mdc-outlined-button-outline-width, 1px))}.mat-mdc-button,.mat-mdc-unelevated-button,.mat-mdc-raised-button,.mat-mdc-outlined-button{-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-button .mat-mdc-button-ripple,.mat-mdc-button .mat-mdc-button-persistent-ripple,.mat-mdc-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-unelevated-button .mat-mdc-button-ripple,.mat-mdc-unelevated-button .mat-mdc-button-persistent-ripple,.mat-mdc-unelevated-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-raised-button .mat-mdc-button-ripple,.mat-mdc-raised-button .mat-mdc-button-persistent-ripple,.mat-mdc-raised-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-outlined-button .mat-mdc-button-ripple,.mat-mdc-outlined-button .mat-mdc-button-persistent-ripple,.mat-mdc-outlined-button .mat-mdc-button-persistent-ripple::before{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-unelevated-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-raised-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-outlined-button .mat-mdc-button-persistent-ripple::before{content:"";opacity:0;background-color:var(--mat-mdc-button-persistent-ripple-color)}.mat-mdc-button .mat-ripple-element,.mat-mdc-unelevated-button .mat-ripple-element,.mat-mdc-raised-button .mat-ripple-element,.mat-mdc-outlined-button .mat-ripple-element{background-color:var(--mat-mdc-button-ripple-color)}.mat-mdc-button .mdc-button__label,.mat-mdc-unelevated-button .mdc-button__label,.mat-mdc-raised-button .mdc-button__label,.mat-mdc-outlined-button .mdc-button__label{z-index:1}.mat-mdc-button .mat-mdc-focus-indicator,.mat-mdc-unelevated-button .mat-mdc-focus-indicator,.mat-mdc-raised-button .mat-mdc-focus-indicator,.mat-mdc-outlined-button .mat-mdc-focus-indicator{top:0;left:0;right:0;bottom:0;position:absolute}.mat-mdc-button:focus .mat-mdc-focus-indicator::before,.mat-mdc-unelevated-button:focus .mat-mdc-focus-indicator::before,.mat-mdc-raised-button:focus .mat-mdc-focus-indicator::before,.mat-mdc-outlined-button:focus .mat-mdc-focus-indicator::before{content:""}.mat-mdc-button[disabled],.mat-mdc-unelevated-button[disabled],.mat-mdc-raised-button[disabled],.mat-mdc-outlined-button[disabled]{cursor:default;pointer-events:none}.mat-mdc-button .mat-mdc-button-touch-target,.mat-mdc-unelevated-button .mat-mdc-button-touch-target,.mat-mdc-raised-button .mat-mdc-button-touch-target,.mat-mdc-outlined-button .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;left:0;right:0;transform:translateY(-50%)}.mat-mdc-button._mat-animation-noopable,.mat-mdc-unelevated-button._mat-animation-noopable,.mat-mdc-raised-button._mat-animation-noopable,.mat-mdc-outlined-button._mat-animation-noopable{transition:none !important;animation:none !important}.mat-mdc-button>.mat-icon{margin-left:0;margin-right:8px;display:inline-block;position:relative;vertical-align:top;font-size:1.125rem;height:1.125rem;width:1.125rem}[dir=rtl] .mat-mdc-button>.mat-icon,.mat-mdc-button>.mat-icon[dir=rtl]{margin-left:8px;margin-right:0}.mat-mdc-button .mdc-button__label+.mat-icon{margin-left:8px;margin-right:0}[dir=rtl] .mat-mdc-button .mdc-button__label+.mat-icon,.mat-mdc-button .mdc-button__label+.mat-icon[dir=rtl]{margin-left:0;margin-right:8px}.mat-mdc-unelevated-button>.mat-icon,.mat-mdc-raised-button>.mat-icon,.mat-mdc-outlined-button>.mat-icon{margin-left:0;margin-right:8px;display:inline-block;position:relative;vertical-align:top;font-size:1.125rem;height:1.125rem;width:1.125rem;margin-left:-4px;margin-right:8px}[dir=rtl] .mat-mdc-unelevated-button>.mat-icon,[dir=rtl] .mat-mdc-raised-button>.mat-icon,[dir=rtl] .mat-mdc-outlined-button>.mat-icon,.mat-mdc-unelevated-button>.mat-icon[dir=rtl],.mat-mdc-raised-button>.mat-icon[dir=rtl],.mat-mdc-outlined-button>.mat-icon[dir=rtl]{margin-left:8px;margin-right:0}[dir=rtl] .mat-mdc-unelevated-button>.mat-icon,[dir=rtl] .mat-mdc-raised-button>.mat-icon,[dir=rtl] .mat-mdc-outlined-button>.mat-icon,.mat-mdc-unelevated-button>.mat-icon[dir=rtl],.mat-mdc-raised-button>.mat-icon[dir=rtl],.mat-mdc-outlined-button>.mat-icon[dir=rtl]{margin-left:8px;margin-right:-4px}.mat-mdc-unelevated-button .mdc-button__label+.mat-icon,.mat-mdc-raised-button .mdc-button__label+.mat-icon,.mat-mdc-outlined-button .mdc-button__label+.mat-icon{margin-left:8px;margin-right:-4px}[dir=rtl] .mat-mdc-unelevated-button .mdc-button__label+.mat-icon,[dir=rtl] .mat-mdc-raised-button .mdc-button__label+.mat-icon,[dir=rtl] .mat-mdc-outlined-button .mdc-button__label+.mat-icon,.mat-mdc-unelevated-button .mdc-button__label+.mat-icon[dir=rtl],.mat-mdc-raised-button .mdc-button__label+.mat-icon[dir=rtl],.mat-mdc-outlined-button .mdc-button__label+.mat-icon[dir=rtl]{margin-left:-4px;margin-right:8px}.mat-mdc-outlined-button .mat-mdc-button-ripple,.mat-mdc-outlined-button .mdc-button__ripple{top:-1px;left:-1px;bottom:-1px;right:-1px;border-width:-1px}.mat-mdc-unelevated-button .mat-mdc-focus-indicator::before,.mat-mdc-raised-button .mat-mdc-focus-indicator::before{margin:calc(calc(var(--mat-mdc-focus-indicator-border-width, 3px) + 2px) * -1)}.mat-mdc-outlined-button .mat-mdc-focus-indicator::before{margin:calc(calc(var(--mat-mdc-focus-indicator-border-width, 3px) + 3px) * -1)}',".cdk-high-contrast-active .mat-mdc-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-unelevated-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-raised-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-outlined-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-icon-button{outline:solid 1px}"],encapsulation:2,changeDetection:0}),n})(),Um=(()=>{class n extends gD{constructor(e,i,r,o){super(e,i,r,o)}}return n.\u0275fac=function(e){return new(e||n)(p(z),p(Ze),p(j),p(Kt,8))},n.\u0275cmp=ee({type:n,selectors:[["button","mat-icon-button",""]],hostVars:7,hostBindings:function(e,i){2&e&&(pe("disabled",i.disabled||null),me("_mat-animation-noopable","NoopAnimations"===i._animationMode)("mat-unthemed",!i.color)("mat-mdc-button-base",!0))},inputs:{disabled:"disabled",disableRipple:"disableRipple",color:"color"},exportAs:["matButton"],features:[K],attrs:WK,ngContentSelectors:QK,decls:5,vars:3,consts:[[1,"mat-mdc-button-persistent-ripple","mdc-icon-button__ripple"],[1,"mat-mdc-focus-indicator"],["matRipple","",1,"mat-mdc-button-ripple",3,"matRippleDisabled","matRippleCentered","matRippleTrigger"],[1,"mat-mdc-button-touch-target"]],template:function(e,i){1&e&&(Tt(),q(0,"span",0),Ie(1),q(2,"span",1)(3,"span",2)(4,"span",3)),2&e&&(w(3),I("matRippleDisabled",i._isRippleDisabled())("matRippleCentered",!0)("matRippleTrigger",i._elementRef.nativeElement))},dependencies:[Ya],styles:['.mdc-icon-button{font-size:24px;width:48px;height:48px;padding:12px}.mdc-icon-button .mdc-icon-button__focus-ring{max-height:48px;max-width:48px}.mdc-icon-button.mdc-icon-button--reduced-size .mdc-icon-button__ripple{width:40px;height:40px;margin-top:4px;margin-bottom:4px;margin-right:4px;margin-left:4px}.mdc-icon-button.mdc-icon-button--reduced-size .mdc-icon-button__focus-ring{max-height:40px;max-width:40px}.mdc-icon-button .mdc-icon-button__touch{position:absolute;top:50%;height:48px;left:50%;width:48px;transform:translate(-50%, -50%)}.mdc-icon-button svg,.mdc-icon-button img{width:24px;height:24px}.mdc-icon-button{display:inline-block;position:relative;box-sizing:border-box;border:none;outline:none;background-color:rgba(0,0,0,0);fill:currentColor;color:inherit;text-decoration:none;cursor:pointer;user-select:none;z-index:0;overflow:visible}.mdc-icon-button .mdc-icon-button__touch{position:absolute;top:50%;height:48px;left:50%;width:48px;transform:translate(-50%, -50%)}@media screen and (forced-colors: active){.mdc-icon-button.mdc-ripple-upgraded--background-focused .mdc-icon-button__focus-ring,.mdc-icon-button:not(.mdc-ripple-upgraded):focus .mdc-icon-button__focus-ring{display:block}}.mdc-icon-button:disabled{cursor:default;pointer-events:none}.mdc-icon-button[hidden]{display:none}.mdc-icon-button--display-flex{align-items:center;display:inline-flex;justify-content:center}.mdc-icon-button__focus-ring{pointer-events:none;border:2px solid rgba(0,0,0,0);border-radius:6px;box-sizing:content-box;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);height:100%;width:100%;display:none}@media screen and (forced-colors: active){.mdc-icon-button__focus-ring{border-color:CanvasText}}.mdc-icon-button__focus-ring::after{content:"";border:2px solid rgba(0,0,0,0);border-radius:8px;display:block;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);height:calc(100% + 4px);width:calc(100% + 4px)}@media screen and (forced-colors: active){.mdc-icon-button__focus-ring::after{border-color:CanvasText}}.mdc-icon-button__icon{display:inline-block}.mdc-icon-button__icon.mdc-icon-button__icon--on{display:none}.mdc-icon-button--on .mdc-icon-button__icon{display:none}.mdc-icon-button--on .mdc-icon-button__icon.mdc-icon-button__icon--on{display:inline-block}.mdc-icon-button__link{height:100%;left:0;outline:none;position:absolute;top:0;width:100%}.mat-mdc-icon-button{height:var(--mdc-icon-button-state-layer-size, 48px);width:var(--mdc-icon-button-state-layer-size, 48px);color:var(--mdc-icon-button-icon-color, inherit);border-radius:50%;flex-shrink:0;text-align:center;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-icon-button .mdc-button__icon{font-size:var(--mdc-icon-button-icon-size, 24px)}.mat-mdc-icon-button svg,.mat-mdc-icon-button img{width:var(--mdc-icon-button-icon-size, 24px);height:var(--mdc-icon-button-icon-size, 24px)}.mat-mdc-icon-button:disabled{opacity:var(--mdc-icon-button-disabled-icon-opacity, 0.38)}.mat-mdc-icon-button:disabled{color:var(--mdc-icon-button-disabled-icon-color, #000)}.mat-mdc-icon-button svg{vertical-align:baseline}.mat-mdc-icon-button[disabled]{cursor:default;pointer-events:none;opacity:1}.mat-mdc-icon-button .mat-mdc-button-ripple,.mat-mdc-icon-button .mat-mdc-button-persistent-ripple,.mat-mdc-icon-button .mat-mdc-button-persistent-ripple::before{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-icon-button .mat-mdc-button-persistent-ripple::before{content:"";opacity:0;background-color:var(--mat-mdc-button-persistent-ripple-color)}.mat-mdc-icon-button .mat-ripple-element{background-color:var(--mat-mdc-button-ripple-color)}.mat-mdc-icon-button .mdc-button__label{z-index:1}.mat-mdc-icon-button .mat-mdc-focus-indicator{top:0;left:0;right:0;bottom:0;position:absolute}.mat-mdc-icon-button:focus .mat-mdc-focus-indicator::before{content:""}.mat-mdc-icon-button .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;left:50%;width:48px;transform:translate(-50%, -50%)}.mat-mdc-icon-button._mat-animation-noopable{transition:none !important;animation:none !important}.mat-mdc-icon-button .mat-mdc-button-persistent-ripple{border-radius:50%}.mat-mdc-icon-button.mat-unthemed:not(.mdc-ripple-upgraded):focus::before,.mat-mdc-icon-button.mat-primary:not(.mdc-ripple-upgraded):focus::before,.mat-mdc-icon-button.mat-accent:not(.mdc-ripple-upgraded):focus::before,.mat-mdc-icon-button.mat-warn:not(.mdc-ripple-upgraded):focus::before{background:rgba(0,0,0,0);opacity:1}',".cdk-high-contrast-active .mat-mdc-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-unelevated-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-raised-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-outlined-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-icon-button{outline:solid 1px}"],encapsulation:2,changeDetection:0}),n})(),Nm=(()=>{class n{}return n.\u0275fac=function(e){return new(e||n)},n.\u0275mod=he({type:n}),n.\u0275inj=ce({imports:[Ne,Im,Ne]}),n})();const ZK=["addListener","removeListener"],$K=["addEventListener","removeEventListener"],e3=["on","off"];function Qr(n,t,e,i){if(ye(e)&&(i=e,e=void 0),i)return Qr(n,t,e).pipe(qf(i));const[r,o]=function i3(n){return ye(n.addEventListener)&&ye(n.removeEventListener)}(n)?$K.map(s=>a=>n[s](t,a,e)):function t3(n){return ye(n.addListener)&&ye(n.removeListener)}(n)?ZK.map(bD(n,t)):function n3(n){return ye(n.on)&&ye(n.off)}(n)?e3.map(bD(n,t)):[];if(!r&&Ku(n))return lt(s=>Qr(s,t,e))(Vt(n));if(!r)throw new TypeError("Invalid event target");return new Me(s=>{const a=(...l)=>s.next(1<l.length?l:l[0]);return r(a),()=>o(a)})}function bD(n,t){return e=>i=>n[e](t,i)}const $a={schedule(n){let t=requestAnimationFrame,e=cancelAnimationFrame;const{delegate:i}=$a;i&&(t=i.requestAnimationFrame,e=i.cancelAnimationFrame);const r=t(o=>{e=void 0,n(o)});return new ke(()=>e?.(r))},requestAnimationFrame(...n){const{delegate:t}=$a;return(t?.requestAnimationFrame||requestAnimationFrame)(...n)},cancelAnimationFrame(...n){const{delegate:t}=$a;return(t?.cancelAnimationFrame||cancelAnimationFrame)(...n)},delegate:void 0},s3=new class o3 extends Am{flush(t){this._active=!0;const e=this._scheduled;this._scheduled=void 0;const{actions:i}=this;let r;t=t||i.shift();do{if(r=t.execute(t.state,t.delay))break}while((t=i[0])&&t.id===e&&i.shift());if(this._active=!1,r){for(;(t=i[0])&&t.id===e&&i.shift();)t.unsubscribe();throw r}}}(class r3 extends vm{constructor(t,e){super(t,e),this.scheduler=t,this.work=e}requestAsyncId(t,e,i=0){return null!==i&&i>0?super.requestAsyncId(t,e,i):(t.actions.push(this),t._scheduled||(t._scheduled=$a.requestAnimationFrame(()=>t.flush(void 0))))}recycleAsyncId(t,e,i=0){var r;if(null!=i?i>0:this.delay>0)return super.recycleAsyncId(t,e,i);const{actions:o}=t;null!=e&&(null===(r=o[o.length-1])||void 0===r?void 0:r.id)!==e&&($a.cancelAnimationFrame(e),t._scheduled=void 0)}});let Pm,a3=1;const zd={};function yD(n){return n in zd&&(delete zd[n],!0)}const l3={setImmediate(n){const t=a3++;return zd[t]=!0,Pm||(Pm=Promise.resolve()),Pm.then(()=>yD(t)&&n()),t},clearImmediate(n){yD(n)}},{setImmediate:c3,clearImmediate:d3}=l3,Yd={setImmediate(...n){const{delegate:t}=Yd;return(t?.setImmediate||c3)(...n)},clearImmediate(n){const{delegate:t}=Yd;return(t?.clearImmediate||d3)(n)},delegate:void 0},p3=new class h3 extends Am{flush(t){this._active=!0;const e=this._scheduled;this._scheduled=void 0;const{actions:i}=this;let r;t=t||i.shift();do{if(r=t.execute(t.state,t.delay))break}while((t=i[0])&&t.id===e&&i.shift());if(this._active=!1,r){for(;(t=i[0])&&t.id===e&&i.shift();)t.unsubscribe();throw r}}}(class u3 extends vm{constructor(t,e){super(t,e),this.scheduler=t,this.work=e}requestAsyncId(t,e,i=0){return null!==i&&i>0?super.requestAsyncId(t,e,i):(t.actions.push(this),t._scheduled||(t._scheduled=Yd.setImmediate(t.flush.bind(t,void 0))))}recycleAsyncId(t,e,i=0){var r;if(null!=i?i>0:this.delay>0)return super.recycleAsyncId(t,e,i);const{actions:o}=t;null!=e&&(null===(r=o[o.length-1])||void 0===r?void 0:r.id)!==e&&(Yd.clearImmediate(e),t._scheduled=void 0)}});function vD(n=0,t,e=eq){let i=-1;return null!=t&&(kb(t)?e=t:i=t),new Me(r=>{let o=function m3(n){return n instanceof Date&&!isNaN(n)}(n)?+n-e.now():n;o<0&&(o=0);let s=0;return e.schedule(function(){r.closed||(r.next(s++),0<=i?this.schedule(void 0,i):r.complete())},o)})}function _m(n,t=_d){return function f3(n){return Le((t,e)=>{let i=!1,r=null,o=null,s=!1;const a=()=>{if(o?.unsubscribe(),o=null,i){i=!1;const c=r;r=null,e.next(c)}s&&e.complete()},l=()=>{o=null,s&&e.complete()};t.subscribe(Ke(e,c=>{i=!0,r=c,o||Vt(n(c)).subscribe(o=Ke(e,a,l))},()=>{s=!0,(!i||!o||o.closed)&&e.complete()}))})}(()=>vD(n,t))}const g3=["contentWrapper"],b3=["*"],y3=new D("VIRTUAL_SCROLL_STRATEGY");let ps=(()=>{class n{constructor(e,i,r){this._ngZone=e,this._platform=i,this._scrolled=new P,this._globalSubscription=null,this._scrolledCount=0,this.scrollContainers=new Map,this._document=r}register(e){this.scrollContainers.has(e)||this.scrollContainers.set(e,e.elementScrolled().subscribe(()=>this._scrolled.next(e)))}deregister(e){const i=this.scrollContainers.get(e);i&&(i.unsubscribe(),this.scrollContainers.delete(e))}scrolled(e=20){return this._platform.isBrowser?new Me(i=>{this._globalSubscription||this._addGlobalListener();const r=e>0?this._scrolled.pipe(_m(e)).subscribe(i):this._scrolled.subscribe(i);return this._scrolledCount++,()=>{r.unsubscribe(),this._scrolledCount--,this._scrolledCount||this._removeGlobalListener()}}):N()}ngOnDestroy(){this._removeGlobalListener(),this.scrollContainers.forEach((e,i)=>this.deregister(i)),this._scrolled.complete()}ancestorScrolled(e,i){const r=this.getAncestorScrollContainers(e);return this.scrolled(i).pipe(Re(o=>!o||r.indexOf(o)>-1))}getAncestorScrollContainers(e){const i=[];return this.scrollContainers.forEach((r,o)=>{this._scrollableContainsElement(o,e)&&i.push(o)}),i}_getWindow(){return this._document.defaultView||window}_scrollableContainsElement(e,i){let r=Oi(i),o=e.getElementRef().nativeElement;do{if(r==o)return!0}while(r=r.parentElement);return!1}_addGlobalListener(){this._globalSubscription=this._ngZone.runOutsideAngular(()=>Qr(this._getWindow().document,"scroll").subscribe(()=>this._scrolled.next()))}_removeGlobalListener(){this._globalSubscription&&(this._globalSubscription.unsubscribe(),this._globalSubscription=null)}}return n.\u0275fac=function(e){return new(e||n)(v(j),v(Ze),v(Y,8))},n.\u0275prov=R({token:n,factory:n.\u0275fac,providedIn:"root"}),n})(),el=(()=>{class n{constructor(e,i,r,o){this.elementRef=e,this.scrollDispatcher=i,this.ngZone=r,this.dir=o,this._destroyed=new P,this._elementScrolled=new Me(s=>this.ngZone.runOutsideAngular(()=>Qr(this.elementRef.nativeElement,"scroll").pipe(Te(this._destroyed)).subscribe(s)))}ngOnInit(){this.scrollDispatcher.register(this)}ngOnDestroy(){this.scrollDispatcher.deregister(this),this._destroyed.next(),this._destroyed.complete()}elementScrolled(){return this._elementScrolled}getElementRef(){return this.elementRef}scrollTo(e){const i=this.elementRef.nativeElement,r=this.dir&&"rtl"==this.dir.value;null==e.left&&(e.left=r?e.end:e.start),null==e.right&&(e.right=r?e.start:e.end),null!=e.bottom&&(e.top=i.scrollHeight-i.clientHeight-e.bottom),r&&0!=Ba()?(null!=e.left&&(e.right=i.scrollWidth-i.clientWidth-e.left),2==Ba()?e.left=e.right:1==Ba()&&(e.left=e.right?-e.right:e.right)):null!=e.right&&(e.left=i.scrollWidth-i.clientWidth-e.right),this._applyScrollToOptions(e)}_applyScrollToOptions(e){const i=this.elementRef.nativeElement;gx()?i.scrollTo(e):(null!=e.top&&(i.scrollTop=e.top),null!=e.left&&(i.scrollLeft=e.left))}measureScrollOffset(e){const i="left",r="right",o=this.elementRef.nativeElement;if("top"==e)return o.scrollTop;if("bottom"==e)return o.scrollHeight-o.clientHeight-o.scrollTop;const s=this.dir&&"rtl"==this.dir.value;return"start"==e?e=s?r:i:"end"==e&&(e=s?i:r),s&&2==Ba()?e==i?o.scrollWidth-o.clientWidth-o.scrollLeft:o.scrollLeft:s&&1==Ba()?e==i?o.scrollLeft+o.scrollWidth-o.clientWidth:-o.scrollLeft:e==i?o.scrollLeft:o.scrollWidth-o.clientWidth-o.scrollLeft}}return n.\u0275fac=function(e){return new(e||n)(p(z),p(ps),p(j),p(Lt,8))},n.\u0275dir=M({type:n,selectors:[["","cdk-scrollable",""],["","cdkScrollable",""]],standalone:!0}),n})(),tl=(()=>{class n{constructor(e,i,r){this._platform=e,this._change=new P,this._changeListener=o=>{this._change.next(o)},this._document=r,i.runOutsideAngular(()=>{if(e.isBrowser){const o=this._getWindow();o.addEventListener("resize",this._changeListener),o.addEventListener("orientationchange",this._changeListener)}this.change().subscribe(()=>this._viewportSize=null)})}ngOnDestroy(){if(this._platform.isBrowser){const e=this._getWindow();e.removeEventListener("resize",this._changeListener),e.removeEventListener("orientationchange",this._changeListener)}this._change.complete()}getViewportSize(){this._viewportSize||this._updateViewportSize();const e={width:this._viewportSize.width,height:this._viewportSize.height};return this._platform.isBrowser||(this._viewportSize=null),e}getViewportRect(){const e=this.getViewportScrollPosition(),{width:i,height:r}=this.getViewportSize();return{top:e.top,left:e.left,bottom:e.top+r,right:e.left+i,height:r,width:i}}getViewportScrollPosition(){if(!this._platform.isBrowser)return{top:0,left:0};const e=this._document,i=this._getWindow(),r=e.documentElement,o=r.getBoundingClientRect();return{top:-o.top||e.body.scrollTop||i.scrollY||r.scrollTop||0,left:-o.left||e.body.scrollLeft||i.scrollX||r.scrollLeft||0}}change(e=20){return e>0?this._change.pipe(_m(e)):this._change}_getWindow(){return this._document.defaultView||window}_updateViewportSize(){const e=this._getWindow();this._viewportSize=this._platform.isBrowser?{width:e.innerWidth,height:e.innerHeight}:{width:0,height:0}}}return n.\u0275fac=function(e){return new(e||n)(v(Ze),v(j),v(Y,8))},n.\u0275prov=R({token:n,factory:n.\u0275fac,providedIn:"root"}),n})();const AD=new D("VIRTUAL_SCROLLABLE");let S3=(()=>{class n extends el{constructor(e,i,r,o){super(e,i,r,o)}measureViewportSize(e){const i=this.elementRef.nativeElement;return"horizontal"===e?i.clientWidth:i.clientHeight}}return n.\u0275fac=function(e){return new(e||n)(p(z),p(ps),p(j),p(Lt,8))},n.\u0275dir=M({type:n,features:[K]}),n})();const k3=typeof requestAnimationFrame<"u"?s3:p3;let x3=(()=>{class n extends S3{get orientation(){return this._orientation}set orientation(e){this._orientation!==e&&(this._orientation=e,this._calculateSpacerSize())}get appendOnly(){return this._appendOnly}set appendOnly(e){this._appendOnly=ue(e)}constructor(e,i,r,o,s,a,l,c){super(e,a,r,s),this.elementRef=e,this._changeDetectorRef=i,this._scrollStrategy=o,this.scrollable=c,this._platform=ie(Ze),this._detachedSubject=new P,this._renderedRangeSubject=new P,this._orientation="vertical",this._appendOnly=!1,this.scrolledIndexChange=new Me(d=>this._scrollStrategy.scrolledIndexChange.subscribe(u=>Promise.resolve().then(()=>this.ngZone.run(()=>d.next(u))))),this.renderedRangeStream=this._renderedRangeSubject,this._totalContentSize=0,this._totalContentWidth="",this._totalContentHeight="",this._renderedRange={start:0,end:0},this._dataLength=0,this._viewportSize=0,this._renderedContentOffset=0,this._renderedContentOffsetNeedsRewrite=!1,this._isChangeDetectionPending=!1,this._runAfterChangeDetection=[],this._viewportChanges=ke.EMPTY,this._viewportChanges=l.change().subscribe(()=>{this.checkViewportSize()}),this.scrollable||(this.elementRef.nativeElement.classList.add("cdk-virtual-scrollable"),this.scrollable=this)}ngOnInit(){this._platform.isBrowser&&(this.scrollable===this&&super.ngOnInit(),this.ngZone.runOutsideAngular(()=>Promise.resolve().then(()=>{this._measureViewportSize(),this._scrollStrategy.attach(this),this.scrollable.elementScrolled().pipe(xn(null),_m(0,k3)).subscribe(()=>this._scrollStrategy.onContentScrolled()),this._markChangeDetectionNeeded()})))}ngOnDestroy(){this.detach(),this._scrollStrategy.detach(),this._renderedRangeSubject.complete(),this._detachedSubject.complete(),this._viewportChanges.unsubscribe(),super.ngOnDestroy()}attach(e){this.ngZone.runOutsideAngular(()=>{this._forOf=e,this._forOf.dataStream.pipe(Te(this._detachedSubject)).subscribe(i=>{const r=i.length;r!==this._dataLength&&(this._dataLength=r,this._scrollStrategy.onDataLengthChanged()),this._doChangeDetection()})})}detach(){this._forOf=null,this._detachedSubject.next()}getDataLength(){return this._dataLength}getViewportSize(){return this._viewportSize}getRenderedRange(){return this._renderedRange}measureBoundingClientRectWithScrollOffset(e){return this.getElementRef().nativeElement.getBoundingClientRect()[e]}setTotalContentSize(e){this._totalContentSize!==e&&(this._totalContentSize=e,this._calculateSpacerSize(),this._markChangeDetectionNeeded())}setRenderedRange(e){(function C3(n,t){return n.start==t.start&&n.end==t.end})(this._renderedRange,e)||(this.appendOnly&&(e={start:0,end:Math.max(this._renderedRange.end,e.end)}),this._renderedRangeSubject.next(this._renderedRange=e),this._markChangeDetectionNeeded(()=>this._scrollStrategy.onContentRendered()))}getOffsetToRenderedContentStart(){return this._renderedContentOffsetNeedsRewrite?null:this._renderedContentOffset}setRenderedContentOffset(e,i="to-start"){e=this.appendOnly&&"to-start"===i?0:e;const o="horizontal"==this.orientation,s=o?"X":"Y";let l=`translate${s}(${Number((o&&this.dir&&"rtl"==this.dir.value?-1:1)*e)}px)`;this._renderedContentOffset=e,"to-end"===i&&(l+=` translate${s}(-100%)`,this._renderedContentOffsetNeedsRewrite=!0),this._renderedContentTransform!=l&&(this._renderedContentTransform=l,this._markChangeDetectionNeeded(()=>{this._renderedContentOffsetNeedsRewrite?(this._renderedContentOffset-=this.measureRenderedContentSize(),this._renderedContentOffsetNeedsRewrite=!1,this.setRenderedContentOffset(this._renderedContentOffset)):this._scrollStrategy.onRenderedOffsetChanged()}))}scrollToOffset(e,i="auto"){const r={behavior:i};"horizontal"===this.orientation?r.start=e:r.top=e,this.scrollable.scrollTo(r)}scrollToIndex(e,i="auto"){this._scrollStrategy.scrollToIndex(e,i)}measureScrollOffset(e){let i;return i=this.scrollable==this?r=>super.measureScrollOffset(r):r=>this.scrollable.measureScrollOffset(r),Math.max(0,i(e??("horizontal"===this.orientation?"start":"top"))-this.measureViewportOffset())}measureViewportOffset(e){let i;const r="left",o="right",s="rtl"==this.dir?.value;i="start"==e?s?o:r:"end"==e?s?r:o:e||("horizontal"===this.orientation?"left":"top");const a=this.scrollable.measureBoundingClientRectWithScrollOffset(i);return this.elementRef.nativeElement.getBoundingClientRect()[i]-a}measureRenderedContentSize(){const e=this._contentWrapper.nativeElement;return"horizontal"===this.orientation?e.offsetWidth:e.offsetHeight}measureRangeSize(e){return this._forOf?this._forOf.measureRangeSize(e,this.orientation):0}checkViewportSize(){this._measureViewportSize(),this._scrollStrategy.onDataLengthChanged()}_measureViewportSize(){this._viewportSize=this.scrollable.measureViewportSize(this.orientation)}_markChangeDetectionNeeded(e){e&&this._runAfterChangeDetection.push(e),this._isChangeDetectionPending||(this._isChangeDetectionPending=!0,this.ngZone.runOutsideAngular(()=>Promise.resolve().then(()=>{this._doChangeDetection()})))}_doChangeDetection(){this._isChangeDetectionPending=!1,this._contentWrapper.nativeElement.style.transform=this._renderedContentTransform,this.ngZone.run(()=>this._changeDetectorRef.markForCheck());const e=this._runAfterChangeDetection;this._runAfterChangeDetection=[];for(const i of e)i()}_calculateSpacerSize(){this._totalContentHeight="horizontal"===this.orientation?"":`${this._totalContentSize}px`,this._totalContentWidth="horizontal"===this.orientation?`${this._totalContentSize}px`:""}}return n.\u0275fac=function(e){return new(e||n)(p(z),p(Xe),p(j),p(y3,8),p(Lt,8),p(ps),p(tl),p(AD,8))},n.\u0275cmp=ee({type:n,selectors:[["cdk-virtual-scroll-viewport"]],viewQuery:function(e,i){if(1&e&&je(g3,7),2&e){let r;oe(r=se())&&(i._contentWrapper=r.first)}},hostAttrs:[1,"cdk-virtual-scroll-viewport"],hostVars:4,hostBindings:function(e,i){2&e&&me("cdk-virtual-scroll-orientation-horizontal","horizontal"===i.orientation)("cdk-virtual-scroll-orientation-vertical","horizontal"!==i.orientation)},inputs:{orientation:"orientation",appendOnly:"appendOnly"},outputs:{scrolledIndexChange:"scrolledIndexChange"},standalone:!0,features:[ve([{provide:el,useFactory:(t,e)=>t||e,deps:[[new yn,new lc(AD)],n]}]),K,qp],ngContentSelectors:b3,decls:4,vars:4,consts:[[1,"cdk-virtual-scroll-content-wrapper"],["contentWrapper",""],[1,"cdk-virtual-scroll-spacer"]],template:function(e,i){1&e&&(Tt(),b(0,"div",0,1),Ie(2),y(),q(3,"div",2)),2&e&&(w(3),_n("width",i._totalContentWidth)("height",i._totalContentHeight))},styles:["cdk-virtual-scroll-viewport{display:block;position:relative;transform:translateZ(0)}.cdk-virtual-scrollable{overflow:auto;will-change:scroll-position;contain:strict;-webkit-overflow-scrolling:touch}.cdk-virtual-scroll-content-wrapper{position:absolute;top:0;left:0;contain:content}[dir=rtl] .cdk-virtual-scroll-content-wrapper{right:0;left:auto}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper{min-height:100%}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-left:0;padding-right:0;margin-left:0;margin-right:0;border-left-width:0;border-right-width:0;outline:none}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper{min-width:100%}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-top:0;padding-bottom:0;margin-top:0;margin-bottom:0;border-top-width:0;border-bottom-width:0;outline:none}.cdk-virtual-scroll-spacer{height:1px;transform-origin:0 0;flex:0 0 auto}[dir=rtl] .cdk-virtual-scroll-spacer{transform-origin:100% 0}"],encapsulation:2,changeDetection:0}),n})(),Gr=(()=>{class n{}return n.\u0275fac=function(e){return new(e||n)},n.\u0275mod=he({type:n}),n.\u0275inj=ce({}),n})(),SD=(()=>{class n{}return n.\u0275fac=function(e){return new(e||n)},n.\u0275mod=he({type:n}),n.\u0275inj=ce({imports:[Wa,Gr,x3,Wa,Gr]}),n})();class CD{}class D3{}const Vi="*";function ir(n,t){return{type:7,name:n,definitions:t,options:{}}}function cn(n,t=null){return{type:4,styles:t,timings:n}}function xD(n,t=null){return{type:2,steps:n,options:t}}function $e(n){return{type:6,styles:n,offset:null}}function si(n,t,e){return{type:0,name:n,styles:t,options:e}}function DD(n){return{type:5,steps:n}}function Zt(n,t,e=null){return{type:1,expr:n,animation:t,options:e}}function Bm(n=null){return{type:9,options:n}}function jm(n,t,e=null){return{type:11,selector:n,animation:t,options:e}}function wD(n){Promise.resolve().then(n)}class nl{constructor(t=0,e=0){this._onDoneFns=[],this._onStartFns=[],this._onDestroyFns=[],this._originalOnDoneFns=[],this._originalOnStartFns=[],this._started=!1,this._destroyed=!1,this._finished=!1,this._position=0,this.parentPlayer=null,this.totalTime=t+e}_onFinish(){this._finished||(this._finished=!0,this._onDoneFns.forEach(t=>t()),this._onDoneFns=[])}onStart(t){this._originalOnStartFns.push(t),this._onStartFns.push(t)}onDone(t){this._originalOnDoneFns.push(t),this._onDoneFns.push(t)}onDestroy(t){this._onDestroyFns.push(t)}hasStarted(){return this._started}init(){}play(){this.hasStarted()||(this._onStart(),this.triggerMicrotask()),this._started=!0}triggerMicrotask(){wD(()=>this._onFinish())}_onStart(){this._onStartFns.forEach(t=>t()),this._onStartFns=[]}pause(){}restart(){}finish(){this._onFinish()}destroy(){this._destroyed||(this._destroyed=!0,this.hasStarted()||this._onStart(),this.finish(),this._onDestroyFns.forEach(t=>t()),this._onDestroyFns=[])}reset(){this._started=!1,this._finished=!1,this._onStartFns=this._originalOnStartFns,this._onDoneFns=this._originalOnDoneFns}setPosition(t){this._position=this.totalTime?t*this.totalTime:1}getPosition(){return this.totalTime?this._position/this.totalTime:1}triggerCallback(t){const e="start"==t?this._onStartFns:this._onDoneFns;e.forEach(i=>i()),e.length=0}}class ED{constructor(t){this._onDoneFns=[],this._onStartFns=[],this._finished=!1,this._started=!1,this._destroyed=!1,this._onDestroyFns=[],this.parentPlayer=null,this.totalTime=0,this.players=t;let e=0,i=0,r=0;const o=this.players.length;0==o?wD(()=>this._onFinish()):this.players.forEach(s=>{s.onDone(()=>{++e==o&&this._onFinish()}),s.onDestroy(()=>{++i==o&&this._onDestroy()}),s.onStart(()=>{++r==o&&this._onStart()})}),this.totalTime=this.players.reduce((s,a)=>Math.max(s,a.totalTime),0)}_onFinish(){this._finished||(this._finished=!0,this._onDoneFns.forEach(t=>t()),this._onDoneFns=[])}init(){this.players.forEach(t=>t.init())}onStart(t){this._onStartFns.push(t)}_onStart(){this.hasStarted()||(this._started=!0,this._onStartFns.forEach(t=>t()),this._onStartFns=[])}onDone(t){this._onDoneFns.push(t)}onDestroy(t){this._onDestroyFns.push(t)}hasStarted(){return this._started}play(){this.parentPlayer||this.init(),this._onStart(),this.players.forEach(t=>t.play())}pause(){this.players.forEach(t=>t.pause())}restart(){this.players.forEach(t=>t.restart())}finish(){this._onFinish(),this.players.forEach(t=>t.finish())}destroy(){this._onDestroy()}_onDestroy(){this._destroyed||(this._destroyed=!0,this._onFinish(),this.players.forEach(t=>t.destroy()),this._onDestroyFns.forEach(t=>t()),this._onDestroyFns=[])}reset(){this.players.forEach(t=>t.reset()),this._destroyed=!1,this._finished=!1,this._started=!1}setPosition(t){const e=t*this.totalTime;this.players.forEach(i=>{const r=i.totalTime?Math.min(1,e/i.totalTime):1;i.setPosition(r)})}getPosition(){const t=this.players.reduce((e,i)=>null===e||i.totalTime>e.totalTime?i:e,null);return null!=t?t.getPosition():0}beforeDestroy(){this.players.forEach(t=>{t.beforeDestroy&&t.beforeDestroy()})}triggerCallback(t){const e="start"==t?this._onStartFns:this._onDoneFns;e.forEach(i=>i()),e.length=0}}const ID=["*"],w3=["content"];function E3(n,t){if(1&n){const e=Xn();b(0,"div",2),H("click",function(){return ct(e),dt(re()._onBackdropClicked())}),y()}2&n&&me("mat-drawer-shown",re()._isShowingBackdrop())}function I3(n,t){1&n&&(b(0,"mat-drawer-content"),Ie(1,2),y())}const R3=[[["mat-drawer"]],[["mat-drawer-content"]],"*"],T3=["mat-drawer","mat-drawer-content","*"],M3={transformDrawer:ir("transform",[si("open, open-instant",$e({transform:"none",visibility:"visible"})),si("void",$e({"box-shadow":"none",visibility:"hidden"})),Zt("void => open-instant",cn("0ms")),Zt("void <=> open, open-instant => void",cn("400ms cubic-bezier(0.25, 0.8, 0.25, 1)"))])},O3=new D("MAT_DRAWER_DEFAULT_AUTOSIZE",{providedIn:"root",factory:function F3(){return!1}}),RD=new D("MAT_DRAWER_CONTAINER");let Km=(()=>{class n extends el{constructor(e,i,r,o,s){super(r,o,s),this._changeDetectorRef=e,this._container=i}ngAfterContentInit(){this._container._contentMarginChanges.subscribe(()=>{this._changeDetectorRef.markForCheck()})}}return n.\u0275fac=function(e){return new(e||n)(p(Xe),p(De(()=>MD)),p(z),p(ps),p(j))},n.\u0275cmp=ee({type:n,selectors:[["mat-drawer-content"]],hostAttrs:[1,"mat-drawer-content"],hostVars:4,hostBindings:function(e,i){2&e&&_n("margin-left",i._container._contentMargins.left,"px")("margin-right",i._container._contentMargins.right,"px")},features:[ve([{provide:el,useExisting:n}]),K],ngContentSelectors:ID,decls:1,vars:0,template:function(e,i){1&e&&(Tt(),Ie(0))},encapsulation:2,changeDetection:0}),n})(),TD=(()=>{class n{get position(){return this._position}set position(e){(e="end"===e?"end":"start")!==this._position&&(this._isAttached&&this._updatePositionInParent(e),this._position=e,this.onPositionChanged.emit())}get mode(){return this._mode}set mode(e){this._mode=e,this._updateFocusTrapState(),this._modeChanged.next()}get disableClose(){return this._disableClose}set disableClose(e){this._disableClose=ue(e)}get autoFocus(){return this._autoFocus??("side"===this.mode?"dialog":"first-tabbable")}set autoFocus(e){("true"===e||"false"===e||null==e)&&(e=ue(e)),this._autoFocus=e}get opened(){return this._opened}set opened(e){this.toggle(ue(e))}constructor(e,i,r,o,s,a,l,c){this._elementRef=e,this._focusTrapFactory=i,this._focusMonitor=r,this._platform=o,this._ngZone=s,this._interactivityChecker=a,this._doc=l,this._container=c,this._elementFocusedBeforeDrawerWasOpened=null,this._enableAnimations=!1,this._position="start",this._mode="over",this._disableClose=!1,this._opened=!1,this._animationStarted=new P,this._animationEnd=new P,this._animationState="void",this.openedChange=new O(!0),this._openedStream=this.openedChange.pipe(Re(d=>d),B(()=>{})),this.openedStart=this._animationStarted.pipe(Re(d=>d.fromState!==d.toState&&0===d.toState.indexOf("open")),hd(void 0)),this._closedStream=this.openedChange.pipe(Re(d=>!d),B(()=>{})),this.closedStart=this._animationStarted.pipe(Re(d=>d.fromState!==d.toState&&"void"===d.toState),hd(void 0)),this._destroyed=new P,this.onPositionChanged=new O,this._modeChanged=new P,this.openedChange.subscribe(d=>{d?(this._doc&&(this._elementFocusedBeforeDrawerWasOpened=this._doc.activeElement),this._takeFocus()):this._isFocusWithinDrawer()&&this._restoreFocus(this._openedVia||"program")}),this._ngZone.runOutsideAngular(()=>{Qr(this._elementRef.nativeElement,"keydown").pipe(Re(d=>27===d.keyCode&&!this.disableClose&&!Ht(d)),Te(this._destroyed)).subscribe(d=>this._ngZone.run(()=>{this.close(),d.stopPropagation(),d.preventDefault()}))}),this._animationEnd.pipe(Sm((d,u)=>d.fromState===u.fromState&&d.toState===u.toState)).subscribe(d=>{const{fromState:u,toState:h}=d;(0===h.indexOf("open")&&"void"===u||"void"===h&&0===u.indexOf("open"))&&this.openedChange.emit(this._opened)})}_forceFocus(e,i){this._interactivityChecker.isFocusable(e)||(e.tabIndex=-1,this._ngZone.runOutsideAngular(()=>{const r=()=>{e.removeEventListener("blur",r),e.removeEventListener("mousedown",r),e.removeAttribute("tabindex")};e.addEventListener("blur",r),e.addEventListener("mousedown",r)})),e.focus(i)}_focusByCssSelector(e,i){let r=this._elementRef.nativeElement.querySelector(e);r&&this._forceFocus(r,i)}_takeFocus(){if(!this._focusTrap)return;const e=this._elementRef.nativeElement;switch(this.autoFocus){case!1:case"dialog":return;case!0:case"first-tabbable":this._focusTrap.focusInitialElementWhenReady().then(i=>{!i&&"function"==typeof this._elementRef.nativeElement.focus&&e.focus()});break;case"first-heading":this._focusByCssSelector('h1, h2, h3, h4, h5, h6, [role="heading"]');break;default:this._focusByCssSelector(this.autoFocus)}}_restoreFocus(e){"dialog"!==this.autoFocus&&(this._elementFocusedBeforeDrawerWasOpened?this._focusMonitor.focusVia(this._elementFocusedBeforeDrawerWasOpened,e):this._elementRef.nativeElement.blur(),this._elementFocusedBeforeDrawerWasOpened=null)}_isFocusWithinDrawer(){const e=this._doc.activeElement;return!!e&&this._elementRef.nativeElement.contains(e)}ngAfterViewInit(){this._isAttached=!0,this._focusTrap=this._focusTrapFactory.create(this._elementRef.nativeElement),this._updateFocusTrapState(),"end"===this._position&&this._updatePositionInParent("end")}ngAfterContentChecked(){this._platform.isBrowser&&(this._enableAnimations=!0)}ngOnDestroy(){this._focusTrap&&this._focusTrap.destroy(),this._anchor?.remove(),this._anchor=null,this._animationStarted.complete(),this._animationEnd.complete(),this._modeChanged.complete(),this._destroyed.next(),this._destroyed.complete()}open(e){return this.toggle(!0,e)}close(){return this.toggle(!1)}_closeViaBackdropClick(){return this._setOpen(!1,!0,"mouse")}toggle(e=!this.opened,i){e&&i&&(this._openedVia=i);const r=this._setOpen(e,!e&&this._isFocusWithinDrawer(),this._openedVia||"program");return e||(this._openedVia=null),r}_setOpen(e,i,r){return this._opened=e,e?this._animationState=this._enableAnimations?"open":"open-instant":(this._animationState="void",i&&this._restoreFocus(r)),this._updateFocusTrapState(),new Promise(o=>{this.openedChange.pipe(Ue(1)).subscribe(s=>o(s?"open":"close"))})}_getWidth(){return this._elementRef.nativeElement&&this._elementRef.nativeElement.offsetWidth||0}_updateFocusTrapState(){this._focusTrap&&(this._focusTrap.enabled=this.opened&&"side"!==this.mode)}_updatePositionInParent(e){const i=this._elementRef.nativeElement,r=i.parentNode;"end"===e?(this._anchor||(this._anchor=this._doc.createComment("mat-drawer-anchor"),r.insertBefore(this._anchor,i)),r.appendChild(i)):this._anchor&&this._anchor.parentNode.insertBefore(i,this._anchor)}}return n.\u0275fac=function(e){return new(e||n)(p(z),p(Ja),p(er),p(Ze),p(j),p(La),p(Y,8),p(RD,8))},n.\u0275cmp=ee({type:n,selectors:[["mat-drawer"]],viewQuery:function(e,i){if(1&e&&je(w3,5),2&e){let r;oe(r=se())&&(i._content=r.first)}},hostAttrs:["tabIndex","-1",1,"mat-drawer"],hostVars:12,hostBindings:function(e,i){1&e&&Tc("@transform.start",function(o){return i._animationStarted.next(o)})("@transform.done",function(o){return i._animationEnd.next(o)}),2&e&&(pe("align",null),Fc("@transform",i._animationState),me("mat-drawer-end","end"===i.position)("mat-drawer-over","over"===i.mode)("mat-drawer-push","push"===i.mode)("mat-drawer-side","side"===i.mode)("mat-drawer-opened",i.opened))},inputs:{position:"position",mode:"mode",disableClose:"disableClose",autoFocus:"autoFocus",opened:"opened"},outputs:{openedChange:"openedChange",_openedStream:"opened",openedStart:"openedStart",_closedStream:"closed",closedStart:"closedStart",onPositionChanged:"positionChanged"},exportAs:["matDrawer"],ngContentSelectors:ID,decls:3,vars:0,consts:[["cdkScrollable","",1,"mat-drawer-inner-container"],["content",""]],template:function(e,i){1&e&&(Tt(),b(0,"div",0,1),Ie(2),y())},dependencies:[el],encapsulation:2,data:{animation:[M3.transformDrawer]},changeDetection:0}),n})(),MD=(()=>{class n{get start(){return this._start}get end(){return this._end}get autosize(){return this._autosize}set autosize(e){this._autosize=ue(e)}get hasBackdrop(){return null==this._backdropOverride?!this._start||"side"!==this._start.mode||!this._end||"side"!==this._end.mode:this._backdropOverride}set hasBackdrop(e){this._backdropOverride=null==e?null:ue(e)}get scrollable(){return this._userContent||this._content}constructor(e,i,r,o,s,a=!1,l){this._dir=e,this._element=i,this._ngZone=r,this._changeDetectorRef=o,this._animationMode=l,this._drawers=new qo,this.backdropClick=new O,this._destroyed=new P,this._doCheckSubject=new P,this._contentMargins={left:null,right:null},this._contentMarginChanges=new P,e&&e.change.pipe(Te(this._destroyed)).subscribe(()=>{this._validateDrawers(),this.updateContentMargins()}),s.change().pipe(Te(this._destroyed)).subscribe(()=>this.updateContentMargins()),this._autosize=a}ngAfterContentInit(){this._allDrawers.changes.pipe(xn(this._allDrawers),Te(this._destroyed)).subscribe(e=>{this._drawers.reset(e.filter(i=>!i._container||i._container===this)),this._drawers.notifyOnChanges()}),this._drawers.changes.pipe(xn(null)).subscribe(()=>{this._validateDrawers(),this._drawers.forEach(e=>{this._watchDrawerToggle(e),this._watchDrawerPosition(e),this._watchDrawerMode(e)}),(!this._drawers.length||this._isDrawerOpen(this._start)||this._isDrawerOpen(this._end))&&this.updateContentMargins(),this._changeDetectorRef.markForCheck()}),this._ngZone.runOutsideAngular(()=>{this._doCheckSubject.pipe(Bd(10),Te(this._destroyed)).subscribe(()=>this.updateContentMargins())})}ngOnDestroy(){this._contentMarginChanges.complete(),this._doCheckSubject.complete(),this._drawers.destroy(),this._destroyed.next(),this._destroyed.complete()}open(){this._drawers.forEach(e=>e.open())}close(){this._drawers.forEach(e=>e.close())}updateContentMargins(){let e=0,i=0;if(this._left&&this._left.opened)if("side"==this._left.mode)e+=this._left._getWidth();else if("push"==this._left.mode){const r=this._left._getWidth();e+=r,i-=r}if(this._right&&this._right.opened)if("side"==this._right.mode)i+=this._right._getWidth();else if("push"==this._right.mode){const r=this._right._getWidth();i+=r,e-=r}e=e||null,i=i||null,(e!==this._contentMargins.left||i!==this._contentMargins.right)&&(this._contentMargins={left:e,right:i},this._ngZone.run(()=>this._contentMarginChanges.next(this._contentMargins)))}ngDoCheck(){this._autosize&&this._isPushed()&&this._ngZone.runOutsideAngular(()=>this._doCheckSubject.next())}_watchDrawerToggle(e){e._animationStarted.pipe(Re(i=>i.fromState!==i.toState),Te(this._drawers.changes)).subscribe(i=>{"open-instant"!==i.toState&&"NoopAnimations"!==this._animationMode&&this._element.nativeElement.classList.add("mat-drawer-transition"),this.updateContentMargins(),this._changeDetectorRef.markForCheck()}),"side"!==e.mode&&e.openedChange.pipe(Te(this._drawers.changes)).subscribe(()=>this._setContainerClass(e.opened))}_watchDrawerPosition(e){e&&e.onPositionChanged.pipe(Te(this._drawers.changes)).subscribe(()=>{this._ngZone.onMicrotaskEmpty.pipe(Ue(1)).subscribe(()=>{this._validateDrawers()})})}_watchDrawerMode(e){e&&e._modeChanged.pipe(Te($t(this._drawers.changes,this._destroyed))).subscribe(()=>{this.updateContentMargins(),this._changeDetectorRef.markForCheck()})}_setContainerClass(e){const i=this._element.nativeElement.classList,r="mat-drawer-container-has-open";e?i.add(r):i.remove(r)}_validateDrawers(){this._start=this._end=null,this._drawers.forEach(e=>{"end"==e.position?this._end=e:this._start=e}),this._right=this._left=null,this._dir&&"rtl"===this._dir.value?(this._left=this._end,this._right=this._start):(this._left=this._start,this._right=this._end)}_isPushed(){return this._isDrawerOpen(this._start)&&"over"!=this._start.mode||this._isDrawerOpen(this._end)&&"over"!=this._end.mode}_onBackdropClicked(){this.backdropClick.emit(),this._closeModalDrawersViaBackdrop()}_closeModalDrawersViaBackdrop(){[this._start,this._end].filter(e=>e&&!e.disableClose&&this._canHaveBackdrop(e)).forEach(e=>e._closeViaBackdropClick())}_isShowingBackdrop(){return this._isDrawerOpen(this._start)&&this._canHaveBackdrop(this._start)||this._isDrawerOpen(this._end)&&this._canHaveBackdrop(this._end)}_canHaveBackdrop(e){return"side"!==e.mode||!!this._backdropOverride}_isDrawerOpen(e){return null!=e&&e.opened}}return n.\u0275fac=function(e){return new(e||n)(p(Lt,8),p(z),p(j),p(Xe),p(tl),p(O3),p(Kt,8))},n.\u0275cmp=ee({type:n,selectors:[["mat-drawer-container"]],contentQueries:function(e,i,r){if(1&e&&(At(r,Km,5),At(r,TD,5)),2&e){let o;oe(o=se())&&(i._content=o.first),oe(o=se())&&(i._allDrawers=o)}},viewQuery:function(e,i){if(1&e&&je(Km,5),2&e){let r;oe(r=se())&&(i._userContent=r.first)}},hostAttrs:[1,"mat-drawer-container"],hostVars:2,hostBindings:function(e,i){2&e&&me("mat-drawer-container-explicit-backdrop",i._backdropOverride)},inputs:{autosize:"autosize",hasBackdrop:"hasBackdrop"},outputs:{backdropClick:"backdropClick"},exportAs:["matDrawerContainer"],features:[ve([{provide:RD,useExisting:n}])],ngContentSelectors:T3,decls:4,vars:2,consts:[["class","mat-drawer-backdrop",3,"mat-drawer-shown","click",4,"ngIf"],[4,"ngIf"],[1,"mat-drawer-backdrop",3,"click"]],template:function(e,i){1&e&&(Tt(R3),J(0,E3,1,2,"div",0),Ie(1),Ie(2,1),J(3,I3,2,0,"mat-drawer-content",1)),2&e&&(I("ngIf",i.hasBackdrop),w(3),I("ngIf",!i._content))},dependencies:[wi,Km],styles:['.mat-drawer-container{position:relative;z-index:1;box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}.cdk-high-contrast-active .mat-drawer-backdrop{opacity:.5}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}.cdk-high-contrast-active .mat-drawer,.cdk-high-contrast-active [dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}.cdk-high-contrast-active [dir=rtl] .mat-drawer,.cdk-high-contrast-active .mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer{transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer[style*="visibility: hidden"]{display:none}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}'],encapsulation:2,changeDetection:0}),n})(),OD=(()=>{class n{}return n.\u0275fac=function(e){return new(e||n)},n.\u0275mod=he({type:n}),n.\u0275inj=ce({imports:[Ei,Ne,Gr,Gr,Ne]}),n})();const V3=["*",[["mat-toolbar-row"]]],U3=["*","mat-toolbar-row"],N3=Qa(class{constructor(n){this._elementRef=n}});let P3=(()=>{class n{}return n.\u0275fac=function(e){return new(e||n)},n.\u0275dir=M({type:n,selectors:[["mat-toolbar-row"]],hostAttrs:[1,"mat-toolbar-row"],exportAs:["matToolbarRow"]}),n})(),_3=(()=>{class n extends N3{constructor(e,i,r){super(e),this._platform=i,this._document=r}ngAfterViewInit(){this._platform.isBrowser&&(this._checkToolbarMixedModes(),this._toolbarRows.changes.subscribe(()=>this._checkToolbarMixedModes()))}_checkToolbarMixedModes(){}}return n.\u0275fac=function(e){return new(e||n)(p(z),p(Ze),p(Y))},n.\u0275cmp=ee({type:n,selectors:[["mat-toolbar"]],contentQueries:function(e,i,r){if(1&e&&At(r,P3,5),2&e){let o;oe(o=se())&&(i._toolbarRows=o)}},hostAttrs:[1,"mat-toolbar"],hostVars:4,hostBindings:function(e,i){2&e&&me("mat-toolbar-multiple-rows",i._toolbarRows.length>0)("mat-toolbar-single-row",0===i._toolbarRows.length)},inputs:{color:"color"},exportAs:["matToolbar"],features:[K],ngContentSelectors:U3,decls:2,vars:0,template:function(e,i){1&e&&(Tt(V3),Ie(0),Ie(1,1))},styles:[".cdk-high-contrast-active .mat-toolbar{outline:solid 1px}.mat-toolbar .mat-mdc-button-base.mat-unthemed{--mdc-text-button-label-text-color: inherit;--mdc-outlined-button-label-text-color: inherit}.mat-toolbar-row,.mat-toolbar-single-row{display:flex;box-sizing:border-box;padding:0 16px;width:100%;flex-direction:row;align-items:center;white-space:nowrap}.mat-toolbar-multiple-rows{display:flex;box-sizing:border-box;flex-direction:column;width:100%}"],encapsulation:2,changeDetection:0}),n})(),FD=(()=>{class n{}return n.\u0275fac=function(e){return new(e||n)},n.\u0275mod=he({type:n}),n.\u0275inj=ce({imports:[Ne,Ne]}),n})();class il{constructor(t,e){this.router=t,this.processesService=e,this.showFiller=!1,this.labelPath="Miembros"}ngOnInit(){this.setPatLabelSubscription=this.processesService.setPathVar.subscribe(t=>{this.labelPath=t})}navigate(t){document.getElementById("btnMenu").click(),this.router.navigate([t])}}il.\u0275fac=function(t){return new(t||il)(p(Xt),p(ri))},il.\u0275cmp=ee({type:il,selectors:[["app-layout-one"]],decls:28,vars:1,consts:[["autosize","",1,"mat-drawer-container-custom"],["mode","over",1,"mat-drawer-custom"],["drawer",""],["mat-raised-button","",1,"button-menu-home",3,"click"],["mat-raised-button","",1,"button-menu",2,"margin-top","20px",3,"click"],["mat-raised-button","",1,"button-menu",2,"margin-top","4px",3,"click"],[1,"sidenav-content"],[1,"mat-toolbar-custom"],["mat-icon-button","","id","btnMenu","aria-label","Example icon-button with menu icon",1,"example-icon",3,"click"],[2,"display","block"],[1,"subtitle-app"],[1,"container-pages",2,"padding","8px"],[1,"container-fluid",2,"margin-top","48px"]],template:function(t,e){if(1&t){const i=Xn();b(0,"mat-drawer-container",0)(1,"mat-drawer",1,2)(3,"button",3),H("click",function(){return e.navigate("/members")}),b(4,"mat-icon"),E(5,"home"),y(),E(6," INICIO "),y(),b(7,"button",4),H("click",function(){return e.navigate("/new-member")}),b(8,"mat-icon"),E(9,"person_add"),y(),E(10," Nuevo Miembro "),y(),b(11,"button",5),H("click",function(){return e.navigate("/plans")}),b(12,"mat-icon"),E(13,"assignment"),y(),E(14," Planes "),y()(),b(15,"div",6)(16,"mat-toolbar",7)(17,"button",8),H("click",function(){return ct(i),dt(Er(2).toggle())}),b(18,"mat-icon"),E(19,"menu"),y()(),b(20,"div")(21,"span",9),E(22,"Simple Gym Manager"),y(),b(23,"span",10),E(24),y()()(),b(25,"div",11)(26,"div",12),q(27,"router-outlet"),y()()()()}2&t&&(w(24),gt(e.labelPath))},dependencies:[xd,hs,Fi,Um,TD,MD,_3],styles:[".mat-drawer-container-custom[_ngcontent-%COMP%]{border:1px solid rgba(0,0,0,.5);height:100%}.sidenav-content[_ngcontent-%COMP%]{height:100%}.mat-drawer-custom[_ngcontent-%COMP%]{padding:20px;background-color:#ddd;width:250px;border-top-right-radius:20px}.mat-toolbar-custom[_ngcontent-%COMP%]{background-color:#02071a;color:#fff;position:fixed;z-index:1;height:48px}.container-menu-home[_ngcontent-%COMP%]{display:flex;align-items:center;justify-content:center;cursor:pointer;border-style:dashed solid;border-color:#02071a}.button-menu-home[_ngcontent-%COMP%]{background-color:#02071a!important;width:100%;color:#fff!important;border-radius:20px}.button-menu[_ngcontent-%COMP%]{background-color:#02071a!important;width:100%;color:#fff!important;padding-top:4px;justify-content:initial;border-radius:20px}.subtitle-app[_ngcontent-%COMP%]{font-size:16px;color:#fff700}"]});const B3=["matFormFieldNotchedOutline",""],j3=["*"],q3=["textField"],K3=["iconPrefixContainer"],H3=["textPrefixContainer"];function L3(n,t){1&n&&q(0,"span",19)}function J3(n,t){if(1&n){const e=Xn();b(0,"label",17),H("cdkObserveContent",function(){return ct(e),dt(re(2)._refreshOutlineNotchWidth())}),Ie(1,1),J(2,L3,1,0,"span",18),y()}if(2&n){const e=re(2);I("floating",e._shouldLabelFloat())("cdkObserveContentDisabled",!e._hasOutline())("id",e._labelId),pe("for",e._control.id)("aria-owns",e._control.id),w(2),I("ngIf",!e.hideRequiredMarker&&e._control.required)}}function W3(n,t){1&n&&J(0,J3,3,6,"label",16),2&n&&I("ngIf",re()._hasFloatingLabel())}function Q3(n,t){1&n&&q(0,"div",20)}function G3(n,t){}function z3(n,t){1&n&&J(0,G3,0,0,"ng-template",22),2&n&&(re(2),I("ngTemplateOutlet",Er(1)))}function Y3(n,t){if(1&n&&(b(0,"div",21),J(1,z3,1,1,"ng-template",9),y()),2&n){const e=re();I("matFormFieldNotchedOutlineOpen",e._shouldLabelFloat())("matFormFieldNotchedOutlineLabelWidth",e._labelWidth),w(1),I("ngIf",!e._forceDisplayInfixLabel())}}function X3(n,t){1&n&&(b(0,"div",23,24),Ie(2,2),y())}function Z3(n,t){1&n&&(b(0,"div",25,26),Ie(2,3),y())}function $3(n,t){}function eH(n,t){1&n&&J(0,$3,0,0,"ng-template",22),2&n&&(re(),I("ngTemplateOutlet",Er(1)))}function tH(n,t){1&n&&(b(0,"div",27),Ie(1,4),y())}function nH(n,t){1&n&&(b(0,"div",28),Ie(1,5),y())}function iH(n,t){1&n&&q(0,"div",29)}function rH(n,t){1&n&&(b(0,"div",30),Ie(1,6),y()),2&n&&I("@transitionMessages",re()._subscriptAnimationState)}function oH(n,t){if(1&n&&(b(0,"mat-hint",34),E(1),y()),2&n){const e=re(2);I("id",e._hintLabelId),w(1),gt(e.hintLabel)}}function sH(n,t){if(1&n&&(b(0,"div",31),J(1,oH,2,2,"mat-hint",32),Ie(2,7),q(3,"div",33),Ie(4,8),y()),2&n){const e=re();I("@transitionMessages",e._subscriptAnimationState),w(1),I("ngIf",e.hintLabel)}}const aH=["*",[["mat-label"]],[["","matPrefix",""],["","matIconPrefix",""]],[["","matTextPrefix",""]],[["","matTextSuffix",""]],[["","matSuffix",""],["","matIconSuffix",""]],[["mat-error"],["","matError",""]],[["mat-hint",3,"align","end"]],[["mat-hint","align","end"]]],lH=["*","mat-label","[matPrefix], [matIconPrefix]","[matTextPrefix]","[matTextSuffix]","[matSuffix], [matIconSuffix]","mat-error, [matError]","mat-hint:not([align='end'])","mat-hint[align='end']"];let fs=(()=>{class n{}return n.\u0275fac=function(e){return new(e||n)},n.\u0275dir=M({type:n,selectors:[["mat-label"]]}),n})();const cH=new D("MatError");let dH=0,VD=(()=>{class n{constructor(){this.align="start",this.id="mat-mdc-hint-"+dH++}}return n.\u0275fac=function(e){return new(e||n)},n.\u0275dir=M({type:n,selectors:[["mat-hint"]],hostAttrs:[1,"mat-mdc-form-field-hint","mat-mdc-form-field-bottom-align"],hostVars:4,hostBindings:function(e,i){2&e&&(Rr("id",i.id),pe("align",null),me("mat-mdc-form-field-hint-end","end"===i.align))},inputs:{align:"align",id:"id"}}),n})();const UD=new D("MatPrefix");let Xd=(()=>{class n{constructor(){this._isText=!1}set _isTextSelector(e){this._isText=!0}}return n.\u0275fac=function(e){return new(e||n)},n.\u0275dir=M({type:n,selectors:[["","matPrefix",""],["","matIconPrefix",""],["","matTextPrefix",""]],inputs:{_isTextSelector:["matTextPrefix","_isTextSelector"]},features:[ve([{provide:UD,useExisting:n}])]}),n})();const uH=new D("MatSuffix");let ND=(()=>{class n{constructor(e){this._elementRef=e,this.floating=!1}getWidth(){return function hH(n){if(null!==n.offsetParent)return n.scrollWidth;const e=n.cloneNode(!0);e.style.setProperty("position","absolute"),e.style.setProperty("transform","translate(-9999px, -9999px)"),document.documentElement.appendChild(e);const i=e.scrollWidth;return e.remove(),i}(this._elementRef.nativeElement)}get element(){return this._elementRef.nativeElement}}return n.\u0275fac=function(e){return new(e||n)(p(z))},n.\u0275dir=M({type:n,selectors:[["label","matFormFieldFloatingLabel",""]],hostAttrs:[1,"mdc-floating-label","mat-mdc-floating-label"],hostVars:2,hostBindings:function(e,i){2&e&&me("mdc-floating-label--float-above",i.floating)},inputs:{floating:"floating"}}),n})();const PD="mdc-line-ripple--active",Zd="mdc-line-ripple--deactivating";let _D=(()=>{class n{constructor(e,i){this._elementRef=e,this._handleTransitionEnd=r=>{const o=this._elementRef.nativeElement.classList,s=o.contains(Zd);"opacity"===r.propertyName&&s&&o.remove(PD,Zd)},i.runOutsideAngular(()=>{e.nativeElement.addEventListener("transitionend",this._handleTransitionEnd)})}activate(){const e=this._elementRef.nativeElement.classList;e.remove(Zd),e.add(PD)}deactivate(){this._elementRef.nativeElement.classList.add(Zd)}ngOnDestroy(){this._elementRef.nativeElement.removeEventListener("transitionend",this._handleTransitionEnd)}}return n.\u0275fac=function(e){return new(e||n)(p(z),p(j))},n.\u0275dir=M({type:n,selectors:[["div","matFormFieldLineRipple",""]],hostAttrs:[1,"mdc-line-ripple"]}),n})(),BD=(()=>{class n{constructor(e,i){this._elementRef=e,this._ngZone=i,this.labelWidth=0,this.open=!1}ngAfterViewInit(){const e=this._elementRef.nativeElement.querySelector(".mdc-floating-label");e?(this._elementRef.nativeElement.classList.add("mdc-notched-outline--upgraded"),"function"==typeof requestAnimationFrame&&(e.style.transitionDuration="0s",this._ngZone.runOutsideAngular(()=>{requestAnimationFrame(()=>e.style.transitionDuration="")}))):this._elementRef.nativeElement.classList.add("mdc-notched-outline--no-label")}_getNotchWidth(){return this.open?this.labelWidth>0?`calc(${this.labelWidth}px * var(--mat-mdc-form-field-floating-label-scale, 0.75) + 9px)`:"0px":null}}return n.\u0275fac=function(e){return new(e||n)(p(z),p(j))},n.\u0275cmp=ee({type:n,selectors:[["div","matFormFieldNotchedOutline",""]],hostAttrs:[1,"mdc-notched-outline"],hostVars:2,hostBindings:function(e,i){2&e&&me("mdc-notched-outline--notched",i.open)},inputs:{labelWidth:["matFormFieldNotchedOutlineLabelWidth","labelWidth"],open:["matFormFieldNotchedOutlineOpen","open"]},attrs:B3,ngContentSelectors:j3,decls:4,vars:2,consts:[[1,"mdc-notched-outline__leading"],[1,"mdc-notched-outline__notch"],[1,"mdc-notched-outline__trailing"]],template:function(e,i){1&e&&(Tt(),q(0,"div",0),b(1,"div",1),Ie(2),y(),q(3,"div",2)),2&e&&(w(1),_n("width",i._getNotchWidth()))},encapsulation:2,changeDetection:0}),n})();const pH={transitionMessages:ir("transitionMessages",[si("enter",$e({opacity:1,transform:"translateY(0%)"})),Zt("void => enter",[$e({opacity:0,transform:"translateY(-5px)"}),cn("300ms cubic-bezier(0.55, 0, 0.55, 0.2)")])])};let Hm=(()=>{class n{}return n.\u0275fac=function(e){return new(e||n)},n.\u0275dir=M({type:n}),n})();const $d=new D("MatFormField"),fH=new D("MAT_FORM_FIELD_DEFAULT_OPTIONS");let jD=0,eu=(()=>{class n{get hideRequiredMarker(){return this._hideRequiredMarker}set hideRequiredMarker(e){this._hideRequiredMarker=ue(e)}get floatLabel(){return this._floatLabel||this._defaults?.floatLabel||"auto"}set floatLabel(e){e!==this._floatLabel&&(this._floatLabel=e,this._changeDetectorRef.markForCheck())}get appearance(){return this._appearance}set appearance(e){const i=this._appearance;this._appearance=e||this._defaults?.appearance||"fill","outline"===this._appearance&&this._appearance!==i&&(this._refreshOutlineNotchWidth(),this._needsOutlineLabelOffsetUpdateOnStable=!0)}get subscriptSizing(){return this._subscriptSizing||this._defaults?.subscriptSizing||"fixed"}set subscriptSizing(e){this._subscriptSizing=e||this._defaults?.subscriptSizing||"fixed"}get hintLabel(){return this._hintLabel}set hintLabel(e){this._hintLabel=e,this._processHints()}get _control(){return this._explicitFormFieldControl||this._formFieldControl}set _control(e){this._explicitFormFieldControl=e}constructor(e,i,r,o,s,a,l,c){this._elementRef=e,this._changeDetectorRef=i,this._ngZone=r,this._dir=o,this._platform=s,this._defaults=a,this._animationMode=l,this._document=c,this._hideRequiredMarker=!1,this.color="primary",this._appearance="fill",this._subscriptSizing=null,this._hintLabel="",this._hasIconPrefix=!1,this._hasTextPrefix=!1,this._hasIconSuffix=!1,this._hasTextSuffix=!1,this._labelId="mat-mdc-form-field-label-"+jD++,this._hintLabelId="mat-mdc-hint-"+jD++,this._subscriptAnimationState="",this._labelWidth=0,this._destroyed=new P,this._isFocused=null,this._needsOutlineLabelOffsetUpdateOnStable=!1,a&&(a.appearance&&(this.appearance=a.appearance),this._hideRequiredMarker=Boolean(a?.hideRequiredMarker),a.color&&(this.color=a.color))}ngAfterViewInit(){this._updateFocusState(),this._refreshOutlineNotchWidth(),this._document?.fonts?.ready?this._document.fonts.ready.then(()=>{this._refreshOutlineNotchWidth(),this._changeDetectorRef.markForCheck()}):setTimeout(()=>this._refreshOutlineNotchWidth(),100),this._subscriptAnimationState="enter",this._changeDetectorRef.detectChanges()}ngAfterContentInit(){this._assertFormFieldControl(),this._initializeControl(),this._initializeSubscript(),this._initializePrefixAndSuffix(),this._initializeOutlineLabelOffsetSubscriptions()}ngAfterContentChecked(){this._assertFormFieldControl()}ngOnDestroy(){this._destroyed.next(),this._destroyed.complete()}getLabelId(){return this._hasFloatingLabel()?this._labelId:null}getConnectedOverlayOrigin(){return this._textField||this._elementRef}_animateAndLockLabel(){this._hasFloatingLabel()&&(this.floatLabel="always")}_initializeControl(){const e=this._control;e.controlType&&this._elementRef.nativeElement.classList.add(`mat-mdc-form-field-type-${e.controlType}`),e.stateChanges.subscribe(()=>{this._updateFocusState(),this._syncDescribedByIds(),this._changeDetectorRef.markForCheck()}),e.ngControl&&e.ngControl.valueChanges&&e.ngControl.valueChanges.pipe(Te(this._destroyed)).subscribe(()=>this._changeDetectorRef.markForCheck())}_checkPrefixAndSuffixTypes(){this._hasIconPrefix=!!this._prefixChildren.find(e=>!e._isText),this._hasTextPrefix=!!this._prefixChildren.find(e=>e._isText),this._hasIconSuffix=!!this._suffixChildren.find(e=>!e._isText),this._hasTextSuffix=!!this._suffixChildren.find(e=>e._isText)}_initializePrefixAndSuffix(){this._checkPrefixAndSuffixTypes(),$t(this._prefixChildren.changes,this._suffixChildren.changes).subscribe(()=>{this._checkPrefixAndSuffixTypes(),this._changeDetectorRef.markForCheck()})}_initializeSubscript(){this._hintChildren.changes.subscribe(()=>{this._processHints(),this._changeDetectorRef.markForCheck()}),this._errorChildren.changes.subscribe(()=>{this._syncDescribedByIds(),this._changeDetectorRef.markForCheck()}),this._validateHints(),this._syncDescribedByIds()}_assertFormFieldControl(){}_updateFocusState(){this._control.focused&&!this._isFocused?(this._isFocused=!0,this._lineRipple?.activate()):!this._control.focused&&(this._isFocused||null===this._isFocused)&&(this._isFocused=!1,this._lineRipple?.deactivate()),this._textField?.nativeElement.classList.toggle("mdc-text-field--focused",this._control.focused)}_initializeOutlineLabelOffsetSubscriptions(){this._prefixChildren.changes.subscribe(()=>this._needsOutlineLabelOffsetUpdateOnStable=!0),this._ngZone.runOutsideAngular(()=>{this._ngZone.onStable.pipe(Te(this._destroyed)).subscribe(()=>{this._needsOutlineLabelOffsetUpdateOnStable&&(this._needsOutlineLabelOffsetUpdateOnStable=!1,this._updateOutlineLabelOffset())})}),this._dir.change.pipe(Te(this._destroyed)).subscribe(()=>this._needsOutlineLabelOffsetUpdateOnStable=!0)}_shouldAlwaysFloat(){return"always"===this.floatLabel}_hasOutline(){return"outline"===this.appearance}_forceDisplayInfixLabel(){return!this._platform.isBrowser&&this._prefixChildren.length&&!this._shouldLabelFloat()}_hasFloatingLabel(){return!!this._labelChildNonStatic||!!this._labelChildStatic}_shouldLabelFloat(){return this._control.shouldLabelFloat||this._shouldAlwaysFloat()}_shouldForward(e){const i=this._control?this._control.ngControl:null;return i&&i[e]}_getDisplayedMessages(){return this._errorChildren&&this._errorChildren.length>0&&this._control.errorState?"error":"hint"}_refreshOutlineNotchWidth(){!this._hasOutline()||!this._floatingLabel||(this._labelWidth=this._floatingLabel.getWidth())}_processHints(){this._validateHints(),this._syncDescribedByIds()}_validateHints(){}_syncDescribedByIds(){if(this._control){let e=[];if(this._control.userAriaDescribedBy&&"string"==typeof this._control.userAriaDescribedBy&&e.push(...this._control.userAriaDescribedBy.split(" ")),"hint"===this._getDisplayedMessages()){const i=this._hintChildren?this._hintChildren.find(o=>"start"===o.align):null,r=this._hintChildren?this._hintChildren.find(o=>"end"===o.align):null;i?e.push(i.id):this._hintLabel&&e.push(this._hintLabelId),r&&e.push(r.id)}else this._errorChildren&&e.push(...this._errorChildren.map(i=>i.id));this._control.setDescribedByIds(e)}}_updateOutlineLabelOffset(){if(!this._platform.isBrowser||!this._hasOutline()||!this._floatingLabel)return;const e=this._floatingLabel.element;if(!this._iconPrefixContainer&&!this._textPrefixContainer)return void(e.style.transform="");if(!this._isAttachedToDom())return void(this._needsOutlineLabelOffsetUpdateOnStable=!0);const i=this._iconPrefixContainer?.nativeElement,r=this._textPrefixContainer?.nativeElement,o=i?.getBoundingClientRect().width??0,s=r?.getBoundingClientRect().width??0;e.style.transform=`var(\n        --mat-mdc-form-field-label-transform,\n        translateY(-50%) translateX(calc(${"rtl"===this._dir.value?"-1":"1"} * (${o+s}px + var(--mat-mdc-form-field-label-offset-x, 0px))))\n    )`}_isAttachedToDom(){const e=this._elementRef.nativeElement;if(e.getRootNode){const i=e.getRootNode();return i&&i!==e}return document.documentElement.contains(e)}}return n.\u0275fac=function(e){return new(e||n)(p(z),p(Xe),p(j),p(Lt),p(Ze),p(fH,8),p(Kt,8),p(Y))},n.\u0275cmp=ee({type:n,selectors:[["mat-form-field"]],contentQueries:function(e,i,r){if(1&e&&(At(r,fs,5),At(r,fs,7),At(r,Hm,5),At(r,UD,5),At(r,uH,5),At(r,cH,5),At(r,VD,5)),2&e){let o;oe(o=se())&&(i._labelChildNonStatic=o.first),oe(o=se())&&(i._labelChildStatic=o.first),oe(o=se())&&(i._formFieldControl=o.first),oe(o=se())&&(i._prefixChildren=o),oe(o=se())&&(i._suffixChildren=o),oe(o=se())&&(i._errorChildren=o),oe(o=se())&&(i._hintChildren=o)}},viewQuery:function(e,i){if(1&e&&(je(q3,5),je(K3,5),je(H3,5),je(ND,5),je(BD,5),je(_D,5)),2&e){let r;oe(r=se())&&(i._textField=r.first),oe(r=se())&&(i._iconPrefixContainer=r.first),oe(r=se())&&(i._textPrefixContainer=r.first),oe(r=se())&&(i._floatingLabel=r.first),oe(r=se())&&(i._notchedOutline=r.first),oe(r=se())&&(i._lineRipple=r.first)}},hostAttrs:[1,"mat-mdc-form-field"],hostVars:42,hostBindings:function(e,i){2&e&&me("mat-mdc-form-field-label-always-float",i._shouldAlwaysFloat())("mat-mdc-form-field-has-icon-prefix",i._hasIconPrefix)("mat-mdc-form-field-has-icon-suffix",i._hasIconSuffix)("mat-form-field-invalid",i._control.errorState)("mat-form-field-disabled",i._control.disabled)("mat-form-field-autofilled",i._control.autofilled)("mat-form-field-no-animations","NoopAnimations"===i._animationMode)("mat-form-field-appearance-fill","fill"==i.appearance)("mat-form-field-appearance-outline","outline"==i.appearance)("mat-form-field-hide-placeholder",i._hasFloatingLabel()&&!i._shouldLabelFloat())("mat-focused",i._control.focused)("mat-primary","accent"!==i.color&&"warn"!==i.color)("mat-accent","accent"===i.color)("mat-warn","warn"===i.color)("ng-untouched",i._shouldForward("untouched"))("ng-touched",i._shouldForward("touched"))("ng-pristine",i._shouldForward("pristine"))("ng-dirty",i._shouldForward("dirty"))("ng-valid",i._shouldForward("valid"))("ng-invalid",i._shouldForward("invalid"))("ng-pending",i._shouldForward("pending"))},inputs:{hideRequiredMarker:"hideRequiredMarker",color:"color",floatLabel:"floatLabel",appearance:"appearance",subscriptSizing:"subscriptSizing",hintLabel:"hintLabel"},exportAs:["matFormField"],features:[ve([{provide:$d,useExisting:n}])],ngContentSelectors:lH,decls:18,vars:23,consts:[["labelTemplate",""],[1,"mat-mdc-text-field-wrapper","mdc-text-field",3,"click"],["textField",""],["class","mat-mdc-form-field-focus-overlay",4,"ngIf"],[1,"mat-mdc-form-field-flex"],["matFormFieldNotchedOutline","",3,"matFormFieldNotchedOutlineOpen","matFormFieldNotchedOutlineLabelWidth",4,"ngIf"],["class","mat-mdc-form-field-icon-prefix",4,"ngIf"],["class","mat-mdc-form-field-text-prefix",4,"ngIf"],[1,"mat-mdc-form-field-infix"],[3,"ngIf"],["class","mat-mdc-form-field-text-suffix",4,"ngIf"],["class","mat-mdc-form-field-icon-suffix",4,"ngIf"],["matFormFieldLineRipple","",4,"ngIf"],[1,"mat-mdc-form-field-subscript-wrapper","mat-mdc-form-field-bottom-align",3,"ngSwitch"],["class","mat-mdc-form-field-error-wrapper",4,"ngSwitchCase"],["class","mat-mdc-form-field-hint-wrapper",4,"ngSwitchCase"],["matFormFieldFloatingLabel","",3,"floating","cdkObserveContentDisabled","id","cdkObserveContent",4,"ngIf"],["matFormFieldFloatingLabel","",3,"floating","cdkObserveContentDisabled","id","cdkObserveContent"],["aria-hidden","true","class","mat-mdc-form-field-required-marker mdc-floating-label--required",4,"ngIf"],["aria-hidden","true",1,"mat-mdc-form-field-required-marker","mdc-floating-label--required"],[1,"mat-mdc-form-field-focus-overlay"],["matFormFieldNotchedOutline","",3,"matFormFieldNotchedOutlineOpen","matFormFieldNotchedOutlineLabelWidth"],[3,"ngTemplateOutlet"],[1,"mat-mdc-form-field-icon-prefix"],["iconPrefixContainer",""],[1,"mat-mdc-form-field-text-prefix"],["textPrefixContainer",""],[1,"mat-mdc-form-field-text-suffix"],[1,"mat-mdc-form-field-icon-suffix"],["matFormFieldLineRipple",""],[1,"mat-mdc-form-field-error-wrapper"],[1,"mat-mdc-form-field-hint-wrapper"],[3,"id",4,"ngIf"],[1,"mat-mdc-form-field-hint-spacer"],[3,"id"]],template:function(e,i){1&e&&(Tt(aH),J(0,W3,1,1,"ng-template",null,0,h0),b(2,"div",1,2),H("click",function(o){return i._control.onContainerClick&&i._control.onContainerClick(o)}),J(4,Q3,1,0,"div",3),b(5,"div",4),J(6,Y3,2,3,"div",5),J(7,X3,3,0,"div",6),J(8,Z3,3,0,"div",7),b(9,"div",8),J(10,eH,1,1,"ng-template",9),Ie(11),y(),J(12,tH,2,0,"div",10),J(13,nH,2,0,"div",11),y(),J(14,iH,1,0,"div",12),y(),b(15,"div",13),J(16,rH,2,1,"div",14),J(17,sH,5,2,"div",15),y()),2&e&&(w(2),me("mdc-text-field--filled",!i._hasOutline())("mdc-text-field--outlined",i._hasOutline())("mdc-text-field--no-label",!i._hasFloatingLabel())("mdc-text-field--disabled",i._control.disabled)("mdc-text-field--invalid",i._control.errorState),w(2),I("ngIf",!i._hasOutline()&&!i._control.disabled),w(2),I("ngIf",i._hasOutline()),w(1),I("ngIf",i._hasIconPrefix),w(1),I("ngIf",i._hasTextPrefix),w(2),I("ngIf",!i._hasOutline()||i._forceDisplayInfixLabel()),w(2),I("ngIf",i._hasTextSuffix),w(1),I("ngIf",i._hasIconSuffix),w(1),I("ngIf",!i._hasOutline()),w(1),me("mat-mdc-form-field-subscript-dynamic-size","dynamic"===i.subscriptSizing),I("ngSwitch",i._getDisplayedMessages()),w(1),I("ngSwitchCase","error"),w(1),I("ngSwitchCase","hint"))},dependencies:[wi,wC,Wo,rd,oq,VD,ND,BD,_D],styles:['.mdc-text-field{border-top-left-radius:var(--mdc-shape-small, 4px);border-top-right-radius:var(--mdc-shape-small, 4px);border-bottom-right-radius:0;border-bottom-left-radius:0;display:inline-flex;align-items:baseline;padding:0 16px;position:relative;box-sizing:border-box;overflow:hidden;will-change:opacity,transform,color}.mdc-text-field .mdc-floating-label{top:50%;transform:translateY(-50%);pointer-events:none}.mdc-text-field__input{height:28px;width:100%;min-width:0;border:none;border-radius:0;background:none;appearance:none;padding:0}.mdc-text-field__input::-ms-clear{display:none}.mdc-text-field__input::-webkit-calendar-picker-indicator{display:none}.mdc-text-field__input:focus{outline:none}.mdc-text-field__input:invalid{box-shadow:none}@media all{.mdc-text-field__input::placeholder{opacity:0}}@media all{.mdc-text-field__input:-ms-input-placeholder{opacity:0}}@media all{.mdc-text-field--no-label .mdc-text-field__input::placeholder,.mdc-text-field--focused .mdc-text-field__input::placeholder{opacity:1}}@media all{.mdc-text-field--no-label .mdc-text-field__input:-ms-input-placeholder,.mdc-text-field--focused .mdc-text-field__input:-ms-input-placeholder{opacity:1}}.mdc-text-field__affix{height:28px;opacity:0;white-space:nowrap}.mdc-text-field--label-floating .mdc-text-field__affix,.mdc-text-field--no-label .mdc-text-field__affix{opacity:1}@supports(-webkit-hyphens: none){.mdc-text-field--outlined .mdc-text-field__affix{align-items:center;align-self:center;display:inline-flex;height:100%}}.mdc-text-field__affix--prefix{padding-left:0;padding-right:2px}[dir=rtl] .mdc-text-field__affix--prefix,.mdc-text-field__affix--prefix[dir=rtl]{padding-left:2px;padding-right:0}.mdc-text-field--end-aligned .mdc-text-field__affix--prefix{padding-left:0;padding-right:12px}[dir=rtl] .mdc-text-field--end-aligned .mdc-text-field__affix--prefix,.mdc-text-field--end-aligned .mdc-text-field__affix--prefix[dir=rtl]{padding-left:12px;padding-right:0}.mdc-text-field__affix--suffix{padding-left:12px;padding-right:0}[dir=rtl] .mdc-text-field__affix--suffix,.mdc-text-field__affix--suffix[dir=rtl]{padding-left:0;padding-right:12px}.mdc-text-field--end-aligned .mdc-text-field__affix--suffix{padding-left:2px;padding-right:0}[dir=rtl] .mdc-text-field--end-aligned .mdc-text-field__affix--suffix,.mdc-text-field--end-aligned .mdc-text-field__affix--suffix[dir=rtl]{padding-left:0;padding-right:2px}.mdc-text-field--filled{height:56px}.mdc-text-field--filled::before{display:inline-block;width:0;height:40px;content:"";vertical-align:0}.mdc-text-field--filled .mdc-floating-label{left:16px;right:initial}[dir=rtl] .mdc-text-field--filled .mdc-floating-label,.mdc-text-field--filled .mdc-floating-label[dir=rtl]{left:initial;right:16px}.mdc-text-field--filled .mdc-floating-label--float-above{transform:translateY(-106%) scale(0.75)}.mdc-text-field--filled.mdc-text-field--no-label .mdc-text-field__input{height:100%}.mdc-text-field--filled.mdc-text-field--no-label .mdc-floating-label{display:none}.mdc-text-field--filled.mdc-text-field--no-label::before{display:none}@supports(-webkit-hyphens: none){.mdc-text-field--filled.mdc-text-field--no-label .mdc-text-field__affix{align-items:center;align-self:center;display:inline-flex;height:100%}}.mdc-text-field--outlined{height:56px;overflow:visible}.mdc-text-field--outlined .mdc-floating-label--float-above{transform:translateY(-37.25px) scale(1)}.mdc-text-field--outlined .mdc-floating-label--float-above{font-size:.75rem}.mdc-text-field--outlined.mdc-notched-outline--upgraded .mdc-floating-label--float-above,.mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above{transform:translateY(-34.75px) scale(0.75)}.mdc-text-field--outlined.mdc-notched-outline--upgraded .mdc-floating-label--float-above,.mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above{font-size:1rem}.mdc-text-field--outlined .mdc-text-field__input{height:100%}.mdc-text-field--outlined .mdc-notched-outline .mdc-notched-outline__leading{border-top-left-radius:var(--mdc-shape-small, 4px);border-top-right-radius:0;border-bottom-right-radius:0;border-bottom-left-radius:var(--mdc-shape-small, 4px)}[dir=rtl] .mdc-text-field--outlined .mdc-notched-outline .mdc-notched-outline__leading,.mdc-text-field--outlined .mdc-notched-outline .mdc-notched-outline__leading[dir=rtl]{border-top-left-radius:0;border-top-right-radius:var(--mdc-shape-small, 4px);border-bottom-right-radius:var(--mdc-shape-small, 4px);border-bottom-left-radius:0}@supports(top: max(0%)){.mdc-text-field--outlined .mdc-notched-outline .mdc-notched-outline__leading{width:max(12px, var(--mdc-shape-small, 4px))}}@supports(top: max(0%)){.mdc-text-field--outlined .mdc-notched-outline .mdc-notched-outline__notch{max-width:calc(100% - max(12px, var(--mdc-shape-small, 4px))*2)}}.mdc-text-field--outlined .mdc-notched-outline .mdc-notched-outline__trailing{border-top-left-radius:0;border-top-right-radius:var(--mdc-shape-small, 4px);border-bottom-right-radius:var(--mdc-shape-small, 4px);border-bottom-left-radius:0}[dir=rtl] .mdc-text-field--outlined .mdc-notched-outline .mdc-notched-outline__trailing,.mdc-text-field--outlined .mdc-notched-outline .mdc-notched-outline__trailing[dir=rtl]{border-top-left-radius:var(--mdc-shape-small, 4px);border-top-right-radius:0;border-bottom-right-radius:0;border-bottom-left-radius:var(--mdc-shape-small, 4px)}@supports(top: max(0%)){.mdc-text-field--outlined{padding-left:max(16px, calc(var(--mdc-shape-small, 4px) + 4px))}}@supports(top: max(0%)){.mdc-text-field--outlined{padding-right:max(16px, var(--mdc-shape-small, 4px))}}@supports(top: max(0%)){.mdc-text-field--outlined+.mdc-text-field-helper-line{padding-left:max(16px, calc(var(--mdc-shape-small, 4px) + 4px))}}@supports(top: max(0%)){.mdc-text-field--outlined+.mdc-text-field-helper-line{padding-right:max(16px, var(--mdc-shape-small, 4px))}}.mdc-text-field--outlined.mdc-text-field--with-leading-icon{padding-left:0}@supports(top: max(0%)){.mdc-text-field--outlined.mdc-text-field--with-leading-icon{padding-right:max(16px, var(--mdc-shape-small, 4px))}}[dir=rtl] .mdc-text-field--outlined.mdc-text-field--with-leading-icon,.mdc-text-field--outlined.mdc-text-field--with-leading-icon[dir=rtl]{padding-right:0}@supports(top: max(0%)){[dir=rtl] .mdc-text-field--outlined.mdc-text-field--with-leading-icon,.mdc-text-field--outlined.mdc-text-field--with-leading-icon[dir=rtl]{padding-left:max(16px, var(--mdc-shape-small, 4px))}}.mdc-text-field--outlined.mdc-text-field--with-trailing-icon{padding-right:0}@supports(top: max(0%)){.mdc-text-field--outlined.mdc-text-field--with-trailing-icon{padding-left:max(16px, calc(var(--mdc-shape-small, 4px) + 4px))}}[dir=rtl] .mdc-text-field--outlined.mdc-text-field--with-trailing-icon,.mdc-text-field--outlined.mdc-text-field--with-trailing-icon[dir=rtl]{padding-left:0}@supports(top: max(0%)){[dir=rtl] .mdc-text-field--outlined.mdc-text-field--with-trailing-icon,.mdc-text-field--outlined.mdc-text-field--with-trailing-icon[dir=rtl]{padding-right:max(16px, calc(var(--mdc-shape-small, 4px) + 4px))}}.mdc-text-field--outlined.mdc-text-field--with-leading-icon.mdc-text-field--with-trailing-icon{padding-left:0;padding-right:0}.mdc-text-field--outlined .mdc-notched-outline--notched .mdc-notched-outline__notch{padding-top:1px}.mdc-text-field--outlined .mdc-floating-label{left:4px;right:initial}[dir=rtl] .mdc-text-field--outlined .mdc-floating-label,.mdc-text-field--outlined .mdc-floating-label[dir=rtl]{left:initial;right:4px}.mdc-text-field--outlined .mdc-text-field__input{display:flex;border:none !important;background-color:rgba(0,0,0,0)}.mdc-text-field--outlined .mdc-notched-outline{z-index:1}.mdc-text-field--textarea{flex-direction:column;align-items:center;width:auto;height:auto;padding:0}.mdc-text-field--textarea .mdc-floating-label{top:19px}.mdc-text-field--textarea .mdc-floating-label:not(.mdc-floating-label--float-above){transform:none}.mdc-text-field--textarea .mdc-text-field__input{flex-grow:1;height:auto;min-height:1.5rem;overflow-x:hidden;overflow-y:auto;box-sizing:border-box;resize:none;padding:0 16px}.mdc-text-field--textarea.mdc-text-field--filled::before{display:none}.mdc-text-field--textarea.mdc-text-field--filled .mdc-floating-label--float-above{transform:translateY(-10.25px) scale(0.75)}.mdc-text-field--textarea.mdc-text-field--filled .mdc-text-field__input{margin-top:23px;margin-bottom:9px}.mdc-text-field--textarea.mdc-text-field--filled.mdc-text-field--no-label .mdc-text-field__input{margin-top:16px;margin-bottom:16px}.mdc-text-field--textarea.mdc-text-field--outlined .mdc-notched-outline--notched .mdc-notched-outline__notch{padding-top:0}.mdc-text-field--textarea.mdc-text-field--outlined .mdc-floating-label--float-above{transform:translateY(-27.25px) scale(1)}.mdc-text-field--textarea.mdc-text-field--outlined .mdc-floating-label--float-above{font-size:.75rem}.mdc-text-field--textarea.mdc-text-field--outlined.mdc-notched-outline--upgraded .mdc-floating-label--float-above,.mdc-text-field--textarea.mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above{transform:translateY(-24.75px) scale(0.75)}.mdc-text-field--textarea.mdc-text-field--outlined.mdc-notched-outline--upgraded .mdc-floating-label--float-above,.mdc-text-field--textarea.mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above{font-size:1rem}.mdc-text-field--textarea.mdc-text-field--outlined .mdc-text-field__input{margin-top:16px;margin-bottom:16px}.mdc-text-field--textarea.mdc-text-field--outlined .mdc-floating-label{top:18px}.mdc-text-field--textarea.mdc-text-field--with-internal-counter .mdc-text-field__input{margin-bottom:2px}.mdc-text-field--textarea.mdc-text-field--with-internal-counter .mdc-text-field-character-counter{align-self:flex-end;padding:0 16px}.mdc-text-field--textarea.mdc-text-field--with-internal-counter .mdc-text-field-character-counter::after{display:inline-block;width:0;height:16px;content:"";vertical-align:-16px}.mdc-text-field--textarea.mdc-text-field--with-internal-counter .mdc-text-field-character-counter::before{display:none}.mdc-text-field__resizer{align-self:stretch;display:inline-flex;flex-direction:column;flex-grow:1;max-height:100%;max-width:100%;min-height:56px;min-width:fit-content;min-width:-moz-available;min-width:-webkit-fill-available;overflow:hidden;resize:both}.mdc-text-field--filled .mdc-text-field__resizer{transform:translateY(-1px)}.mdc-text-field--filled .mdc-text-field__resizer .mdc-text-field__input,.mdc-text-field--filled .mdc-text-field__resizer .mdc-text-field-character-counter{transform:translateY(1px)}.mdc-text-field--outlined .mdc-text-field__resizer{transform:translateX(-1px) translateY(-1px)}[dir=rtl] .mdc-text-field--outlined .mdc-text-field__resizer,.mdc-text-field--outlined .mdc-text-field__resizer[dir=rtl]{transform:translateX(1px) translateY(-1px)}.mdc-text-field--outlined .mdc-text-field__resizer .mdc-text-field__input,.mdc-text-field--outlined .mdc-text-field__resizer .mdc-text-field-character-counter{transform:translateX(1px) translateY(1px)}[dir=rtl] .mdc-text-field--outlined .mdc-text-field__resizer .mdc-text-field__input,[dir=rtl] .mdc-text-field--outlined .mdc-text-field__resizer .mdc-text-field-character-counter,.mdc-text-field--outlined .mdc-text-field__resizer .mdc-text-field__input[dir=rtl],.mdc-text-field--outlined .mdc-text-field__resizer .mdc-text-field-character-counter[dir=rtl]{transform:translateX(-1px) translateY(1px)}.mdc-text-field--with-leading-icon{padding-left:0;padding-right:16px}[dir=rtl] .mdc-text-field--with-leading-icon,.mdc-text-field--with-leading-icon[dir=rtl]{padding-left:16px;padding-right:0}.mdc-text-field--with-leading-icon.mdc-text-field--filled .mdc-floating-label{max-width:calc(100% - 48px);left:48px;right:initial}[dir=rtl] .mdc-text-field--with-leading-icon.mdc-text-field--filled .mdc-floating-label,.mdc-text-field--with-leading-icon.mdc-text-field--filled .mdc-floating-label[dir=rtl]{left:initial;right:48px}.mdc-text-field--with-leading-icon.mdc-text-field--filled .mdc-floating-label--float-above{max-width:calc(100% / 0.75 - 64px / 0.75)}.mdc-text-field--with-leading-icon.mdc-text-field--outlined .mdc-floating-label{left:36px;right:initial}[dir=rtl] .mdc-text-field--with-leading-icon.mdc-text-field--outlined .mdc-floating-label,.mdc-text-field--with-leading-icon.mdc-text-field--outlined .mdc-floating-label[dir=rtl]{left:initial;right:36px}.mdc-text-field--with-leading-icon.mdc-text-field--outlined :not(.mdc-notched-outline--notched) .mdc-notched-outline__notch{max-width:calc(100% - 60px)}.mdc-text-field--with-leading-icon.mdc-text-field--outlined .mdc-floating-label--float-above{transform:translateY(-37.25px) translateX(-32px) scale(1)}[dir=rtl] .mdc-text-field--with-leading-icon.mdc-text-field--outlined .mdc-floating-label--float-above,.mdc-text-field--with-leading-icon.mdc-text-field--outlined .mdc-floating-label--float-above[dir=rtl]{transform:translateY(-37.25px) translateX(32px) scale(1)}.mdc-text-field--with-leading-icon.mdc-text-field--outlined .mdc-floating-label--float-above{font-size:.75rem}.mdc-text-field--with-leading-icon.mdc-text-field--outlined.mdc-notched-outline--upgraded .mdc-floating-label--float-above,.mdc-text-field--with-leading-icon.mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above{transform:translateY(-34.75px) translateX(-32px) scale(0.75)}[dir=rtl] .mdc-text-field--with-leading-icon.mdc-text-field--outlined.mdc-notched-outline--upgraded .mdc-floating-label--float-above,[dir=rtl] .mdc-text-field--with-leading-icon.mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above,.mdc-text-field--with-leading-icon.mdc-text-field--outlined.mdc-notched-outline--upgraded .mdc-floating-label--float-above[dir=rtl],.mdc-text-field--with-leading-icon.mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above[dir=rtl]{transform:translateY(-34.75px) translateX(32px) scale(0.75)}.mdc-text-field--with-leading-icon.mdc-text-field--outlined.mdc-notched-outline--upgraded .mdc-floating-label--float-above,.mdc-text-field--with-leading-icon.mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above{font-size:1rem}.mdc-text-field--with-trailing-icon{padding-left:16px;padding-right:0}[dir=rtl] .mdc-text-field--with-trailing-icon,.mdc-text-field--with-trailing-icon[dir=rtl]{padding-left:0;padding-right:16px}.mdc-text-field--with-trailing-icon.mdc-text-field--filled .mdc-floating-label{max-width:calc(100% - 64px)}.mdc-text-field--with-trailing-icon.mdc-text-field--filled .mdc-floating-label--float-above{max-width:calc(100% / 0.75 - 64px / 0.75)}.mdc-text-field--with-trailing-icon.mdc-text-field--outlined :not(.mdc-notched-outline--notched) .mdc-notched-outline__notch{max-width:calc(100% - 60px)}.mdc-text-field--with-leading-icon.mdc-text-field--with-trailing-icon{padding-left:0;padding-right:0}.mdc-text-field--with-leading-icon.mdc-text-field--with-trailing-icon.mdc-text-field--filled .mdc-floating-label{max-width:calc(100% - 96px)}.mdc-text-field--with-leading-icon.mdc-text-field--with-trailing-icon.mdc-text-field--filled .mdc-floating-label--float-above{max-width:calc(100% / 0.75 - 96px / 0.75)}.mdc-text-field-helper-line{display:flex;justify-content:space-between;box-sizing:border-box}.mdc-text-field+.mdc-text-field-helper-line{padding-right:16px;padding-left:16px}.mdc-form-field>.mdc-text-field+label{align-self:flex-start}.mdc-text-field--focused .mdc-notched-outline__leading,.mdc-text-field--focused .mdc-notched-outline__notch,.mdc-text-field--focused .mdc-notched-outline__trailing{border-width:2px}.mdc-text-field--focused+.mdc-text-field-helper-line .mdc-text-field-helper-text:not(.mdc-text-field-helper-text--validation-msg){opacity:1}.mdc-text-field--focused.mdc-text-field--outlined .mdc-notched-outline--notched .mdc-notched-outline__notch{padding-top:2px}.mdc-text-field--focused.mdc-text-field--outlined.mdc-text-field--textarea .mdc-notched-outline--notched .mdc-notched-outline__notch{padding-top:0}.mdc-text-field--invalid+.mdc-text-field-helper-line .mdc-text-field-helper-text--validation-msg{opacity:1}.mdc-text-field--disabled{pointer-events:none}@media screen and (forced-colors: active){.mdc-text-field--disabled .mdc-text-field__input{background-color:Window}.mdc-text-field--disabled .mdc-floating-label{z-index:1}}.mdc-text-field--disabled .mdc-floating-label{cursor:default}.mdc-text-field--disabled.mdc-text-field--filled .mdc-text-field__ripple{display:none}.mdc-text-field--disabled .mdc-text-field__input{pointer-events:auto}.mdc-text-field--end-aligned .mdc-text-field__input{text-align:right}[dir=rtl] .mdc-text-field--end-aligned .mdc-text-field__input,.mdc-text-field--end-aligned .mdc-text-field__input[dir=rtl]{text-align:left}[dir=rtl] .mdc-text-field--ltr-text .mdc-text-field__input,[dir=rtl] .mdc-text-field--ltr-text .mdc-text-field__affix,.mdc-text-field--ltr-text[dir=rtl] .mdc-text-field__input,.mdc-text-field--ltr-text[dir=rtl] .mdc-text-field__affix{direction:ltr}[dir=rtl] .mdc-text-field--ltr-text .mdc-text-field__affix--prefix,.mdc-text-field--ltr-text[dir=rtl] .mdc-text-field__affix--prefix{padding-left:0;padding-right:2px}[dir=rtl] .mdc-text-field--ltr-text .mdc-text-field__affix--suffix,.mdc-text-field--ltr-text[dir=rtl] .mdc-text-field__affix--suffix{padding-left:12px;padding-right:0}[dir=rtl] .mdc-text-field--ltr-text .mdc-text-field__icon--leading,.mdc-text-field--ltr-text[dir=rtl] .mdc-text-field__icon--leading{order:1}[dir=rtl] .mdc-text-field--ltr-text .mdc-text-field__affix--suffix,.mdc-text-field--ltr-text[dir=rtl] .mdc-text-field__affix--suffix{order:2}[dir=rtl] .mdc-text-field--ltr-text .mdc-text-field__input,.mdc-text-field--ltr-text[dir=rtl] .mdc-text-field__input{order:3}[dir=rtl] .mdc-text-field--ltr-text .mdc-text-field__affix--prefix,.mdc-text-field--ltr-text[dir=rtl] .mdc-text-field__affix--prefix{order:4}[dir=rtl] .mdc-text-field--ltr-text .mdc-text-field__icon--trailing,.mdc-text-field--ltr-text[dir=rtl] .mdc-text-field__icon--trailing{order:5}[dir=rtl] .mdc-text-field--ltr-text.mdc-text-field--end-aligned .mdc-text-field__input,.mdc-text-field--ltr-text.mdc-text-field--end-aligned[dir=rtl] .mdc-text-field__input{text-align:right}[dir=rtl] .mdc-text-field--ltr-text.mdc-text-field--end-aligned .mdc-text-field__affix--prefix,.mdc-text-field--ltr-text.mdc-text-field--end-aligned[dir=rtl] .mdc-text-field__affix--prefix{padding-right:12px}[dir=rtl] .mdc-text-field--ltr-text.mdc-text-field--end-aligned .mdc-text-field__affix--suffix,.mdc-text-field--ltr-text.mdc-text-field--end-aligned[dir=rtl] .mdc-text-field__affix--suffix{padding-left:2px}.mdc-floating-label{position:absolute;left:0;-webkit-transform-origin:left top;transform-origin:left top;line-height:1.15rem;text-align:left;text-overflow:ellipsis;white-space:nowrap;cursor:text;overflow:hidden;will-change:transform}[dir=rtl] .mdc-floating-label,.mdc-floating-label[dir=rtl]{right:0;left:auto;-webkit-transform-origin:right top;transform-origin:right top;text-align:right}.mdc-floating-label--float-above{cursor:auto}.mdc-floating-label--required::after{margin-left:1px;margin-right:0px;content:"*"}[dir=rtl] .mdc-floating-label--required::after,.mdc-floating-label--required[dir=rtl]::after{margin-left:0;margin-right:1px}.mdc-floating-label--float-above{transform:translateY(-106%) scale(0.75)}.mdc-notched-outline{display:flex;position:absolute;top:0;right:0;left:0;box-sizing:border-box;width:100%;max-width:100%;height:100%;text-align:left;pointer-events:none}[dir=rtl] .mdc-notched-outline,.mdc-notched-outline[dir=rtl]{text-align:right}.mdc-notched-outline__leading,.mdc-notched-outline__notch,.mdc-notched-outline__trailing{box-sizing:border-box;height:100%;border-top:1px solid;border-bottom:1px solid;pointer-events:none}.mdc-notched-outline__leading{border-left:1px solid;border-right:none;width:12px}[dir=rtl] .mdc-notched-outline__leading,.mdc-notched-outline__leading[dir=rtl]{border-left:none;border-right:1px solid}.mdc-notched-outline__trailing{border-left:none;border-right:1px solid;flex-grow:1}[dir=rtl] .mdc-notched-outline__trailing,.mdc-notched-outline__trailing[dir=rtl]{border-left:1px solid;border-right:none}.mdc-notched-outline__notch{flex:0 0 auto;width:auto;max-width:calc(100% - 12px * 2)}.mdc-notched-outline .mdc-floating-label{display:inline-block;position:relative;max-width:100%}.mdc-notched-outline .mdc-floating-label--float-above{text-overflow:clip}.mdc-notched-outline--upgraded .mdc-floating-label--float-above{max-width:133.3333333333%}.mdc-notched-outline--notched .mdc-notched-outline__notch{padding-left:0;padding-right:8px;border-top:none}[dir=rtl] .mdc-notched-outline--notched .mdc-notched-outline__notch,.mdc-notched-outline--notched .mdc-notched-outline__notch[dir=rtl]{padding-left:8px;padding-right:0}.mdc-notched-outline--no-label .mdc-notched-outline__notch{display:none}.mdc-line-ripple::before,.mdc-line-ripple::after{position:absolute;bottom:0;left:0;width:100%;border-bottom-style:solid;content:""}.mdc-line-ripple::before{border-bottom-width:1px}.mdc-line-ripple::after{border-bottom-width:2px}.mdc-line-ripple::before{z-index:1}.mdc-line-ripple::after{transform:scaleX(0);opacity:0;z-index:2}.mdc-line-ripple--active::after{transform:scaleX(1);opacity:1}.mdc-line-ripple--deactivating::after{opacity:0}.mat-mdc-form-field-textarea-control{vertical-align:middle;resize:vertical;box-sizing:border-box;height:auto;margin:0;padding:0;border:none;overflow:auto}.mat-mdc-form-field-input-control.mat-mdc-form-field-input-control{font:inherit;letter-spacing:inherit;text-decoration:inherit;text-transform:inherit;border:none}.mat-mdc-form-field .mat-mdc-floating-label.mdc-floating-label{line-height:normal;pointer-events:all}.mdc-text-field--no-label:not(.mdc-text-field--textarea) .mat-mdc-form-field-input-control.mdc-text-field__input,.mat-mdc-text-field-wrapper .mat-mdc-form-field-input-control{height:auto}.mat-mdc-text-field-wrapper .mat-mdc-form-field-input-control.mdc-text-field__input[type=color]{height:23px}.mat-mdc-text-field-wrapper{height:auto;flex:auto}.mat-mdc-form-field-has-icon-prefix .mat-mdc-text-field-wrapper{padding-left:0;--mat-mdc-form-field-label-offset-x: -16px}.mat-mdc-form-field-has-icon-suffix .mat-mdc-text-field-wrapper{padding-right:0}[dir=rtl] .mat-mdc-text-field-wrapper{padding-left:16px;padding-right:16px}[dir=rtl] .mat-mdc-form-field-has-icon-suffix .mat-mdc-text-field-wrapper{padding-left:0}[dir=rtl] .mat-mdc-form-field-has-icon-prefix .mat-mdc-text-field-wrapper{padding-right:0}.mat-mdc-form-field-label-always-float .mdc-text-field__input::placeholder{transition-delay:40ms;transition-duration:110ms;opacity:1}.mat-mdc-text-field-wrapper .mat-mdc-form-field-infix .mat-mdc-floating-label{left:auto;right:auto}.mat-mdc-text-field-wrapper.mdc-text-field--outlined .mdc-text-field__input{display:inline-block}.mat-mdc-form-field .mat-mdc-text-field-wrapper.mdc-text-field .mdc-notched-outline__notch{padding-top:0}.mat-mdc-text-field-wrapper::before{content:none}.mat-mdc-form-field-subscript-wrapper{box-sizing:border-box;width:100%;position:relative}.mat-mdc-form-field-hint-wrapper,.mat-mdc-form-field-error-wrapper{position:absolute;top:0;left:0;right:0;padding:0 16px}.mat-mdc-form-field-subscript-dynamic-size .mat-mdc-form-field-hint-wrapper,.mat-mdc-form-field-subscript-dynamic-size .mat-mdc-form-field-error-wrapper{position:static}.mat-mdc-form-field-bottom-align::before{content:"";display:inline-block;height:16px}.mat-mdc-form-field-bottom-align.mat-mdc-form-field-subscript-dynamic-size::before{content:unset}.mat-mdc-form-field-hint-end{order:1}.mat-mdc-form-field-hint-wrapper{display:flex}.mat-mdc-form-field-hint-spacer{flex:1 0 1em}.mat-mdc-form-field-error{display:block}.mat-mdc-form-field-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;opacity:0;pointer-events:none}select.mat-mdc-form-field-input-control{-moz-appearance:none;-webkit-appearance:none;background-color:rgba(0,0,0,0);display:inline-flex;box-sizing:border-box}select.mat-mdc-form-field-input-control:not(:disabled){cursor:pointer}.mat-mdc-form-field-type-mat-native-select .mat-mdc-form-field-infix::after{content:"";width:0;height:0;border-left:5px solid rgba(0,0,0,0);border-right:5px solid rgba(0,0,0,0);border-top:5px solid;position:absolute;right:0;top:50%;margin-top:-2.5px;pointer-events:none}[dir=rtl] .mat-mdc-form-field-type-mat-native-select .mat-mdc-form-field-infix::after{right:auto;left:0}.mat-mdc-form-field-type-mat-native-select .mat-mdc-form-field-input-control{padding-right:15px}[dir=rtl] .mat-mdc-form-field-type-mat-native-select .mat-mdc-form-field-input-control{padding-right:0;padding-left:15px}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-mdc-text-field-wrapper{outline:solid 1px}.cdk-high-contrast-active .mat-form-field-appearance-fill.mat-form-field-disabled .mat-mdc-text-field-wrapper{outline-color:GrayText}.cdk-high-contrast-active .mat-form-field-appearance-fill.mat-focused .mat-mdc-text-field-wrapper{outline:dashed 3px}.cdk-high-contrast-active .mat-mdc-form-field.mat-focused .mdc-notched-outline{border:dashed 3px}.mat-mdc-form-field{--mat-mdc-form-field-floating-label-scale: 0.75;display:inline-flex;flex-direction:column;min-width:0;text-align:left}[dir=rtl] .mat-mdc-form-field{text-align:right}.mat-mdc-form-field-flex{display:inline-flex;align-items:baseline;box-sizing:border-box;width:100%}.mat-mdc-text-field-wrapper{width:100%}.mat-mdc-form-field-icon-prefix,.mat-mdc-form-field-icon-suffix{align-self:center;line-height:0;pointer-events:auto}.mat-mdc-form-field-icon-prefix,[dir=rtl] .mat-mdc-form-field-icon-suffix{padding:0 4px 0 0}.mat-mdc-form-field-icon-suffix,[dir=rtl] .mat-mdc-form-field-icon-prefix{padding:0 0 0 4px}.mat-mdc-form-field-icon-prefix>.mat-icon,.mat-mdc-form-field-icon-suffix>.mat-icon{padding:12px;box-sizing:content-box}.mat-mdc-form-field-subscript-wrapper .mat-icon,.mat-mdc-form-field label .mat-icon{width:1em;height:1em;font-size:inherit}.mat-mdc-form-field-infix{flex:auto;min-width:0;width:180px;position:relative;box-sizing:border-box}.mat-mdc-form-field .mdc-notched-outline__notch{margin-left:-1px;-webkit-clip-path:inset(-9em -999em -9em 1px);clip-path:inset(-9em -999em -9em 1px)}[dir=rtl] .mat-mdc-form-field .mdc-notched-outline__notch{margin-left:0;margin-right:-1px;-webkit-clip-path:inset(-9em 1px -9em -999em);clip-path:inset(-9em 1px -9em -999em)}.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field__input{transition:opacity 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}@media all{.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field__input::placeholder{transition:opacity 67ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}}@media all{.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field__input:-ms-input-placeholder{transition:opacity 67ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}}@media all{.mdc-text-field--no-label .mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field__input::placeholder,.mdc-text-field--focused .mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field__input::placeholder{transition-delay:40ms;transition-duration:110ms}}@media all{.mdc-text-field--no-label .mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field__input:-ms-input-placeholder,.mdc-text-field--focused .mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field__input:-ms-input-placeholder{transition-delay:40ms;transition-duration:110ms}}.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field__affix{transition:opacity 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field--filled.mdc-ripple-upgraded--background-focused .mdc-text-field__ripple::before,.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field--filled:not(.mdc-ripple-upgraded):focus .mdc-text-field__ripple::before{transition-duration:75ms}.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field--outlined .mdc-floating-label--shake{animation:mdc-floating-label-shake-float-above-text-field-outlined 250ms 1}@keyframes mdc-floating-label-shake-float-above-text-field-outlined{0%{transform:translateX(calc(0 - 0%)) translateY(-34.75px) scale(0.75)}33%{animation-timing-function:cubic-bezier(0.5, 0, 0.701732, 0.495819);transform:translateX(calc(4% - 0%)) translateY(-34.75px) scale(0.75)}66%{animation-timing-function:cubic-bezier(0.302435, 0.381352, 0.55, 0.956352);transform:translateX(calc(-4% - 0%)) translateY(-34.75px) scale(0.75)}100%{transform:translateX(calc(0 - 0%)) translateY(-34.75px) scale(0.75)}}.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field--textarea{transition:none}.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field--textarea.mdc-text-field--filled .mdc-floating-label--shake{animation:mdc-floating-label-shake-float-above-textarea-filled 250ms 1}@keyframes mdc-floating-label-shake-float-above-textarea-filled{0%{transform:translateX(calc(0 - 0%)) translateY(-10.25px) scale(0.75)}33%{animation-timing-function:cubic-bezier(0.5, 0, 0.701732, 0.495819);transform:translateX(calc(4% - 0%)) translateY(-10.25px) scale(0.75)}66%{animation-timing-function:cubic-bezier(0.302435, 0.381352, 0.55, 0.956352);transform:translateX(calc(-4% - 0%)) translateY(-10.25px) scale(0.75)}100%{transform:translateX(calc(0 - 0%)) translateY(-10.25px) scale(0.75)}}.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field--textarea.mdc-text-field--outlined .mdc-floating-label--shake{animation:mdc-floating-label-shake-float-above-textarea-outlined 250ms 1}@keyframes mdc-floating-label-shake-float-above-textarea-outlined{0%{transform:translateX(calc(0 - 0%)) translateY(-24.75px) scale(0.75)}33%{animation-timing-function:cubic-bezier(0.5, 0, 0.701732, 0.495819);transform:translateX(calc(4% - 0%)) translateY(-24.75px) scale(0.75)}66%{animation-timing-function:cubic-bezier(0.302435, 0.381352, 0.55, 0.956352);transform:translateX(calc(-4% - 0%)) translateY(-24.75px) scale(0.75)}100%{transform:translateX(calc(0 - 0%)) translateY(-24.75px) scale(0.75)}}.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field--with-leading-icon.mdc-text-field--outlined .mdc-floating-label--shake{animation:mdc-floating-label-shake-float-above-text-field-outlined-leading-icon 250ms 1}@keyframes mdc-floating-label-shake-float-above-text-field-outlined-leading-icon{0%{transform:translateX(calc(0 - 32px)) translateY(-34.75px) scale(0.75)}33%{animation-timing-function:cubic-bezier(0.5, 0, 0.701732, 0.495819);transform:translateX(calc(4% - 32px)) translateY(-34.75px) scale(0.75)}66%{animation-timing-function:cubic-bezier(0.302435, 0.381352, 0.55, 0.956352);transform:translateX(calc(-4% - 32px)) translateY(-34.75px) scale(0.75)}100%{transform:translateX(calc(0 - 32px)) translateY(-34.75px) scale(0.75)}}[dir=rtl] .mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field--with-leading-icon.mdc-text-field--outlined .mdc-floating-label--shake,.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field--with-leading-icon.mdc-text-field--outlined[dir=rtl] .mdc-floating-label--shake{animation:mdc-floating-label-shake-float-above-text-field-outlined-leading-icon 250ms 1}@keyframes mdc-floating-label-shake-float-above-text-field-outlined-leading-icon-rtl{0%{transform:translateX(calc(0 - -32px)) translateY(-34.75px) scale(0.75)}33%{animation-timing-function:cubic-bezier(0.5, 0, 0.701732, 0.495819);transform:translateX(calc(4% - -32px)) translateY(-34.75px) scale(0.75)}66%{animation-timing-function:cubic-bezier(0.302435, 0.381352, 0.55, 0.956352);transform:translateX(calc(-4% - -32px)) translateY(-34.75px) scale(0.75)}100%{transform:translateX(calc(0 - -32px)) translateY(-34.75px) scale(0.75)}}.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-floating-label{transition:transform 150ms cubic-bezier(0.4, 0, 0.2, 1),color 150ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-floating-label--shake{animation:mdc-floating-label-shake-float-above-standard 250ms 1}@keyframes mdc-floating-label-shake-float-above-standard{0%{transform:translateX(calc(0 - 0%)) translateY(-106%) scale(0.75)}33%{animation-timing-function:cubic-bezier(0.5, 0, 0.701732, 0.495819);transform:translateX(calc(4% - 0%)) translateY(-106%) scale(0.75)}66%{animation-timing-function:cubic-bezier(0.302435, 0.381352, 0.55, 0.956352);transform:translateX(calc(-4% - 0%)) translateY(-106%) scale(0.75)}100%{transform:translateX(calc(0 - 0%)) translateY(-106%) scale(0.75)}}.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-line-ripple::after{transition:transform 180ms cubic-bezier(0.4, 0, 0.2, 1),opacity 180ms cubic-bezier(0.4, 0, 0.2, 1)}'],encapsulation:2,data:{animation:[pH.transitionMessages]},changeDetection:0}),n})(),rl=(()=>{class n{}return n.\u0275fac=function(e){return new(e||n)},n.\u0275mod=he({type:n}),n.\u0275inj=ce({imports:[Ne,Ei,Sx,Ne]}),n})();const HD=os({passive:!0});let bH=(()=>{class n{constructor(e,i){this._platform=e,this._ngZone=i,this._monitoredElements=new Map}monitor(e){if(!this._platform.isBrowser)return Mn;const i=Oi(e),r=this._monitoredElements.get(i);if(r)return r.subject;const o=new P,s="cdk-text-field-autofilled",a=l=>{"cdk-text-field-autofill-start"!==l.animationName||i.classList.contains(s)?"cdk-text-field-autofill-end"===l.animationName&&i.classList.contains(s)&&(i.classList.remove(s),this._ngZone.run(()=>o.next({target:l.target,isAutofilled:!1}))):(i.classList.add(s),this._ngZone.run(()=>o.next({target:l.target,isAutofilled:!0})))};return this._ngZone.runOutsideAngular(()=>{i.addEventListener("animationstart",a,HD),i.classList.add("cdk-text-field-autofill-monitored")}),this._monitoredElements.set(i,{subject:o,unlisten:()=>{i.removeEventListener("animationstart",a,HD)}}),o}stopMonitoring(e){const i=Oi(e),r=this._monitoredElements.get(i);r&&(r.unlisten(),r.subject.complete(),i.classList.remove("cdk-text-field-autofill-monitored"),i.classList.remove("cdk-text-field-autofilled"),this._monitoredElements.delete(i))}ngOnDestroy(){this._monitoredElements.forEach((e,i)=>this.stopMonitoring(i))}}return n.\u0275fac=function(e){return new(e||n)(v(Ze),v(j))},n.\u0275prov=R({token:n,factory:n.\u0275fac,providedIn:"root"}),n})(),yH=(()=>{class n{}return n.\u0275fac=function(e){return new(e||n)},n.\u0275mod=he({type:n}),n.\u0275inj=ce({}),n})();const wn=new D("NgValueAccessor");function rr(n){return null==n||("string"==typeof n||Array.isArray(n))&&0===n.length}function WD(n){return null!=n&&"number"==typeof n.length}const xt=new D("NgValidators"),or=new D("NgAsyncValidators"),xH=/^(?=.{1,254}$)(?=.{1,64}@)[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+)*@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;class Jm{static min(t){return function QD(n){return t=>{if(rr(t.value)||rr(n))return null;const e=parseFloat(t.value);return!isNaN(e)&&e<n?{min:{min:n,actual:t.value}}:null}}(t)}static max(t){return function GD(n){return t=>{if(rr(t.value)||rr(n))return null;const e=parseFloat(t.value);return!isNaN(e)&&e>n?{max:{max:n,actual:t.value}}:null}}(t)}static required(t){return function zD(n){return rr(n.value)?{required:!0}:null}(t)}static requiredTrue(t){return function YD(n){return!0===n.value?null:{required:!0}}(t)}static email(t){return function XD(n){return rr(n.value)||xH.test(n.value)?null:{email:!0}}(t)}static minLength(t){return function ZD(n){return t=>rr(t.value)||!WD(t.value)?null:t.value.length<n?{minlength:{requiredLength:n,actualLength:t.value.length}}:null}(t)}static maxLength(t){return function $D(n){return t=>WD(t.value)&&t.value.length>n?{maxlength:{requiredLength:n,actualLength:t.value.length}}:null}(t)}static pattern(t){return function ew(n){if(!n)return tu;let t,e;return"string"==typeof n?(e="","^"!==n.charAt(0)&&(e+="^"),e+=n,"$"!==n.charAt(n.length-1)&&(e+="$"),t=new RegExp(e)):(e=n.toString(),t=n),i=>{if(rr(i.value))return null;const r=i.value;return t.test(r)?null:{pattern:{requiredPattern:e,actualValue:r}}}}(t)}static nullValidator(t){return null}static compose(t){return sw(t)}static composeAsync(t){return aw(t)}}function tu(n){return null}function tw(n){return null!=n}function nw(n){return na(n)?it(n):n}function iw(n){let t={};return n.forEach(e=>{t=null!=e?{...t,...e}:t}),0===Object.keys(t).length?null:t}function rw(n,t){return t.map(e=>e(n))}function ow(n){return n.map(t=>function DH(n){return!n.validate}(t)?t:e=>t.validate(e))}function sw(n){if(!n)return null;const t=n.filter(tw);return 0==t.length?null:function(e){return iw(rw(e,t))}}function Wm(n){return null!=n?sw(ow(n)):null}function aw(n){if(!n)return null;const t=n.filter(tw);return 0==t.length?null:function(e){return Xx(rw(e,t).map(nw)).pipe(B(iw))}}function Qm(n){return null!=n?aw(ow(n)):null}function lw(n,t){return null===n?[t]:Array.isArray(n)?[...n,t]:[n,t]}function cw(n){return n._rawValidators}function dw(n){return n._rawAsyncValidators}function Gm(n){return n?Array.isArray(n)?n:[n]:[]}function nu(n,t){return Array.isArray(n)?n.includes(t):n===t}function uw(n,t){const e=Gm(t);return Gm(n).forEach(r=>{nu(e,r)||e.push(r)}),e}function hw(n,t){return Gm(t).filter(e=>!nu(n,e))}class pw{constructor(){this._rawValidators=[],this._rawAsyncValidators=[],this._onDestroyCallbacks=[]}get value(){return this.control?this.control.value:null}get valid(){return this.control?this.control.valid:null}get invalid(){return this.control?this.control.invalid:null}get pending(){return this.control?this.control.pending:null}get disabled(){return this.control?this.control.disabled:null}get enabled(){return this.control?this.control.enabled:null}get errors(){return this.control?this.control.errors:null}get pristine(){return this.control?this.control.pristine:null}get dirty(){return this.control?this.control.dirty:null}get touched(){return this.control?this.control.touched:null}get status(){return this.control?this.control.status:null}get untouched(){return this.control?this.control.untouched:null}get statusChanges(){return this.control?this.control.statusChanges:null}get valueChanges(){return this.control?this.control.valueChanges:null}get path(){return null}_setValidators(t){this._rawValidators=t||[],this._composedValidatorFn=Wm(this._rawValidators)}_setAsyncValidators(t){this._rawAsyncValidators=t||[],this._composedAsyncValidatorFn=Qm(this._rawAsyncValidators)}get validator(){return this._composedValidatorFn||null}get asyncValidator(){return this._composedAsyncValidatorFn||null}_registerOnDestroy(t){this._onDestroyCallbacks.push(t)}_invokeOnDestroyCallbacks(){this._onDestroyCallbacks.forEach(t=>t()),this._onDestroyCallbacks=[]}reset(t){this.control&&this.control.reset(t)}hasError(t,e){return!!this.control&&this.control.hasError(t,e)}getError(t,e){return this.control?this.control.getError(t,e):null}}class Jt extends pw{get formDirective(){return null}get path(){return null}}class ai extends pw{constructor(){super(...arguments),this._parent=null,this.name=null,this.valueAccessor=null}}const ol="VALID",ru="INVALID",ms="PENDING",sl="DISABLED";function Zm(n){return(ou(n)?n.validators:n)||null}function $m(n,t){return(ou(t)?t.asyncValidators:n)||null}function ou(n){return null!=n&&!Array.isArray(n)&&"object"==typeof n}class yw{constructor(t,e){this._pendingDirty=!1,this._hasOwnPendingAsyncValidator=!1,this._pendingTouched=!1,this._onCollectionChange=()=>{},this._parent=null,this.pristine=!0,this.touched=!1,this._onDisabledChange=[],this._assignValidators(t),this._assignAsyncValidators(e)}get validator(){return this._composedValidatorFn}set validator(t){this._rawValidators=this._composedValidatorFn=t}get asyncValidator(){return this._composedAsyncValidatorFn}set asyncValidator(t){this._rawAsyncValidators=this._composedAsyncValidatorFn=t}get parent(){return this._parent}get valid(){return this.status===ol}get invalid(){return this.status===ru}get pending(){return this.status==ms}get disabled(){return this.status===sl}get enabled(){return this.status!==sl}get dirty(){return!this.pristine}get untouched(){return!this.touched}get updateOn(){return this._updateOn?this._updateOn:this.parent?this.parent.updateOn:"change"}setValidators(t){this._assignValidators(t)}setAsyncValidators(t){this._assignAsyncValidators(t)}addValidators(t){this.setValidators(uw(t,this._rawValidators))}addAsyncValidators(t){this.setAsyncValidators(uw(t,this._rawAsyncValidators))}removeValidators(t){this.setValidators(hw(t,this._rawValidators))}removeAsyncValidators(t){this.setAsyncValidators(hw(t,this._rawAsyncValidators))}hasValidator(t){return nu(this._rawValidators,t)}hasAsyncValidator(t){return nu(this._rawAsyncValidators,t)}clearValidators(){this.validator=null}clearAsyncValidators(){this.asyncValidator=null}markAsTouched(t={}){this.touched=!0,this._parent&&!t.onlySelf&&this._parent.markAsTouched(t)}markAllAsTouched(){this.markAsTouched({onlySelf:!0}),this._forEachChild(t=>t.markAllAsTouched())}markAsUntouched(t={}){this.touched=!1,this._pendingTouched=!1,this._forEachChild(e=>{e.markAsUntouched({onlySelf:!0})}),this._parent&&!t.onlySelf&&this._parent._updateTouched(t)}markAsDirty(t={}){this.pristine=!1,this._parent&&!t.onlySelf&&this._parent.markAsDirty(t)}markAsPristine(t={}){this.pristine=!0,this._pendingDirty=!1,this._forEachChild(e=>{e.markAsPristine({onlySelf:!0})}),this._parent&&!t.onlySelf&&this._parent._updatePristine(t)}markAsPending(t={}){this.status=ms,!1!==t.emitEvent&&this.statusChanges.emit(this.status),this._parent&&!t.onlySelf&&this._parent.markAsPending(t)}disable(t={}){const e=this._parentMarkedDirty(t.onlySelf);this.status=sl,this.errors=null,this._forEachChild(i=>{i.disable({...t,onlySelf:!0})}),this._updateValue(),!1!==t.emitEvent&&(this.valueChanges.emit(this.value),this.statusChanges.emit(this.status)),this._updateAncestors({...t,skipPristineCheck:e}),this._onDisabledChange.forEach(i=>i(!0))}enable(t={}){const e=this._parentMarkedDirty(t.onlySelf);this.status=ol,this._forEachChild(i=>{i.enable({...t,onlySelf:!0})}),this.updateValueAndValidity({onlySelf:!0,emitEvent:t.emitEvent}),this._updateAncestors({...t,skipPristineCheck:e}),this._onDisabledChange.forEach(i=>i(!1))}_updateAncestors(t){this._parent&&!t.onlySelf&&(this._parent.updateValueAndValidity(t),t.skipPristineCheck||this._parent._updatePristine(),this._parent._updateTouched())}setParent(t){this._parent=t}getRawValue(){return this.value}updateValueAndValidity(t={}){this._setInitialStatus(),this._updateValue(),this.enabled&&(this._cancelExistingSubscription(),this.errors=this._runValidator(),this.status=this._calculateStatus(),(this.status===ol||this.status===ms)&&this._runAsyncValidator(t.emitEvent)),!1!==t.emitEvent&&(this.valueChanges.emit(this.value),this.statusChanges.emit(this.status)),this._parent&&!t.onlySelf&&this._parent.updateValueAndValidity(t)}_updateTreeValidity(t={emitEvent:!0}){this._forEachChild(e=>e._updateTreeValidity(t)),this.updateValueAndValidity({onlySelf:!0,emitEvent:t.emitEvent})}_setInitialStatus(){this.status=this._allControlsDisabled()?sl:ol}_runValidator(){return this.validator?this.validator(this):null}_runAsyncValidator(t){if(this.asyncValidator){this.status=ms,this._hasOwnPendingAsyncValidator=!0;const e=nw(this.asyncValidator(this));this._asyncValidationSubscription=e.subscribe(i=>{this._hasOwnPendingAsyncValidator=!1,this.setErrors(i,{emitEvent:t})})}}_cancelExistingSubscription(){this._asyncValidationSubscription&&(this._asyncValidationSubscription.unsubscribe(),this._hasOwnPendingAsyncValidator=!1)}setErrors(t,e={}){this.errors=t,this._updateControlsErrors(!1!==e.emitEvent)}get(t){let e=t;return null==e||(Array.isArray(e)||(e=e.split(".")),0===e.length)?null:e.reduce((i,r)=>i&&i._find(r),this)}getError(t,e){const i=e?this.get(e):this;return i&&i.errors?i.errors[t]:null}hasError(t,e){return!!this.getError(t,e)}get root(){let t=this;for(;t._parent;)t=t._parent;return t}_updateControlsErrors(t){this.status=this._calculateStatus(),t&&this.statusChanges.emit(this.status),this._parent&&this._parent._updateControlsErrors(t)}_initObservables(){this.valueChanges=new O,this.statusChanges=new O}_calculateStatus(){return this._allControlsDisabled()?sl:this.errors?ru:this._hasOwnPendingAsyncValidator||this._anyControlsHaveStatus(ms)?ms:this._anyControlsHaveStatus(ru)?ru:ol}_anyControlsHaveStatus(t){return this._anyControls(e=>e.status===t)}_anyControlsDirty(){return this._anyControls(t=>t.dirty)}_anyControlsTouched(){return this._anyControls(t=>t.touched)}_updatePristine(t={}){this.pristine=!this._anyControlsDirty(),this._parent&&!t.onlySelf&&this._parent._updatePristine(t)}_updateTouched(t={}){this.touched=this._anyControlsTouched(),this._parent&&!t.onlySelf&&this._parent._updateTouched(t)}_registerOnCollectionChange(t){this._onCollectionChange=t}_setUpdateStrategy(t){ou(t)&&null!=t.updateOn&&(this._updateOn=t.updateOn)}_parentMarkedDirty(t){return!t&&!(!this._parent||!this._parent.dirty)&&!this._parent._anyControlsDirty()}_find(t){return null}_assignValidators(t){this._rawValidators=Array.isArray(t)?t.slice():t,this._composedValidatorFn=function VH(n){return Array.isArray(n)?Wm(n):n||null}(this._rawValidators)}_assignAsyncValidators(t){this._rawAsyncValidators=Array.isArray(t)?t.slice():t,this._composedAsyncValidatorFn=function UH(n){return Array.isArray(n)?Qm(n):n||null}(this._rawAsyncValidators)}}class eg extends yw{constructor(t,e,i){super(Zm(e),$m(i,e)),this.controls=t,this._initObservables(),this._setUpdateStrategy(e),this._setUpControls(),this.updateValueAndValidity({onlySelf:!0,emitEvent:!!this.asyncValidator})}registerControl(t,e){return this.controls[t]?this.controls[t]:(this.controls[t]=e,e.setParent(this),e._registerOnCollectionChange(this._onCollectionChange),e)}addControl(t,e,i={}){this.registerControl(t,e),this.updateValueAndValidity({emitEvent:i.emitEvent}),this._onCollectionChange()}removeControl(t,e={}){this.controls[t]&&this.controls[t]._registerOnCollectionChange(()=>{}),delete this.controls[t],this.updateValueAndValidity({emitEvent:e.emitEvent}),this._onCollectionChange()}setControl(t,e,i={}){this.controls[t]&&this.controls[t]._registerOnCollectionChange(()=>{}),delete this.controls[t],e&&this.registerControl(t,e),this.updateValueAndValidity({emitEvent:i.emitEvent}),this._onCollectionChange()}contains(t){return this.controls.hasOwnProperty(t)&&this.controls[t].enabled}setValue(t,e={}){(function bw(n,t,e){n._forEachChild((i,r)=>{if(void 0===e[r])throw new C(1002,"")})})(this,0,t),Object.keys(t).forEach(i=>{(function gw(n,t,e){const i=n.controls;if(!(t?Object.keys(i):i).length)throw new C(1e3,"");if(!i[e])throw new C(1001,"")})(this,!0,i),this.controls[i].setValue(t[i],{onlySelf:!0,emitEvent:e.emitEvent})}),this.updateValueAndValidity(e)}patchValue(t,e={}){null!=t&&(Object.keys(t).forEach(i=>{const r=this.controls[i];r&&r.patchValue(t[i],{onlySelf:!0,emitEvent:e.emitEvent})}),this.updateValueAndValidity(e))}reset(t={},e={}){this._forEachChild((i,r)=>{i.reset(t[r],{onlySelf:!0,emitEvent:e.emitEvent})}),this._updatePristine(e),this._updateTouched(e),this.updateValueAndValidity(e)}getRawValue(){return this._reduceChildren({},(t,e,i)=>(t[i]=e.getRawValue(),t))}_syncPendingControls(){let t=this._reduceChildren(!1,(e,i)=>!!i._syncPendingControls()||e);return t&&this.updateValueAndValidity({onlySelf:!0}),t}_forEachChild(t){Object.keys(this.controls).forEach(e=>{const i=this.controls[e];i&&t(i,e)})}_setUpControls(){this._forEachChild(t=>{t.setParent(this),t._registerOnCollectionChange(this._onCollectionChange)})}_updateValue(){this.value=this._reduceValue()}_anyControls(t){for(const[e,i]of Object.entries(this.controls))if(this.contains(e)&&t(i))return!0;return!1}_reduceValue(){return this._reduceChildren({},(e,i,r)=>((i.enabled||this.disabled)&&(e[r]=i.value),e))}_reduceChildren(t,e){let i=t;return this._forEachChild((r,o)=>{i=e(i,r,o)}),i}_allControlsDisabled(){for(const t of Object.keys(this.controls))if(this.controls[t].enabled)return!1;return Object.keys(this.controls).length>0||this.disabled}_find(t){return this.controls.hasOwnProperty(t)?this.controls[t]:null}}const su=new D("CallSetDisabledState",{providedIn:"root",factory:()=>vw}),vw="always";function al(n,t,e=vw){tg(n,t),t.valueAccessor.writeValue(n.value),(n.disabled||"always"===e)&&t.valueAccessor.setDisabledState?.(n.disabled),function _H(n,t){t.valueAccessor.registerOnChange(e=>{n._pendingValue=e,n._pendingChange=!0,n._pendingDirty=!0,"change"===n.updateOn&&Aw(n,t)})}(n,t),function jH(n,t){const e=(i,r)=>{t.valueAccessor.writeValue(i),r&&t.viewToModelUpdate(i)};n.registerOnChange(e),t._registerOnDestroy(()=>{n._unregisterOnChange(e)})}(n,t),function BH(n,t){t.valueAccessor.registerOnTouched(()=>{n._pendingTouched=!0,"blur"===n.updateOn&&n._pendingChange&&Aw(n,t),"submit"!==n.updateOn&&n.markAsTouched()})}(n,t),function PH(n,t){if(t.valueAccessor.setDisabledState){const e=i=>{t.valueAccessor.setDisabledState(i)};n.registerOnDisabledChange(e),t._registerOnDestroy(()=>{n._unregisterOnDisabledChange(e)})}}(n,t)}function lu(n,t,e=!0){const i=()=>{};t.valueAccessor&&(t.valueAccessor.registerOnChange(i),t.valueAccessor.registerOnTouched(i)),du(n,t),n&&(t._invokeOnDestroyCallbacks(),n._registerOnCollectionChange(()=>{}))}function cu(n,t){n.forEach(e=>{e.registerOnValidatorChange&&e.registerOnValidatorChange(t)})}function tg(n,t){const e=cw(n);null!==t.validator?n.setValidators(lw(e,t.validator)):"function"==typeof e&&n.setValidators([e]);const i=dw(n);null!==t.asyncValidator?n.setAsyncValidators(lw(i,t.asyncValidator)):"function"==typeof i&&n.setAsyncValidators([i]);const r=()=>n.updateValueAndValidity();cu(t._rawValidators,r),cu(t._rawAsyncValidators,r)}function du(n,t){let e=!1;if(null!==n){if(null!==t.validator){const r=cw(n);if(Array.isArray(r)&&r.length>0){const o=r.filter(s=>s!==t.validator);o.length!==r.length&&(e=!0,n.setValidators(o))}}if(null!==t.asyncValidator){const r=dw(n);if(Array.isArray(r)&&r.length>0){const o=r.filter(s=>s!==t.asyncValidator);o.length!==r.length&&(e=!0,n.setAsyncValidators(o))}}}const i=()=>{};return cu(t._rawValidators,i),cu(t._rawAsyncValidators,i),e}function Aw(n,t){n._pendingDirty&&n.markAsDirty(),n.setValue(n._pendingValue,{emitModelToViewChange:!1}),t.viewToModelUpdate(n._pendingValue),n._pendingChange=!1}function Sw(n,t){tg(n,t)}function Cw(n,t){n._syncPendingControls(),t.forEach(e=>{const i=e.control;"submit"===i.updateOn&&i._pendingChange&&(e.viewToModelUpdate(i._pendingValue),i._pendingChange=!1)})}const JH={provide:Jt,useExisting:De(()=>cl)},ll=(()=>Promise.resolve())();let cl=(()=>{class n extends Jt{constructor(e,i,r){super(),this.callSetDisabledState=r,this.submitted=!1,this._directives=new Set,this.ngSubmit=new O,this.form=new eg({},Wm(e),Qm(i))}ngAfterViewInit(){this._setUpdateStrategy()}get formDirective(){return this}get control(){return this.form}get path(){return[]}get controls(){return this.form.controls}addControl(e){ll.then(()=>{const i=this._findContainer(e.path);e.control=i.registerControl(e.name,e.control),al(e.control,e,this.callSetDisabledState),e.control.updateValueAndValidity({emitEvent:!1}),this._directives.add(e)})}getControl(e){return this.form.get(e.path)}removeControl(e){ll.then(()=>{const i=this._findContainer(e.path);i&&i.removeControl(e.name),this._directives.delete(e)})}addFormGroup(e){ll.then(()=>{const i=this._findContainer(e.path),r=new eg({});Sw(r,e),i.registerControl(e.name,r),r.updateValueAndValidity({emitEvent:!1})})}removeFormGroup(e){ll.then(()=>{const i=this._findContainer(e.path);i&&i.removeControl(e.name)})}getFormGroup(e){return this.form.get(e.path)}updateModel(e,i){ll.then(()=>{this.form.get(e.path).setValue(i)})}setValue(e){this.control.setValue(e)}onSubmit(e){return this.submitted=!0,Cw(this.form,this._directives),this.ngSubmit.emit(e),"dialog"===e?.target?.method}onReset(){this.resetForm()}resetForm(e){this.form.reset(e),this.submitted=!1}_setUpdateStrategy(){this.options&&null!=this.options.updateOn&&(this.form._updateOn=this.options.updateOn)}_findContainer(e){return e.pop(),e.length?this.form.get(e):this.form}}return n.\u0275fac=function(e){return new(e||n)(p(xt,10),p(or,10),p(su,8))},n.\u0275dir=M({type:n,selectors:[["form",3,"ngNoForm","",3,"formGroup",""],["ng-form"],["","ngForm",""]],hostBindings:function(e,i){1&e&&H("submit",function(o){return i.onSubmit(o)})("reset",function(){return i.onReset()})},inputs:{options:["ngFormOptions","options"]},outputs:{ngSubmit:"ngSubmit"},exportAs:["ngForm"],features:[ve([JH]),K]}),n})();function kw(n,t){const e=n.indexOf(t);e>-1&&n.splice(e,1)}function xw(n){return"object"==typeof n&&null!==n&&2===Object.keys(n).length&&"value"in n&&"disabled"in n}const Dw=class extends yw{constructor(t=null,e,i){super(Zm(e),$m(i,e)),this.defaultValue=null,this._onChange=[],this._pendingChange=!1,this._applyFormState(t),this._setUpdateStrategy(e),this._initObservables(),this.updateValueAndValidity({onlySelf:!0,emitEvent:!!this.asyncValidator}),ou(e)&&(e.nonNullable||e.initialValueIsDefault)&&(this.defaultValue=xw(t)?t.value:t)}setValue(t,e={}){this.value=this._pendingValue=t,this._onChange.length&&!1!==e.emitModelToViewChange&&this._onChange.forEach(i=>i(this.value,!1!==e.emitViewToModelChange)),this.updateValueAndValidity(e)}patchValue(t,e={}){this.setValue(t,e)}reset(t=this.defaultValue,e={}){this._applyFormState(t),this.markAsPristine(e),this.markAsUntouched(e),this.setValue(this.value,e),this._pendingChange=!1}_updateValue(){}_anyControls(t){return!1}_allControlsDisabled(){return this.disabled}registerOnChange(t){this._onChange.push(t)}_unregisterOnChange(t){kw(this._onChange,t)}registerOnDisabledChange(t){this._onDisabledChange.push(t)}_unregisterOnDisabledChange(t){kw(this._onDisabledChange,t)}_forEachChild(t){}_syncPendingControls(){return!("submit"!==this.updateOn||(this._pendingDirty&&this.markAsDirty(),this._pendingTouched&&this.markAsTouched(),!this._pendingChange)||(this.setValue(this._pendingValue,{onlySelf:!0,emitModelToViewChange:!1}),0))}_applyFormState(t){xw(t)?(this.value=this._pendingValue=t.value,t.disabled?this.disable({onlySelf:!0,emitEvent:!1}):this.enable({onlySelf:!0,emitEvent:!1})):this.value=this._pendingValue=t}},nL={provide:Jt,useExisting:De(()=>dl)};let dl=(()=>{class n extends Jt{constructor(e,i,r){super(),this.callSetDisabledState=r,this.submitted=!1,this._onCollectionChange=()=>this._updateDomValue(),this.directives=[],this.form=null,this.ngSubmit=new O,this._setValidators(e),this._setAsyncValidators(i)}ngOnChanges(e){this._checkFormPresent(),e.hasOwnProperty("form")&&(this._updateValidators(),this._updateDomValue(),this._updateRegistrations(),this._oldForm=this.form)}ngOnDestroy(){this.form&&(du(this.form,this),this.form._onCollectionChange===this._onCollectionChange&&this.form._registerOnCollectionChange(()=>{}))}get formDirective(){return this}get control(){return this.form}get path(){return[]}addControl(e){const i=this.form.get(e.path);return al(i,e,this.callSetDisabledState),i.updateValueAndValidity({emitEvent:!1}),this.directives.push(e),i}getControl(e){return this.form.get(e.path)}removeControl(e){lu(e.control||null,e,!1),function LH(n,t){const e=n.indexOf(t);e>-1&&n.splice(e,1)}(this.directives,e)}addFormGroup(e){this._setUpFormContainer(e)}removeFormGroup(e){this._cleanUpFormContainer(e)}getFormGroup(e){return this.form.get(e.path)}addFormArray(e){this._setUpFormContainer(e)}removeFormArray(e){this._cleanUpFormContainer(e)}getFormArray(e){return this.form.get(e.path)}updateModel(e,i){this.form.get(e.path).setValue(i)}onSubmit(e){return this.submitted=!0,Cw(this.form,this.directives),this.ngSubmit.emit(e),"dialog"===e?.target?.method}onReset(){this.resetForm()}resetForm(e){this.form.reset(e),this.submitted=!1}_updateDomValue(){this.directives.forEach(e=>{const i=e.control,r=this.form.get(e.path);i!==r&&(lu(i||null,e),(n=>n instanceof Dw)(r)&&(al(r,e,this.callSetDisabledState),e.control=r))}),this.form._updateTreeValidity({emitEvent:!1})}_setUpFormContainer(e){const i=this.form.get(e.path);Sw(i,e),i.updateValueAndValidity({emitEvent:!1})}_cleanUpFormContainer(e){if(this.form){const i=this.form.get(e.path);i&&function qH(n,t){return du(n,t)}(i,e)&&i.updateValueAndValidity({emitEvent:!1})}}_updateRegistrations(){this.form._registerOnCollectionChange(this._onCollectionChange),this._oldForm&&this._oldForm._registerOnCollectionChange(()=>{})}_updateValidators(){tg(this.form,this),this._oldForm&&du(this._oldForm,this)}_checkFormPresent(){}}return n.\u0275fac=function(e){return new(e||n)(p(xt,10),p(or,10),p(su,8))},n.\u0275dir=M({type:n,selectors:[["","formGroup",""]],hostBindings:function(e,i){1&e&&H("submit",function(o){return i.onSubmit(o)})("reset",function(){return i.onReset()})},inputs:{form:["formGroup","form"]},outputs:{ngSubmit:"ngSubmit"},exportAs:["ngForm"],features:[ve([nL]),K,ze]}),n})();const Gw=new D("MAT_INPUT_VALUE_ACCESSOR"),SL=["button","checkbox","file","hidden","image","radio","range","reset","submit"];let CL=0;const kL=Bx(class{constructor(n,t,e,i){this._defaultErrorStateMatcher=n,this._parentForm=t,this._parentFormGroup=e,this.ngControl=i,this.stateChanges=new P}});let uu=(()=>{class n extends kL{get disabled(){return this._disabled}set disabled(e){this._disabled=ue(e),this.focused&&(this.focused=!1,this.stateChanges.next())}get id(){return this._id}set id(e){this._id=e||this._uid}get required(){return this._required??this.ngControl?.control?.hasValidator(Jm.required)??!1}set required(e){this._required=ue(e)}get type(){return this._type}set type(e){this._type=e||"text",this._validateType(),!this._isTextarea&&mx().has(this._type)&&(this._elementRef.nativeElement.type=this._type)}get value(){return this._inputValueAccessor.value}set value(e){e!==this.value&&(this._inputValueAccessor.value=e,this.stateChanges.next())}get readonly(){return this._readonly}set readonly(e){this._readonly=ue(e)}constructor(e,i,r,o,s,a,l,c,d,u){super(a,o,s,r),this._elementRef=e,this._platform=i,this._autofillMonitor=c,this._formField=u,this._uid="mat-input-"+CL++,this.focused=!1,this.stateChanges=new P,this.controlType="mat-input",this.autofilled=!1,this._disabled=!1,this._type="text",this._readonly=!1,this._neverEmptyInputTypes=["date","datetime","datetime-local","month","time","week"].filter(m=>mx().has(m)),this._iOSKeyupListener=m=>{const g=m.target;!g.value&&0===g.selectionStart&&0===g.selectionEnd&&(g.setSelectionRange(1,1),g.setSelectionRange(0,0))};const h=this._elementRef.nativeElement,f=h.nodeName.toLowerCase();this._inputValueAccessor=l||h,this._previousNativeValue=this.value,this.id=this.id,i.IOS&&d.runOutsideAngular(()=>{e.nativeElement.addEventListener("keyup",this._iOSKeyupListener)}),this._isServer=!this._platform.isBrowser,this._isNativeSelect="select"===f,this._isTextarea="textarea"===f,this._isInFormField=!!u,this._isNativeSelect&&(this.controlType=h.multiple?"mat-native-select-multiple":"mat-native-select")}ngAfterViewInit(){this._platform.isBrowser&&this._autofillMonitor.monitor(this._elementRef.nativeElement).subscribe(e=>{this.autofilled=e.isAutofilled,this.stateChanges.next()})}ngOnChanges(){this.stateChanges.next()}ngOnDestroy(){this.stateChanges.complete(),this._platform.isBrowser&&this._autofillMonitor.stopMonitoring(this._elementRef.nativeElement),this._platform.IOS&&this._elementRef.nativeElement.removeEventListener("keyup",this._iOSKeyupListener)}ngDoCheck(){this.ngControl&&(this.updateErrorState(),null!==this.ngControl.disabled&&this.ngControl.disabled!==this.disabled&&(this.disabled=this.ngControl.disabled,this.stateChanges.next())),this._dirtyCheckNativeValue(),this._dirtyCheckPlaceholder()}focus(e){this._elementRef.nativeElement.focus(e)}_focusChanged(e){e!==this.focused&&(this.focused=e,this.stateChanges.next())}_onInput(){}_dirtyCheckNativeValue(){const e=this._elementRef.nativeElement.value;this._previousNativeValue!==e&&(this._previousNativeValue=e,this.stateChanges.next())}_dirtyCheckPlaceholder(){const e=this._getPlaceholder();if(e!==this._previousPlaceholder){const i=this._elementRef.nativeElement;this._previousPlaceholder=e,e?i.setAttribute("placeholder",e):i.removeAttribute("placeholder")}}_getPlaceholder(){return this.placeholder||null}_validateType(){SL.indexOf(this._type)}_isNeverEmpty(){return this._neverEmptyInputTypes.indexOf(this._type)>-1}_isBadInput(){let e=this._elementRef.nativeElement.validity;return e&&e.badInput}get empty(){return!(this._isNeverEmpty()||this._elementRef.nativeElement.value||this._isBadInput()||this.autofilled)}get shouldLabelFloat(){if(this._isNativeSelect){const e=this._elementRef.nativeElement,i=e.options[0];return this.focused||e.multiple||!this.empty||!!(e.selectedIndex>-1&&i&&i.label)}return this.focused||!this.empty}setDescribedByIds(e){e.length?this._elementRef.nativeElement.setAttribute("aria-describedby",e.join(" ")):this._elementRef.nativeElement.removeAttribute("aria-describedby")}onContainerClick(){this.focused||this.focus()}_isInlineSelect(){const e=this._elementRef.nativeElement;return this._isNativeSelect&&(e.multiple||e.size>1)}}return n.\u0275fac=function(e){return new(e||n)(p(z),p(Ze),p(ai,10),p(cl,8),p(dl,8),p(Kx),p(Gw,10),p(bH),p(j),p($d,8))},n.\u0275dir=M({type:n,selectors:[["input","matInput",""],["textarea","matInput",""],["select","matNativeControl",""],["input","matNativeControl",""],["textarea","matNativeControl",""]],hostAttrs:[1,"mat-mdc-input-element"],hostVars:18,hostBindings:function(e,i){1&e&&H("focus",function(){return i._focusChanged(!0)})("blur",function(){return i._focusChanged(!1)})("input",function(){return i._onInput()}),2&e&&(Rr("id",i.id)("disabled",i.disabled)("required",i.required),pe("name",i.name||null)("readonly",i.readonly&&!i._isNativeSelect||null)("aria-invalid",i.empty&&i.required?null:i.errorState)("aria-required",i.required)("id",i.id),me("mat-input-server",i._isServer)("mat-mdc-form-field-textarea-control",i._isInFormField&&i._isTextarea)("mat-mdc-form-field-input-control",i._isInFormField)("mdc-text-field__input",i._isInFormField)("mat-mdc-native-select-inline",i._isInlineSelect()))},inputs:{disabled:"disabled",id:"id",placeholder:"placeholder",name:"name",required:"required",type:"type",errorStateMatcher:"errorStateMatcher",userAriaDescribedBy:["aria-describedby","userAriaDescribedBy"],value:"value",readonly:"readonly"},exportAs:["matInput"],features:[ve([{provide:Hm,useExisting:n}]),K,ze]}),n})(),zw=(()=>{class n{}return n.\u0275fac=function(e){return new(e||n)},n.\u0275mod=he({type:n}),n.\u0275inj=ce({imports:[Ne,rl,rl,yH,Ne]}),n})();class ul{}ul.\u0275fac=function(t){return new(t||ul)},ul.\u0275cmp=ee({type:ul,selectors:[["app-login"]],decls:28,vars:0,consts:[[1,"container-custom"],[1,"container-form-group"],[2,"text-align","center","font-size","24px","margin-top","0px"],[2,"text-align","center"],["appearance","outline"],["type","email","matInput",""],["matPrefix",""],["type","password","matInput",""],[1,"container-actions-buttons"],["mat-raised-button","","color","primary","disabled","false","routerLink","/",2,"width","100%"],[2,"text-align","end"],[2,"color","#3f51b5"],["routerLink","/register",1,"link-register"]],template:function(t,e){1&t&&(b(0,"div",0)(1,"div",1)(2,"div")(3,"p",2),E(4,"Simple Gym Manager"),y(),b(5,"p",3),E(6,"Iniciar Sesi\xf3n"),y(),b(7,"mat-form-field",4)(8,"mat-label"),E(9,"Correo"),y(),q(10,"input",5),b(11,"mat-icon",6),E(12,"email"),y()(),b(13,"mat-form-field",4)(14,"mat-label"),E(15,"Contrase\xf1a"),y(),q(16,"input",7),b(17,"mat-icon",6),E(18,"lock"),y()()(),b(19,"div",8)(20,"button",9),E(21," Iniciar Sesi\xf3n "),y()(),b(22,"div",10)(23,"p",11)(24,"span"),E(25,"\xbfNo tienes cuenta?"),y(),b(26,"span",12),E(27,"\xa1Reg\xedstrate!"),y()()()()())},dependencies:[ns,eu,fs,Xd,uu,hs,Fi],styles:[".container-custom[_ngcontent-%COMP%]{background-image:url(fondo1.f2758bbdf2fc713a.jpg);background-position:center center;background-repeat:no-repeat;background-attachment:fixed;background-size:cover;background-color:#464646;height:100%;display:flex;align-items:center;justify-content:center;opacity:.9}.container-form-group[_ngcontent-%COMP%]{background-color:#fff;padding:20px;border-radius:10px;margin-left:12px;margin-right:12px;opacity:.85;max-width:500px}.container-actions-buttons[_ngcontent-%COMP%]{display:flex;justify-content:center;gap:8px}.link-register[_ngcontent-%COMP%]{margin-left:8px;font-weight:700;font-size:20px;cursor:pointer}"]});let xL=[{memberId:1,name:"Diana Reyes Morales",phone:"9612679876",expired:!1,expiration:"2023-03-01",photo:""},{memberId:2,name:"Roberto Santos L\xf3pez",phone:"9612679877",expired:!0,expiration:"2023-02-01",photo:""},{memberId:3,name:"Joaqu\xedn De la Rosa Cruz",phone:"9612679878",expired:!1,expiration:"2023-02-28",photo:""},{memberId:3,name:"Joaqu\xedn De la Rosa Cruz",phone:"9612679878",expired:!1,expiration:"2023-02-28",photo:""}];const Yw={width:"600px",enterAnimationDuration:500,exitAnimationDuration:0,data:null};class dg{attach(t){return this._attachedHost=t,t.attach(this)}detach(){let t=this._attachedHost;null!=t&&(this._attachedHost=null,t.detach())}get isAttached(){return null!=this._attachedHost}setAttachedHost(t){this._attachedHost=t}}class gs extends dg{constructor(t,e,i,r,o){super(),this.component=t,this.viewContainerRef=e,this.injector=i,this.componentFactoryResolver=r,this.projectableNodes=o}}class ug extends dg{constructor(t,e,i,r){super(),this.templateRef=t,this.viewContainerRef=e,this.context=i,this.injector=r}get origin(){return this.templateRef.elementRef}attach(t,e=this.context){return this.context=e,super.attach(t)}detach(){return this.context=void 0,super.detach()}}class DL extends dg{constructor(t){super(),this.element=t instanceof z?t.nativeElement:t}}class hg{constructor(){this._isDisposed=!1,this.attachDomPortal=null}hasAttached(){return!!this._attachedPortal}attach(t){return t instanceof gs?(this._attachedPortal=t,this.attachComponentPortal(t)):t instanceof ug?(this._attachedPortal=t,this.attachTemplatePortal(t)):this.attachDomPortal&&t instanceof DL?(this._attachedPortal=t,this.attachDomPortal(t)):void 0}detach(){this._attachedPortal&&(this._attachedPortal.setAttachedHost(null),this._attachedPortal=null),this._invokeDisposeFn()}dispose(){this.hasAttached()&&this.detach(),this._invokeDisposeFn(),this._isDisposed=!0}setDisposeFn(t){this._disposeFn=t}_invokeDisposeFn(){this._disposeFn&&(this._disposeFn(),this._disposeFn=null)}}class wL extends hg{constructor(t,e,i,r,o){super(),this.outletElement=t,this._componentFactoryResolver=e,this._appRef=i,this._defaultInjector=r,this.attachDomPortal=s=>{const a=s.element,l=this._document.createComment("dom-portal");a.parentNode.insertBefore(l,a),this.outletElement.appendChild(a),this._attachedPortal=s,super.setDisposeFn(()=>{l.parentNode&&l.parentNode.replaceChild(a,l)})},this._document=o}attachComponentPortal(t){const i=(t.componentFactoryResolver||this._componentFactoryResolver).resolveComponentFactory(t.component);let r;return t.viewContainerRef?(r=t.viewContainerRef.createComponent(i,t.viewContainerRef.length,t.injector||t.viewContainerRef.injector,t.projectableNodes||void 0),this.setDisposeFn(()=>r.destroy())):(r=i.create(t.injector||this._defaultInjector||ht.NULL),this._appRef.attachView(r.hostView),this.setDisposeFn(()=>{this._appRef.viewCount>0&&this._appRef.detachView(r.hostView),r.destroy()})),this.outletElement.appendChild(this._getComponentRootNode(r)),this._attachedPortal=t,r}attachTemplatePortal(t){let e=t.viewContainerRef,i=e.createEmbeddedView(t.templateRef,t.context,{injector:t.injector});return i.rootNodes.forEach(r=>this.outletElement.appendChild(r)),i.detectChanges(),this.setDisposeFn(()=>{let r=e.indexOf(i);-1!==r&&e.remove(r)}),this._attachedPortal=t,i}dispose(){super.dispose(),this.outletElement.remove()}_getComponentRootNode(t){return t.hostView.rootNodes[0]}}let hl=(()=>{class n extends hg{constructor(e,i,r){super(),this._componentFactoryResolver=e,this._viewContainerRef=i,this._isInitialized=!1,this.attached=new O,this.attachDomPortal=o=>{const s=o.element,a=this._document.createComment("dom-portal");o.setAttachedHost(this),s.parentNode.insertBefore(a,s),this._getRootNode().appendChild(s),this._attachedPortal=o,super.setDisposeFn(()=>{a.parentNode&&a.parentNode.replaceChild(s,a)})},this._document=r}get portal(){return this._attachedPortal}set portal(e){this.hasAttached()&&!e&&!this._isInitialized||(this.hasAttached()&&super.detach(),e&&super.attach(e),this._attachedPortal=e||null)}get attachedRef(){return this._attachedRef}ngOnInit(){this._isInitialized=!0}ngOnDestroy(){super.dispose(),this._attachedRef=this._attachedPortal=null}attachComponentPortal(e){e.setAttachedHost(this);const i=null!=e.viewContainerRef?e.viewContainerRef:this._viewContainerRef,o=(e.componentFactoryResolver||this._componentFactoryResolver).resolveComponentFactory(e.component),s=i.createComponent(o,i.length,e.injector||i.injector,e.projectableNodes||void 0);return i!==this._viewContainerRef&&this._getRootNode().appendChild(s.hostView.rootNodes[0]),super.setDisposeFn(()=>s.destroy()),this._attachedPortal=e,this._attachedRef=s,this.attached.emit(s),s}attachTemplatePortal(e){e.setAttachedHost(this);const i=this._viewContainerRef.createEmbeddedView(e.templateRef,e.context,{injector:e.injector});return super.setDisposeFn(()=>this._viewContainerRef.clear()),this._attachedPortal=e,this._attachedRef=i,this.attached.emit(i),i}_getRootNode(){const e=this._viewContainerRef.element.nativeElement;return e.nodeType===e.ELEMENT_NODE?e:e.parentNode}}return n.\u0275fac=function(e){return new(e||n)(p(kr),p(jt),p(Y))},n.\u0275dir=M({type:n,selectors:[["","cdkPortalOutlet",""]],inputs:{portal:["cdkPortalOutlet","portal"]},outputs:{attached:"attached"},exportAs:["cdkPortalOutlet"],features:[K]}),n})(),pl=(()=>{class n{}return n.\u0275fac=function(e){return new(e||n)},n.\u0275mod=he({type:n}),n.\u0275inj=ce({}),n})();const Xw=gx();class EL{constructor(t,e){this._viewportRuler=t,this._previousHTMLStyles={top:"",left:""},this._isEnabled=!1,this._document=e}attach(){}enable(){if(this._canBeEnabled()){const t=this._document.documentElement;this._previousScrollPosition=this._viewportRuler.getViewportScrollPosition(),this._previousHTMLStyles.left=t.style.left||"",this._previousHTMLStyles.top=t.style.top||"",t.style.left=at(-this._previousScrollPosition.left),t.style.top=at(-this._previousScrollPosition.top),t.classList.add("cdk-global-scrollblock"),this._isEnabled=!0}}disable(){if(this._isEnabled){const t=this._document.documentElement,i=t.style,r=this._document.body.style,o=i.scrollBehavior||"",s=r.scrollBehavior||"";this._isEnabled=!1,i.left=this._previousHTMLStyles.left,i.top=this._previousHTMLStyles.top,t.classList.remove("cdk-global-scrollblock"),Xw&&(i.scrollBehavior=r.scrollBehavior="auto"),window.scroll(this._previousScrollPosition.left,this._previousScrollPosition.top),Xw&&(i.scrollBehavior=o,r.scrollBehavior=s)}}_canBeEnabled(){if(this._document.documentElement.classList.contains("cdk-global-scrollblock")||this._isEnabled)return!1;const e=this._document.body,i=this._viewportRuler.getViewportSize();return e.scrollHeight>i.height||e.scrollWidth>i.width}}class IL{constructor(t,e,i,r){this._scrollDispatcher=t,this._ngZone=e,this._viewportRuler=i,this._config=r,this._scrollSubscription=null,this._detach=()=>{this.disable(),this._overlayRef.hasAttached()&&this._ngZone.run(()=>this._overlayRef.detach())}}attach(t){this._overlayRef=t}enable(){if(this._scrollSubscription)return;const t=this._scrollDispatcher.scrolled(0);this._config&&this._config.threshold&&this._config.threshold>1?(this._initialScrollPosition=this._viewportRuler.getViewportScrollPosition().top,this._scrollSubscription=t.subscribe(()=>{const e=this._viewportRuler.getViewportScrollPosition().top;Math.abs(e-this._initialScrollPosition)>this._config.threshold?this._detach():this._overlayRef.updatePosition()})):this._scrollSubscription=t.subscribe(this._detach)}disable(){this._scrollSubscription&&(this._scrollSubscription.unsubscribe(),this._scrollSubscription=null)}detach(){this.disable(),this._overlayRef=null}}class Zw{enable(){}disable(){}attach(){}}function pg(n,t){return t.some(e=>n.bottom<e.top||n.top>e.bottom||n.right<e.left||n.left>e.right)}function $w(n,t){return t.some(e=>n.top<e.top||n.bottom>e.bottom||n.left<e.left||n.right>e.right)}class RL{constructor(t,e,i,r){this._scrollDispatcher=t,this._viewportRuler=e,this._ngZone=i,this._config=r,this._scrollSubscription=null}attach(t){this._overlayRef=t}enable(){this._scrollSubscription||(this._scrollSubscription=this._scrollDispatcher.scrolled(this._config?this._config.scrollThrottle:0).subscribe(()=>{if(this._overlayRef.updatePosition(),this._config&&this._config.autoClose){const e=this._overlayRef.overlayElement.getBoundingClientRect(),{width:i,height:r}=this._viewportRuler.getViewportSize();pg(e,[{width:i,height:r,bottom:r,right:i,top:0,left:0}])&&(this.disable(),this._ngZone.run(()=>this._overlayRef.detach()))}}))}disable(){this._scrollSubscription&&(this._scrollSubscription.unsubscribe(),this._scrollSubscription=null)}detach(){this.disable(),this._overlayRef=null}}let TL=(()=>{class n{constructor(e,i,r,o){this._scrollDispatcher=e,this._viewportRuler=i,this._ngZone=r,this.noop=()=>new Zw,this.close=s=>new IL(this._scrollDispatcher,this._ngZone,this._viewportRuler,s),this.block=()=>new EL(this._viewportRuler,this._document),this.reposition=s=>new RL(this._scrollDispatcher,this._viewportRuler,this._ngZone,s),this._document=o}}return n.\u0275fac=function(e){return new(e||n)(v(ps),v(tl),v(j),v(Y))},n.\u0275prov=R({token:n,factory:n.\u0275fac,providedIn:"root"}),n})();class hu{constructor(t){if(this.scrollStrategy=new Zw,this.panelClass="",this.hasBackdrop=!1,this.backdropClass="cdk-overlay-dark-backdrop",this.disposeOnNavigation=!1,t){const e=Object.keys(t);for(const i of e)void 0!==t[i]&&(this[i]=t[i])}}}class ML{constructor(t,e){this.connectionPair=t,this.scrollableViewProperties=e}}let eE=(()=>{class n{constructor(e){this._attachedOverlays=[],this._document=e}ngOnDestroy(){this.detach()}add(e){this.remove(e),this._attachedOverlays.push(e)}remove(e){const i=this._attachedOverlays.indexOf(e);i>-1&&this._attachedOverlays.splice(i,1),0===this._attachedOverlays.length&&this.detach()}}return n.\u0275fac=function(e){return new(e||n)(v(Y))},n.\u0275prov=R({token:n,factory:n.\u0275fac,providedIn:"root"}),n})(),OL=(()=>{class n extends eE{constructor(e,i){super(e),this._ngZone=i,this._keydownListener=r=>{const o=this._attachedOverlays;for(let s=o.length-1;s>-1;s--)if(o[s]._keydownEvents.observers.length>0){const a=o[s]._keydownEvents;this._ngZone?this._ngZone.run(()=>a.next(r)):a.next(r);break}}}add(e){super.add(e),this._isAttached||(this._ngZone?this._ngZone.runOutsideAngular(()=>this._document.body.addEventListener("keydown",this._keydownListener)):this._document.body.addEventListener("keydown",this._keydownListener),this._isAttached=!0)}detach(){this._isAttached&&(this._document.body.removeEventListener("keydown",this._keydownListener),this._isAttached=!1)}}return n.\u0275fac=function(e){return new(e||n)(v(Y),v(j,8))},n.\u0275prov=R({token:n,factory:n.\u0275fac,providedIn:"root"}),n})(),FL=(()=>{class n extends eE{constructor(e,i,r){super(e),this._platform=i,this._ngZone=r,this._cursorStyleIsSet=!1,this._pointerDownListener=o=>{this._pointerDownEventTarget=Xi(o)},this._clickListener=o=>{const s=Xi(o),a="click"===o.type&&this._pointerDownEventTarget?this._pointerDownEventTarget:s;this._pointerDownEventTarget=null;const l=this._attachedOverlays.slice();for(let c=l.length-1;c>-1;c--){const d=l[c];if(d._outsidePointerEvents.observers.length<1||!d.hasAttached())continue;if(d.overlayElement.contains(s)||d.overlayElement.contains(a))break;const u=d._outsidePointerEvents;this._ngZone?this._ngZone.run(()=>u.next(o)):u.next(o)}}}add(e){if(super.add(e),!this._isAttached){const i=this._document.body;this._ngZone?this._ngZone.runOutsideAngular(()=>this._addEventListeners(i)):this._addEventListeners(i),this._platform.IOS&&!this._cursorStyleIsSet&&(this._cursorOriginalValue=i.style.cursor,i.style.cursor="pointer",this._cursorStyleIsSet=!0),this._isAttached=!0}}detach(){if(this._isAttached){const e=this._document.body;e.removeEventListener("pointerdown",this._pointerDownListener,!0),e.removeEventListener("click",this._clickListener,!0),e.removeEventListener("auxclick",this._clickListener,!0),e.removeEventListener("contextmenu",this._clickListener,!0),this._platform.IOS&&this._cursorStyleIsSet&&(e.style.cursor=this._cursorOriginalValue,this._cursorStyleIsSet=!1),this._isAttached=!1}}_addEventListeners(e){e.addEventListener("pointerdown",this._pointerDownListener,!0),e.addEventListener("click",this._clickListener,!0),e.addEventListener("auxclick",this._clickListener,!0),e.addEventListener("contextmenu",this._clickListener,!0)}}return n.\u0275fac=function(e){return new(e||n)(v(Y),v(Ze),v(j,8))},n.\u0275prov=R({token:n,factory:n.\u0275fac,providedIn:"root"}),n})(),pu=(()=>{class n{constructor(e,i){this._platform=i,this._document=e}ngOnDestroy(){this._containerElement?.remove()}getContainerElement(){return this._containerElement||this._createContainer(),this._containerElement}_createContainer(){const e="cdk-overlay-container";if(this._platform.isBrowser||ym()){const r=this._document.querySelectorAll(`.${e}[platform="server"], .${e}[platform="test"]`);for(let o=0;o<r.length;o++)r[o].remove()}const i=this._document.createElement("div");i.classList.add(e),ym()?i.setAttribute("platform","test"):this._platform.isBrowser||i.setAttribute("platform","server"),this._document.body.appendChild(i),this._containerElement=i}}return n.\u0275fac=function(e){return new(e||n)(v(Y),v(Ze))},n.\u0275prov=R({token:n,factory:n.\u0275fac,providedIn:"root"}),n})();class fl{constructor(t,e,i,r,o,s,a,l,c,d=!1){this._portalOutlet=t,this._host=e,this._pane=i,this._config=r,this._ngZone=o,this._keyboardDispatcher=s,this._document=a,this._location=l,this._outsideClickDispatcher=c,this._animationsDisabled=d,this._backdropElement=null,this._backdropClick=new P,this._attachments=new P,this._detachments=new P,this._locationChanges=ke.EMPTY,this._backdropClickHandler=u=>this._backdropClick.next(u),this._backdropTransitionendHandler=u=>{this._disposeBackdrop(u.target)},this._keydownEvents=new P,this._outsidePointerEvents=new P,r.scrollStrategy&&(this._scrollStrategy=r.scrollStrategy,this._scrollStrategy.attach(this)),this._positionStrategy=r.positionStrategy}get overlayElement(){return this._pane}get backdropElement(){return this._backdropElement}get hostElement(){return this._host}attach(t){!this._host.parentElement&&this._previousHostParent&&this._previousHostParent.appendChild(this._host);const e=this._portalOutlet.attach(t);return this._positionStrategy&&this._positionStrategy.attach(this),this._updateStackingOrder(),this._updateElementSize(),this._updateElementDirection(),this._scrollStrategy&&this._scrollStrategy.enable(),this._ngZone.onStable.pipe(Ue(1)).subscribe(()=>{this.hasAttached()&&this.updatePosition()}),this._togglePointerEvents(!0),this._config.hasBackdrop&&this._attachBackdrop(),this._config.panelClass&&this._toggleClasses(this._pane,this._config.panelClass,!0),this._attachments.next(),this._keyboardDispatcher.add(this),this._config.disposeOnNavigation&&(this._locationChanges=this._location.subscribe(()=>this.dispose())),this._outsideClickDispatcher.add(this),"function"==typeof e?.onDestroy&&e.onDestroy(()=>{this.hasAttached()&&this._ngZone.runOutsideAngular(()=>Promise.resolve().then(()=>this.detach()))}),e}detach(){if(!this.hasAttached())return;this.detachBackdrop(),this._togglePointerEvents(!1),this._positionStrategy&&this._positionStrategy.detach&&this._positionStrategy.detach(),this._scrollStrategy&&this._scrollStrategy.disable();const t=this._portalOutlet.detach();return this._detachments.next(),this._keyboardDispatcher.remove(this),this._detachContentWhenStable(),this._locationChanges.unsubscribe(),this._outsideClickDispatcher.remove(this),t}dispose(){const t=this.hasAttached();this._positionStrategy&&this._positionStrategy.dispose(),this._disposeScrollStrategy(),this._disposeBackdrop(this._backdropElement),this._locationChanges.unsubscribe(),this._keyboardDispatcher.remove(this),this._portalOutlet.dispose(),this._attachments.complete(),this._backdropClick.complete(),this._keydownEvents.complete(),this._outsidePointerEvents.complete(),this._outsideClickDispatcher.remove(this),this._host?.remove(),this._previousHostParent=this._pane=this._host=null,t&&this._detachments.next(),this._detachments.complete()}hasAttached(){return this._portalOutlet.hasAttached()}backdropClick(){return this._backdropClick}attachments(){return this._attachments}detachments(){return this._detachments}keydownEvents(){return this._keydownEvents}outsidePointerEvents(){return this._outsidePointerEvents}getConfig(){return this._config}updatePosition(){this._positionStrategy&&this._positionStrategy.apply()}updatePositionStrategy(t){t!==this._positionStrategy&&(this._positionStrategy&&this._positionStrategy.dispose(),this._positionStrategy=t,this.hasAttached()&&(t.attach(this),this.updatePosition()))}updateSize(t){this._config={...this._config,...t},this._updateElementSize()}setDirection(t){this._config={...this._config,direction:t},this._updateElementDirection()}addPanelClass(t){this._pane&&this._toggleClasses(this._pane,t,!0)}removePanelClass(t){this._pane&&this._toggleClasses(this._pane,t,!1)}getDirection(){const t=this._config.direction;return t?"string"==typeof t?t:t.value:"ltr"}updateScrollStrategy(t){t!==this._scrollStrategy&&(this._disposeScrollStrategy(),this._scrollStrategy=t,this.hasAttached()&&(t.attach(this),t.enable()))}_updateElementDirection(){this._host.setAttribute("dir",this.getDirection())}_updateElementSize(){if(!this._pane)return;const t=this._pane.style;t.width=at(this._config.width),t.height=at(this._config.height),t.minWidth=at(this._config.minWidth),t.minHeight=at(this._config.minHeight),t.maxWidth=at(this._config.maxWidth),t.maxHeight=at(this._config.maxHeight)}_togglePointerEvents(t){this._pane.style.pointerEvents=t?"":"none"}_attachBackdrop(){const t="cdk-overlay-backdrop-showing";this._backdropElement=this._document.createElement("div"),this._backdropElement.classList.add("cdk-overlay-backdrop"),this._animationsDisabled&&this._backdropElement.classList.add("cdk-overlay-backdrop-noop-animation"),this._config.backdropClass&&this._toggleClasses(this._backdropElement,this._config.backdropClass,!0),this._host.parentElement.insertBefore(this._backdropElement,this._host),this._backdropElement.addEventListener("click",this._backdropClickHandler),!this._animationsDisabled&&typeof requestAnimationFrame<"u"?this._ngZone.runOutsideAngular(()=>{requestAnimationFrame(()=>{this._backdropElement&&this._backdropElement.classList.add(t)})}):this._backdropElement.classList.add(t)}_updateStackingOrder(){this._host.nextSibling&&this._host.parentNode.appendChild(this._host)}detachBackdrop(){const t=this._backdropElement;if(t){if(this._animationsDisabled)return void this._disposeBackdrop(t);t.classList.remove("cdk-overlay-backdrop-showing"),this._ngZone.runOutsideAngular(()=>{t.addEventListener("transitionend",this._backdropTransitionendHandler)}),t.style.pointerEvents="none",this._backdropTimeout=this._ngZone.runOutsideAngular(()=>setTimeout(()=>{this._disposeBackdrop(t)},500))}}_toggleClasses(t,e,i){const r=jd(e||[]).filter(o=>!!o);r.length&&(i?t.classList.add(...r):t.classList.remove(...r))}_detachContentWhenStable(){this._ngZone.runOutsideAngular(()=>{const t=this._ngZone.onStable.pipe(Te($t(this._attachments,this._detachments))).subscribe(()=>{(!this._pane||!this._host||0===this._pane.children.length)&&(this._pane&&this._config.panelClass&&this._toggleClasses(this._pane,this._config.panelClass,!1),this._host&&this._host.parentElement&&(this._previousHostParent=this._host.parentElement,this._host.remove()),t.unsubscribe())})})}_disposeScrollStrategy(){const t=this._scrollStrategy;t&&(t.disable(),t.detach&&t.detach())}_disposeBackdrop(t){t&&(t.removeEventListener("click",this._backdropClickHandler),t.removeEventListener("transitionend",this._backdropTransitionendHandler),t.remove(),this._backdropElement===t&&(this._backdropElement=null)),this._backdropTimeout&&(clearTimeout(this._backdropTimeout),this._backdropTimeout=void 0)}}const tE="cdk-overlay-connected-position-bounding-box",VL=/([A-Za-z%]+)$/;class nE{get positions(){return this._preferredPositions}constructor(t,e,i,r,o){this._viewportRuler=e,this._document=i,this._platform=r,this._overlayContainer=o,this._lastBoundingBoxSize={width:0,height:0},this._isPushed=!1,this._canPush=!0,this._growAfterOpen=!1,this._hasFlexibleDimensions=!0,this._positionLocked=!1,this._viewportMargin=0,this._scrollables=[],this._preferredPositions=[],this._positionChanges=new P,this._resizeSubscription=ke.EMPTY,this._offsetX=0,this._offsetY=0,this._appliedPanelClasses=[],this.positionChanges=this._positionChanges,this.setOrigin(t)}attach(t){this._validatePositions(),t.hostElement.classList.add(tE),this._overlayRef=t,this._boundingBox=t.hostElement,this._pane=t.overlayElement,this._isDisposed=!1,this._isInitialRender=!0,this._lastPosition=null,this._resizeSubscription.unsubscribe(),this._resizeSubscription=this._viewportRuler.change().subscribe(()=>{this._isInitialRender=!0,this.apply()})}apply(){if(this._isDisposed||!this._platform.isBrowser)return;if(!this._isInitialRender&&this._positionLocked&&this._lastPosition)return void this.reapplyLastPosition();this._clearPanelClasses(),this._resetOverlayElementStyles(),this._resetBoundingBoxStyles(),this._viewportRect=this._getNarrowedViewportRect(),this._originRect=this._getOriginRect(),this._overlayRect=this._pane.getBoundingClientRect(),this._containerRect=this._overlayContainer.getContainerElement().getBoundingClientRect();const t=this._originRect,e=this._overlayRect,i=this._viewportRect,r=this._containerRect,o=[];let s;for(let a of this._preferredPositions){let l=this._getOriginPoint(t,r,a),c=this._getOverlayPoint(l,e,a),d=this._getOverlayFit(c,e,i,a);if(d.isCompletelyWithinViewport)return this._isPushed=!1,void this._applyPosition(a,l);this._canFitWithFlexibleDimensions(d,c,i)?o.push({position:a,origin:l,overlayRect:e,boundingBoxRect:this._calculateBoundingBoxRect(l,a)}):(!s||s.overlayFit.visibleArea<d.visibleArea)&&(s={overlayFit:d,overlayPoint:c,originPoint:l,position:a,overlayRect:e})}if(o.length){let a=null,l=-1;for(const c of o){const d=c.boundingBoxRect.width*c.boundingBoxRect.height*(c.position.weight||1);d>l&&(l=d,a=c)}return this._isPushed=!1,void this._applyPosition(a.position,a.origin)}if(this._canPush)return this._isPushed=!0,void this._applyPosition(s.position,s.originPoint);this._applyPosition(s.position,s.originPoint)}detach(){this._clearPanelClasses(),this._lastPosition=null,this._previousPushAmount=null,this._resizeSubscription.unsubscribe()}dispose(){this._isDisposed||(this._boundingBox&&Xr(this._boundingBox.style,{top:"",left:"",right:"",bottom:"",height:"",width:"",alignItems:"",justifyContent:""}),this._pane&&this._resetOverlayElementStyles(),this._overlayRef&&this._overlayRef.hostElement.classList.remove(tE),this.detach(),this._positionChanges.complete(),this._overlayRef=this._boundingBox=null,this._isDisposed=!0)}reapplyLastPosition(){if(this._isDisposed||!this._platform.isBrowser)return;const t=this._lastPosition;if(t){this._originRect=this._getOriginRect(),this._overlayRect=this._pane.getBoundingClientRect(),this._viewportRect=this._getNarrowedViewportRect(),this._containerRect=this._overlayContainer.getContainerElement().getBoundingClientRect();const e=this._getOriginPoint(this._originRect,this._containerRect,t);this._applyPosition(t,e)}else this.apply()}withScrollableContainers(t){return this._scrollables=t,this}withPositions(t){return this._preferredPositions=t,-1===t.indexOf(this._lastPosition)&&(this._lastPosition=null),this._validatePositions(),this}withViewportMargin(t){return this._viewportMargin=t,this}withFlexibleDimensions(t=!0){return this._hasFlexibleDimensions=t,this}withGrowAfterOpen(t=!0){return this._growAfterOpen=t,this}withPush(t=!0){return this._canPush=t,this}withLockedPosition(t=!0){return this._positionLocked=t,this}setOrigin(t){return this._origin=t,this}withDefaultOffsetX(t){return this._offsetX=t,this}withDefaultOffsetY(t){return this._offsetY=t,this}withTransformOriginOn(t){return this._transformOriginSelector=t,this}_getOriginPoint(t,e,i){let r,o;if("center"==i.originX)r=t.left+t.width/2;else{const s=this._isRtl()?t.right:t.left,a=this._isRtl()?t.left:t.right;r="start"==i.originX?s:a}return e.left<0&&(r-=e.left),o="center"==i.originY?t.top+t.height/2:"top"==i.originY?t.top:t.bottom,e.top<0&&(o-=e.top),{x:r,y:o}}_getOverlayPoint(t,e,i){let r,o;return r="center"==i.overlayX?-e.width/2:"start"===i.overlayX?this._isRtl()?-e.width:0:this._isRtl()?0:-e.width,o="center"==i.overlayY?-e.height/2:"top"==i.overlayY?0:-e.height,{x:t.x+r,y:t.y+o}}_getOverlayFit(t,e,i,r){const o=rE(e);let{x:s,y:a}=t,l=this._getOffset(r,"x"),c=this._getOffset(r,"y");l&&(s+=l),c&&(a+=c);let h=0-a,f=a+o.height-i.height,m=this._subtractOverflows(o.width,0-s,s+o.width-i.width),g=this._subtractOverflows(o.height,h,f),A=m*g;return{visibleArea:A,isCompletelyWithinViewport:o.width*o.height===A,fitsInViewportVertically:g===o.height,fitsInViewportHorizontally:m==o.width}}_canFitWithFlexibleDimensions(t,e,i){if(this._hasFlexibleDimensions){const r=i.bottom-e.y,o=i.right-e.x,s=iE(this._overlayRef.getConfig().minHeight),a=iE(this._overlayRef.getConfig().minWidth);return(t.fitsInViewportVertically||null!=s&&s<=r)&&(t.fitsInViewportHorizontally||null!=a&&a<=o)}return!1}_pushOverlayOnScreen(t,e,i){if(this._previousPushAmount&&this._positionLocked)return{x:t.x+this._previousPushAmount.x,y:t.y+this._previousPushAmount.y};const r=rE(e),o=this._viewportRect,s=Math.max(t.x+r.width-o.width,0),a=Math.max(t.y+r.height-o.height,0),l=Math.max(o.top-i.top-t.y,0),c=Math.max(o.left-i.left-t.x,0);let d=0,u=0;return d=r.width<=o.width?c||-s:t.x<this._viewportMargin?o.left-i.left-t.x:0,u=r.height<=o.height?l||-a:t.y<this._viewportMargin?o.top-i.top-t.y:0,this._previousPushAmount={x:d,y:u},{x:t.x+d,y:t.y+u}}_applyPosition(t,e){if(this._setTransformOrigin(t),this._setOverlayElementStyles(e,t),this._setBoundingBoxStyles(e,t),t.panelClass&&this._addPanelClasses(t.panelClass),this._lastPosition=t,this._positionChanges.observers.length){const i=this._getScrollVisibility(),r=new ML(t,i);this._positionChanges.next(r)}this._isInitialRender=!1}_setTransformOrigin(t){if(!this._transformOriginSelector)return;const e=this._boundingBox.querySelectorAll(this._transformOriginSelector);let i,r=t.overlayY;i="center"===t.overlayX?"center":this._isRtl()?"start"===t.overlayX?"right":"left":"start"===t.overlayX?"left":"right";for(let o=0;o<e.length;o++)e[o].style.transformOrigin=`${i} ${r}`}_calculateBoundingBoxRect(t,e){const i=this._viewportRect,r=this._isRtl();let o,s,a,d,u,h;if("top"===e.overlayY)s=t.y,o=i.height-s+this._viewportMargin;else if("bottom"===e.overlayY)a=i.height-t.y+2*this._viewportMargin,o=i.height-a+this._viewportMargin;else{const f=Math.min(i.bottom-t.y+i.top,t.y),m=this._lastBoundingBoxSize.height;o=2*f,s=t.y-f,o>m&&!this._isInitialRender&&!this._growAfterOpen&&(s=t.y-m/2)}if("end"===e.overlayX&&!r||"start"===e.overlayX&&r)h=i.width-t.x+this._viewportMargin,d=t.x-this._viewportMargin;else if("start"===e.overlayX&&!r||"end"===e.overlayX&&r)u=t.x,d=i.right-t.x;else{const f=Math.min(i.right-t.x+i.left,t.x),m=this._lastBoundingBoxSize.width;d=2*f,u=t.x-f,d>m&&!this._isInitialRender&&!this._growAfterOpen&&(u=t.x-m/2)}return{top:s,left:u,bottom:a,right:h,width:d,height:o}}_setBoundingBoxStyles(t,e){const i=this._calculateBoundingBoxRect(t,e);!this._isInitialRender&&!this._growAfterOpen&&(i.height=Math.min(i.height,this._lastBoundingBoxSize.height),i.width=Math.min(i.width,this._lastBoundingBoxSize.width));const r={};if(this._hasExactPosition())r.top=r.left="0",r.bottom=r.right=r.maxHeight=r.maxWidth="",r.width=r.height="100%";else{const o=this._overlayRef.getConfig().maxHeight,s=this._overlayRef.getConfig().maxWidth;r.height=at(i.height),r.top=at(i.top),r.bottom=at(i.bottom),r.width=at(i.width),r.left=at(i.left),r.right=at(i.right),r.alignItems="center"===e.overlayX?"center":"end"===e.overlayX?"flex-end":"flex-start",r.justifyContent="center"===e.overlayY?"center":"bottom"===e.overlayY?"flex-end":"flex-start",o&&(r.maxHeight=at(o)),s&&(r.maxWidth=at(s))}this._lastBoundingBoxSize=i,Xr(this._boundingBox.style,r)}_resetBoundingBoxStyles(){Xr(this._boundingBox.style,{top:"0",left:"0",right:"0",bottom:"0",height:"",width:"",alignItems:"",justifyContent:""})}_resetOverlayElementStyles(){Xr(this._pane.style,{top:"",left:"",bottom:"",right:"",position:"",transform:""})}_setOverlayElementStyles(t,e){const i={},r=this._hasExactPosition(),o=this._hasFlexibleDimensions,s=this._overlayRef.getConfig();if(r){const d=this._viewportRuler.getViewportScrollPosition();Xr(i,this._getExactOverlayY(e,t,d)),Xr(i,this._getExactOverlayX(e,t,d))}else i.position="static";let a="",l=this._getOffset(e,"x"),c=this._getOffset(e,"y");l&&(a+=`translateX(${l}px) `),c&&(a+=`translateY(${c}px)`),i.transform=a.trim(),s.maxHeight&&(r?i.maxHeight=at(s.maxHeight):o&&(i.maxHeight="")),s.maxWidth&&(r?i.maxWidth=at(s.maxWidth):o&&(i.maxWidth="")),Xr(this._pane.style,i)}_getExactOverlayY(t,e,i){let r={top:"",bottom:""},o=this._getOverlayPoint(e,this._overlayRect,t);return this._isPushed&&(o=this._pushOverlayOnScreen(o,this._overlayRect,i)),"bottom"===t.overlayY?r.bottom=this._document.documentElement.clientHeight-(o.y+this._overlayRect.height)+"px":r.top=at(o.y),r}_getExactOverlayX(t,e,i){let s,r={left:"",right:""},o=this._getOverlayPoint(e,this._overlayRect,t);return this._isPushed&&(o=this._pushOverlayOnScreen(o,this._overlayRect,i)),s=this._isRtl()?"end"===t.overlayX?"left":"right":"end"===t.overlayX?"right":"left","right"===s?r.right=this._document.documentElement.clientWidth-(o.x+this._overlayRect.width)+"px":r.left=at(o.x),r}_getScrollVisibility(){const t=this._getOriginRect(),e=this._pane.getBoundingClientRect(),i=this._scrollables.map(r=>r.getElementRef().nativeElement.getBoundingClientRect());return{isOriginClipped:$w(t,i),isOriginOutsideView:pg(t,i),isOverlayClipped:$w(e,i),isOverlayOutsideView:pg(e,i)}}_subtractOverflows(t,...e){return e.reduce((i,r)=>i-Math.max(r,0),t)}_getNarrowedViewportRect(){const t=this._document.documentElement.clientWidth,e=this._document.documentElement.clientHeight,i=this._viewportRuler.getViewportScrollPosition();return{top:i.top+this._viewportMargin,left:i.left+this._viewportMargin,right:i.left+t-this._viewportMargin,bottom:i.top+e-this._viewportMargin,width:t-2*this._viewportMargin,height:e-2*this._viewportMargin}}_isRtl(){return"rtl"===this._overlayRef.getDirection()}_hasExactPosition(){return!this._hasFlexibleDimensions||this._isPushed}_getOffset(t,e){return"x"===e?null==t.offsetX?this._offsetX:t.offsetX:null==t.offsetY?this._offsetY:t.offsetY}_validatePositions(){}_addPanelClasses(t){this._pane&&jd(t).forEach(e=>{""!==e&&-1===this._appliedPanelClasses.indexOf(e)&&(this._appliedPanelClasses.push(e),this._pane.classList.add(e))})}_clearPanelClasses(){this._pane&&(this._appliedPanelClasses.forEach(t=>{this._pane.classList.remove(t)}),this._appliedPanelClasses=[])}_getOriginRect(){const t=this._origin;if(t instanceof z)return t.nativeElement.getBoundingClientRect();if(t instanceof Element)return t.getBoundingClientRect();const e=t.width||0,i=t.height||0;return{top:t.y,bottom:t.y+i,left:t.x,right:t.x+e,height:i,width:e}}}function Xr(n,t){for(let e in t)t.hasOwnProperty(e)&&(n[e]=t[e]);return n}function iE(n){if("number"!=typeof n&&null!=n){const[t,e]=n.split(VL);return e&&"px"!==e?null:parseFloat(t)}return n||null}function rE(n){return{top:Math.floor(n.top),right:Math.floor(n.right),bottom:Math.floor(n.bottom),left:Math.floor(n.left),width:Math.floor(n.width),height:Math.floor(n.height)}}const oE="cdk-global-overlay-wrapper";class UL{constructor(){this._cssPosition="static",this._topOffset="",this._bottomOffset="",this._alignItems="",this._xPosition="",this._xOffset="",this._width="",this._height="",this._isDisposed=!1}attach(t){const e=t.getConfig();this._overlayRef=t,this._width&&!e.width&&t.updateSize({width:this._width}),this._height&&!e.height&&t.updateSize({height:this._height}),t.hostElement.classList.add(oE),this._isDisposed=!1}top(t=""){return this._bottomOffset="",this._topOffset=t,this._alignItems="flex-start",this}left(t=""){return this._xOffset=t,this._xPosition="left",this}bottom(t=""){return this._topOffset="",this._bottomOffset=t,this._alignItems="flex-end",this}right(t=""){return this._xOffset=t,this._xPosition="right",this}start(t=""){return this._xOffset=t,this._xPosition="start",this}end(t=""){return this._xOffset=t,this._xPosition="end",this}width(t=""){return this._overlayRef?this._overlayRef.updateSize({width:t}):this._width=t,this}height(t=""){return this._overlayRef?this._overlayRef.updateSize({height:t}):this._height=t,this}centerHorizontally(t=""){return this.left(t),this._xPosition="center",this}centerVertically(t=""){return this.top(t),this._alignItems="center",this}apply(){if(!this._overlayRef||!this._overlayRef.hasAttached())return;const t=this._overlayRef.overlayElement.style,e=this._overlayRef.hostElement.style,i=this._overlayRef.getConfig(),{width:r,height:o,maxWidth:s,maxHeight:a}=i,l=!("100%"!==r&&"100vw"!==r||s&&"100%"!==s&&"100vw"!==s),c=!("100%"!==o&&"100vh"!==o||a&&"100%"!==a&&"100vh"!==a),d=this._xPosition,u=this._xOffset,h="rtl"===this._overlayRef.getConfig().direction;let f="",m="",g="";l?g="flex-start":"center"===d?(g="center",h?m=u:f=u):h?"left"===d||"end"===d?(g="flex-end",f=u):("right"===d||"start"===d)&&(g="flex-start",m=u):"left"===d||"start"===d?(g="flex-start",f=u):("right"===d||"end"===d)&&(g="flex-end",m=u),t.position=this._cssPosition,t.marginLeft=l?"0":f,t.marginTop=c?"0":this._topOffset,t.marginBottom=this._bottomOffset,t.marginRight=l?"0":m,e.justifyContent=g,e.alignItems=c?"flex-start":this._alignItems}dispose(){if(this._isDisposed||!this._overlayRef)return;const t=this._overlayRef.overlayElement.style,e=this._overlayRef.hostElement,i=e.style;e.classList.remove(oE),i.justifyContent=i.alignItems=t.marginTop=t.marginBottom=t.marginLeft=t.marginRight=t.position="",this._overlayRef=null,this._isDisposed=!0}}let NL=(()=>{class n{constructor(e,i,r,o){this._viewportRuler=e,this._document=i,this._platform=r,this._overlayContainer=o}global(){return new UL}flexibleConnectedTo(e){return new nE(e,this._viewportRuler,this._document,this._platform,this._overlayContainer)}}return n.\u0275fac=function(e){return new(e||n)(v(tl),v(Y),v(Ze),v(pu))},n.\u0275prov=R({token:n,factory:n.\u0275fac,providedIn:"root"}),n})(),PL=0,En=(()=>{class n{constructor(e,i,r,o,s,a,l,c,d,u,h,f){this.scrollStrategies=e,this._overlayContainer=i,this._componentFactoryResolver=r,this._positionBuilder=o,this._keyboardDispatcher=s,this._injector=a,this._ngZone=l,this._document=c,this._directionality=d,this._location=u,this._outsideClickDispatcher=h,this._animationsModuleType=f}create(e){const i=this._createHostElement(),r=this._createPaneElement(i),o=this._createPortalOutlet(r),s=new hu(e);return s.direction=s.direction||this._directionality.value,new fl(o,i,r,s,this._ngZone,this._keyboardDispatcher,this._document,this._location,this._outsideClickDispatcher,"NoopAnimations"===this._animationsModuleType)}position(){return this._positionBuilder}_createPaneElement(e){const i=this._document.createElement("div");return i.id="cdk-overlay-"+PL++,i.classList.add("cdk-overlay-pane"),e.appendChild(i),i}_createHostElement(){const e=this._document.createElement("div");return this._overlayContainer.getContainerElement().appendChild(e),e}_createPortalOutlet(e){return this._appRef||(this._appRef=this._injector.get(Mr)),new wL(e,this._componentFactoryResolver,this._appRef,this._injector,this._document)}}return n.\u0275fac=function(e){return new(e||n)(v(TL),v(pu),v(kr),v(NL),v(OL),v(ht),v(j),v(Y),v(Lt),v(ga),v(FL),v(Kt,8))},n.\u0275prov=R({token:n,factory:n.\u0275fac,providedIn:"root"}),n})();const _L=[{originX:"start",originY:"bottom",overlayX:"start",overlayY:"top"},{originX:"start",originY:"top",overlayX:"start",overlayY:"bottom"},{originX:"end",originY:"top",overlayX:"end",overlayY:"bottom"},{originX:"end",originY:"bottom",overlayX:"end",overlayY:"top"}],sE=new D("cdk-connected-overlay-scroll-strategy");let fg=(()=>{class n{constructor(e){this.elementRef=e}}return n.\u0275fac=function(e){return new(e||n)(p(z))},n.\u0275dir=M({type:n,selectors:[["","cdk-overlay-origin",""],["","overlay-origin",""],["","cdkOverlayOrigin",""]],exportAs:["cdkOverlayOrigin"],standalone:!0}),n})(),aE=(()=>{class n{get offsetX(){return this._offsetX}set offsetX(e){this._offsetX=e,this._position&&this._updatePositionStrategy(this._position)}get offsetY(){return this._offsetY}set offsetY(e){this._offsetY=e,this._position&&this._updatePositionStrategy(this._position)}get hasBackdrop(){return this._hasBackdrop}set hasBackdrop(e){this._hasBackdrop=ue(e)}get lockPosition(){return this._lockPosition}set lockPosition(e){this._lockPosition=ue(e)}get flexibleDimensions(){return this._flexibleDimensions}set flexibleDimensions(e){this._flexibleDimensions=ue(e)}get growAfterOpen(){return this._growAfterOpen}set growAfterOpen(e){this._growAfterOpen=ue(e)}get push(){return this._push}set push(e){this._push=ue(e)}constructor(e,i,r,o,s){this._overlay=e,this._dir=s,this._hasBackdrop=!1,this._lockPosition=!1,this._growAfterOpen=!1,this._flexibleDimensions=!1,this._push=!1,this._backdropSubscription=ke.EMPTY,this._attachSubscription=ke.EMPTY,this._detachSubscription=ke.EMPTY,this._positionSubscription=ke.EMPTY,this.viewportMargin=0,this.open=!1,this.disableClose=!1,this.backdropClick=new O,this.positionChange=new O,this.attach=new O,this.detach=new O,this.overlayKeydown=new O,this.overlayOutsideClick=new O,this._templatePortal=new ug(i,r),this._scrollStrategyFactory=o,this.scrollStrategy=this._scrollStrategyFactory()}get overlayRef(){return this._overlayRef}get dir(){return this._dir?this._dir.value:"ltr"}ngOnDestroy(){this._attachSubscription.unsubscribe(),this._detachSubscription.unsubscribe(),this._backdropSubscription.unsubscribe(),this._positionSubscription.unsubscribe(),this._overlayRef&&this._overlayRef.dispose()}ngOnChanges(e){this._position&&(this._updatePositionStrategy(this._position),this._overlayRef.updateSize({width:this.width,minWidth:this.minWidth,height:this.height,minHeight:this.minHeight}),e.origin&&this.open&&this._position.apply()),e.open&&(this.open?this._attachOverlay():this._detachOverlay())}_createOverlay(){(!this.positions||!this.positions.length)&&(this.positions=_L);const e=this._overlayRef=this._overlay.create(this._buildConfig());this._attachSubscription=e.attachments().subscribe(()=>this.attach.emit()),this._detachSubscription=e.detachments().subscribe(()=>this.detach.emit()),e.keydownEvents().subscribe(i=>{this.overlayKeydown.next(i),27===i.keyCode&&!this.disableClose&&!Ht(i)&&(i.preventDefault(),this._detachOverlay())}),this._overlayRef.outsidePointerEvents().subscribe(i=>{this.overlayOutsideClick.next(i)})}_buildConfig(){const e=this._position=this.positionStrategy||this._createPositionStrategy(),i=new hu({direction:this._dir,positionStrategy:e,scrollStrategy:this.scrollStrategy,hasBackdrop:this.hasBackdrop});return(this.width||0===this.width)&&(i.width=this.width),(this.height||0===this.height)&&(i.height=this.height),(this.minWidth||0===this.minWidth)&&(i.minWidth=this.minWidth),(this.minHeight||0===this.minHeight)&&(i.minHeight=this.minHeight),this.backdropClass&&(i.backdropClass=this.backdropClass),this.panelClass&&(i.panelClass=this.panelClass),i}_updatePositionStrategy(e){const i=this.positions.map(r=>({originX:r.originX,originY:r.originY,overlayX:r.overlayX,overlayY:r.overlayY,offsetX:r.offsetX||this.offsetX,offsetY:r.offsetY||this.offsetY,panelClass:r.panelClass||void 0}));return e.setOrigin(this._getFlexibleConnectedPositionStrategyOrigin()).withPositions(i).withFlexibleDimensions(this.flexibleDimensions).withPush(this.push).withGrowAfterOpen(this.growAfterOpen).withViewportMargin(this.viewportMargin).withLockedPosition(this.lockPosition).withTransformOriginOn(this.transformOriginSelector)}_createPositionStrategy(){const e=this._overlay.position().flexibleConnectedTo(this._getFlexibleConnectedPositionStrategyOrigin());return this._updatePositionStrategy(e),e}_getFlexibleConnectedPositionStrategyOrigin(){return this.origin instanceof fg?this.origin.elementRef:this.origin}_attachOverlay(){this._overlayRef?this._overlayRef.getConfig().hasBackdrop=this.hasBackdrop:this._createOverlay(),this._overlayRef.hasAttached()||this._overlayRef.attach(this._templatePortal),this.hasBackdrop?this._backdropSubscription=this._overlayRef.backdropClick().subscribe(e=>{this.backdropClick.emit(e)}):this._backdropSubscription.unsubscribe(),this._positionSubscription.unsubscribe(),this.positionChange.observers.length>0&&(this._positionSubscription=this._position.positionChanges.pipe(ak(()=>this.positionChange.observers.length>0)).subscribe(e=>{this.positionChange.emit(e),0===this.positionChange.observers.length&&this._positionSubscription.unsubscribe()}))}_detachOverlay(){this._overlayRef&&this._overlayRef.detach(),this._backdropSubscription.unsubscribe(),this._positionSubscription.unsubscribe()}}return n.\u0275fac=function(e){return new(e||n)(p(En),p(qn),p(jt),p(sE),p(Lt,8))},n.\u0275dir=M({type:n,selectors:[["","cdk-connected-overlay",""],["","connected-overlay",""],["","cdkConnectedOverlay",""]],inputs:{origin:["cdkConnectedOverlayOrigin","origin"],positions:["cdkConnectedOverlayPositions","positions"],positionStrategy:["cdkConnectedOverlayPositionStrategy","positionStrategy"],offsetX:["cdkConnectedOverlayOffsetX","offsetX"],offsetY:["cdkConnectedOverlayOffsetY","offsetY"],width:["cdkConnectedOverlayWidth","width"],height:["cdkConnectedOverlayHeight","height"],minWidth:["cdkConnectedOverlayMinWidth","minWidth"],minHeight:["cdkConnectedOverlayMinHeight","minHeight"],backdropClass:["cdkConnectedOverlayBackdropClass","backdropClass"],panelClass:["cdkConnectedOverlayPanelClass","panelClass"],viewportMargin:["cdkConnectedOverlayViewportMargin","viewportMargin"],scrollStrategy:["cdkConnectedOverlayScrollStrategy","scrollStrategy"],open:["cdkConnectedOverlayOpen","open"],disableClose:["cdkConnectedOverlayDisableClose","disableClose"],transformOriginSelector:["cdkConnectedOverlayTransformOriginOn","transformOriginSelector"],hasBackdrop:["cdkConnectedOverlayHasBackdrop","hasBackdrop"],lockPosition:["cdkConnectedOverlayLockPosition","lockPosition"],flexibleDimensions:["cdkConnectedOverlayFlexibleDimensions","flexibleDimensions"],growAfterOpen:["cdkConnectedOverlayGrowAfterOpen","growAfterOpen"],push:["cdkConnectedOverlayPush","push"]},outputs:{backdropClick:"backdropClick",positionChange:"positionChange",attach:"attach",detach:"detach",overlayKeydown:"overlayKeydown",overlayOutsideClick:"overlayOutsideClick"},exportAs:["cdkConnectedOverlay"],standalone:!0,features:[ze]}),n})();const jL={provide:sE,deps:[En],useFactory:function BL(n){return()=>n.scrollStrategies.reposition()}};let ml=(()=>{class n{}return n.\u0275fac=function(e){return new(e||n)},n.\u0275mod=he({type:n}),n.\u0275inj=ce({providers:[En,jL],imports:[Wa,pl,SD,SD]}),n})();function qL(n,t){}class fu{constructor(){this.role="dialog",this.panelClass="",this.hasBackdrop=!0,this.backdropClass="",this.disableClose=!1,this.width="",this.height="",this.data=null,this.ariaDescribedBy=null,this.ariaLabelledBy=null,this.ariaLabel=null,this.ariaModal=!0,this.autoFocus="first-tabbable",this.restoreFocus=!0,this.closeOnNavigation=!0,this.closeOnDestroy=!0}}let lE=(()=>{class n extends hg{constructor(e,i,r,o,s,a,l,c){super(),this._elementRef=e,this._focusTrapFactory=i,this._config=o,this._interactivityChecker=s,this._ngZone=a,this._overlayRef=l,this._focusMonitor=c,this._elementFocusedBeforeDialogWasOpened=null,this._closeInteractionType=null,this.attachDomPortal=d=>{this._portalOutlet.hasAttached();const u=this._portalOutlet.attachDomPortal(d);return this._contentAttached(),u},this._ariaLabelledBy=this._config.ariaLabelledBy||null,this._document=r}_contentAttached(){this._initializeFocusTrap(),this._handleBackdropClicks(),this._captureInitialFocus()}_captureInitialFocus(){this._trapFocus()}ngOnDestroy(){this._restoreFocus()}attachComponentPortal(e){this._portalOutlet.hasAttached();const i=this._portalOutlet.attachComponentPortal(e);return this._contentAttached(),i}attachTemplatePortal(e){this._portalOutlet.hasAttached();const i=this._portalOutlet.attachTemplatePortal(e);return this._contentAttached(),i}_recaptureFocus(){this._containsFocus()||this._trapFocus()}_forceFocus(e,i){this._interactivityChecker.isFocusable(e)||(e.tabIndex=-1,this._ngZone.runOutsideAngular(()=>{const r=()=>{e.removeEventListener("blur",r),e.removeEventListener("mousedown",r),e.removeAttribute("tabindex")};e.addEventListener("blur",r),e.addEventListener("mousedown",r)})),e.focus(i)}_focusByCssSelector(e,i){let r=this._elementRef.nativeElement.querySelector(e);r&&this._forceFocus(r,i)}_trapFocus(){const e=this._elementRef.nativeElement;switch(this._config.autoFocus){case!1:case"dialog":this._containsFocus()||e.focus();break;case!0:case"first-tabbable":this._focusTrap.focusInitialElementWhenReady().then(i=>{i||this._focusDialogContainer()});break;case"first-heading":this._focusByCssSelector('h1, h2, h3, h4, h5, h6, [role="heading"]');break;default:this._focusByCssSelector(this._config.autoFocus)}}_restoreFocus(){const e=this._config.restoreFocus;let i=null;if("string"==typeof e?i=this._document.querySelector(e):"boolean"==typeof e?i=e?this._elementFocusedBeforeDialogWasOpened:null:e&&(i=e),this._config.restoreFocus&&i&&"function"==typeof i.focus){const r=ja(),o=this._elementRef.nativeElement;(!r||r===this._document.body||r===o||o.contains(r))&&(this._focusMonitor?(this._focusMonitor.focusVia(i,this._closeInteractionType),this._closeInteractionType=null):i.focus())}this._focusTrap&&this._focusTrap.destroy()}_focusDialogContainer(){this._elementRef.nativeElement.focus&&this._elementRef.nativeElement.focus()}_containsFocus(){const e=this._elementRef.nativeElement,i=ja();return e===i||e.contains(i)}_initializeFocusTrap(){this._focusTrap=this._focusTrapFactory.create(this._elementRef.nativeElement),this._document&&(this._elementFocusedBeforeDialogWasOpened=ja())}_handleBackdropClicks(){this._overlayRef.backdropClick().subscribe(()=>{this._config.disableClose&&this._recaptureFocus()})}}return n.\u0275fac=function(e){return new(e||n)(p(z),p(Ja),p(Y,8),p(fu),p(La),p(j),p(fl),p(er))},n.\u0275cmp=ee({type:n,selectors:[["cdk-dialog-container"]],viewQuery:function(e,i){if(1&e&&je(hl,7),2&e){let r;oe(r=se())&&(i._portalOutlet=r.first)}},hostAttrs:["tabindex","-1",1,"cdk-dialog-container"],hostVars:6,hostBindings:function(e,i){2&e&&pe("id",i._config.id||null)("role",i._config.role)("aria-modal",i._config.ariaModal)("aria-labelledby",i._config.ariaLabel?null:i._ariaLabelledBy)("aria-label",i._config.ariaLabel)("aria-describedby",i._config.ariaDescribedBy||null)},features:[K],decls:1,vars:0,consts:[["cdkPortalOutlet",""]],template:function(e,i){1&e&&J(0,qL,0,0,"ng-template",0)},dependencies:[hl],styles:[".cdk-dialog-container{display:block;width:100%;height:100%;min-height:inherit;max-height:inherit}"],encapsulation:2}),n})();class mg{constructor(t,e){this.overlayRef=t,this.config=e,this.closed=new P,this.disableClose=e.disableClose,this.backdropClick=t.backdropClick(),this.keydownEvents=t.keydownEvents(),this.outsidePointerEvents=t.outsidePointerEvents(),this.id=e.id,this.keydownEvents.subscribe(i=>{27===i.keyCode&&!this.disableClose&&!Ht(i)&&(i.preventDefault(),this.close(void 0,{focusOrigin:"keyboard"}))}),this.backdropClick.subscribe(()=>{this.disableClose||this.close(void 0,{focusOrigin:"mouse"})})}close(t,e){if(this.containerInstance){const i=this.closed;this.containerInstance._closeInteractionType=e?.focusOrigin||"program",this.overlayRef.dispose(),i.next(t),i.complete(),this.componentInstance=this.containerInstance=null}}updatePosition(){return this.overlayRef.updatePosition(),this}updateSize(t="",e=""){return this.overlayRef.updateSize({width:t,height:e}),this}addPanelClass(t){return this.overlayRef.addPanelClass(t),this}removePanelClass(t){return this.overlayRef.removePanelClass(t),this}}const cE=new D("DialogScrollStrategy"),KL=new D("DialogData"),HL=new D("DefaultDialogConfig"),JL={provide:cE,deps:[En],useFactory:function LL(n){return()=>n.scrollStrategies.block()}};let WL=0,dE=(()=>{class n{get openDialogs(){return this._parentDialog?this._parentDialog.openDialogs:this._openDialogsAtThisLevel}get afterOpened(){return this._parentDialog?this._parentDialog.afterOpened:this._afterOpenedAtThisLevel}constructor(e,i,r,o,s,a){this._overlay=e,this._injector=i,this._defaultOptions=r,this._parentDialog=o,this._overlayContainer=s,this._openDialogsAtThisLevel=[],this._afterAllClosedAtThisLevel=new P,this._afterOpenedAtThisLevel=new P,this._ariaHiddenElements=new Map,this.afterAllClosed=Nr(()=>this.openDialogs.length?this._getAfterAllClosed():this._getAfterAllClosed().pipe(xn(void 0))),this._scrollStrategy=a}open(e,i){(i={...this._defaultOptions||new fu,...i}).id=i.id||"cdk-dialog-"+WL++,i.id&&this.getDialogById(i.id);const o=this._getOverlayConfig(i),s=this._overlay.create(o),a=new mg(s,i),l=this._attachContainer(s,a,i);return a.containerInstance=l,this._attachDialogContent(e,a,l,i),this.openDialogs.length||this._hideNonDialogContentFromAssistiveTechnology(),this.openDialogs.push(a),a.closed.subscribe(()=>this._removeOpenDialog(a,!0)),this.afterOpened.next(a),a}closeAll(){gg(this.openDialogs,e=>e.close())}getDialogById(e){return this.openDialogs.find(i=>i.id===e)}ngOnDestroy(){gg(this._openDialogsAtThisLevel,e=>{!1===e.config.closeOnDestroy&&this._removeOpenDialog(e,!1)}),gg(this._openDialogsAtThisLevel,e=>e.close()),this._afterAllClosedAtThisLevel.complete(),this._afterOpenedAtThisLevel.complete(),this._openDialogsAtThisLevel=[]}_getOverlayConfig(e){const i=new hu({positionStrategy:e.positionStrategy||this._overlay.position().global().centerHorizontally().centerVertically(),scrollStrategy:e.scrollStrategy||this._scrollStrategy(),panelClass:e.panelClass,hasBackdrop:e.hasBackdrop,direction:e.direction,minWidth:e.minWidth,minHeight:e.minHeight,maxWidth:e.maxWidth,maxHeight:e.maxHeight,width:e.width,height:e.height,disposeOnNavigation:e.closeOnNavigation});return e.backdropClass&&(i.backdropClass=e.backdropClass),i}_attachContainer(e,i,r){const o=r.injector||r.viewContainerRef?.injector,s=[{provide:fu,useValue:r},{provide:mg,useValue:i},{provide:fl,useValue:e}];let a;r.container?"function"==typeof r.container?a=r.container:(a=r.container.type,s.push(...r.container.providers(r))):a=lE;const l=new gs(a,r.viewContainerRef,ht.create({parent:o||this._injector,providers:s}),r.componentFactoryResolver);return e.attach(l).instance}_attachDialogContent(e,i,r,o){if(e instanceof qn){const s=this._createInjector(o,i,r,void 0);let a={$implicit:o.data,dialogRef:i};o.templateContext&&(a={...a,..."function"==typeof o.templateContext?o.templateContext():o.templateContext}),r.attachTemplatePortal(new ug(e,null,a,s))}else{const s=this._createInjector(o,i,r,this._injector),a=r.attachComponentPortal(new gs(e,o.viewContainerRef,s,o.componentFactoryResolver));i.componentInstance=a.instance}}_createInjector(e,i,r,o){const s=e.injector||e.viewContainerRef?.injector,a=[{provide:KL,useValue:e.data},{provide:mg,useValue:i}];return e.providers&&("function"==typeof e.providers?a.push(...e.providers(i,e,r)):a.push(...e.providers)),e.direction&&(!s||!s.get(Lt,null,{optional:!0}))&&a.push({provide:Lt,useValue:{value:e.direction,change:N()}}),ht.create({parent:s||o,providers:a})}_removeOpenDialog(e,i){const r=this.openDialogs.indexOf(e);r>-1&&(this.openDialogs.splice(r,1),this.openDialogs.length||(this._ariaHiddenElements.forEach((o,s)=>{o?s.setAttribute("aria-hidden",o):s.removeAttribute("aria-hidden")}),this._ariaHiddenElements.clear(),i&&this._getAfterAllClosed().next()))}_hideNonDialogContentFromAssistiveTechnology(){const e=this._overlayContainer.getContainerElement();if(e.parentElement){const i=e.parentElement.children;for(let r=i.length-1;r>-1;r--){const o=i[r];o!==e&&"SCRIPT"!==o.nodeName&&"STYLE"!==o.nodeName&&!o.hasAttribute("aria-live")&&(this._ariaHiddenElements.set(o,o.getAttribute("aria-hidden")),o.setAttribute("aria-hidden","true"))}}}_getAfterAllClosed(){const e=this._parentDialog;return e?e._getAfterAllClosed():this._afterAllClosedAtThisLevel}}return n.\u0275fac=function(e){return new(e||n)(v(En),v(ht),v(HL,8),v(n,12),v(pu),v(cE))},n.\u0275prov=R({token:n,factory:n.\u0275fac}),n})();function gg(n,t){let e=n.length;for(;e--;)t(n[e])}let QL=(()=>{class n{}return n.\u0275fac=function(e){return new(e||n)},n.\u0275mod=he({type:n}),n.\u0275inj=ce({providers:[dE,JL],imports:[ml,pl,Dm,pl]}),n})();function GL(n,t){}class mu{constructor(){this.role="dialog",this.panelClass="",this.hasBackdrop=!0,this.backdropClass="",this.disableClose=!1,this.width="",this.height="",this.maxWidth="80vw",this.data=null,this.ariaDescribedBy=null,this.ariaLabelledBy=null,this.ariaLabel=null,this.ariaModal=!0,this.autoFocus="first-tabbable",this.restoreFocus=!0,this.delayFocusTrap=!0,this.closeOnNavigation=!0}}const bg="mdc-dialog--open",uE="mdc-dialog--opening",hE="mdc-dialog--closing";let XL=(()=>{class n extends lE{constructor(e,i,r,o,s,a,l,c){super(e,i,r,o,s,a,l,c),this._animationStateChanged=new O}_captureInitialFocus(){this._config.delayFocusTrap||this._trapFocus()}_openAnimationDone(e){this._config.delayFocusTrap&&this._trapFocus(),this._animationStateChanged.next({state:"opened",totalTime:e})}}return n.\u0275fac=function(e){return new(e||n)(p(z),p(Ja),p(Y,8),p(mu),p(La),p(j),p(fl),p(er))},n.\u0275cmp=ee({type:n,selectors:[["ng-component"]],features:[K],decls:0,vars:0,template:function(e,i){},encapsulation:2}),n})();const pE="--mat-dialog-transition-duration";function fE(n){return null==n?null:"number"==typeof n?n:n.endsWith("ms")?oi(n.substring(0,n.length-2)):n.endsWith("s")?1e3*oi(n.substring(0,n.length-1)):"0"===n?0:null}let ZL=(()=>{class n extends XL{constructor(e,i,r,o,s,a,l,c,d){super(e,i,r,o,s,a,l,d),this._animationMode=c,this._animationsEnabled="NoopAnimations"!==this._animationMode,this._hostElement=this._elementRef.nativeElement,this._openAnimationDuration=this._animationsEnabled?fE(this._config.enterAnimationDuration)??150:0,this._closeAnimationDuration=this._animationsEnabled?fE(this._config.exitAnimationDuration)??75:0,this._animationTimer=null,this._finishDialogOpen=()=>{this._clearAnimationClasses(),this._openAnimationDone(this._openAnimationDuration)},this._finishDialogClose=()=>{this._clearAnimationClasses(),this._animationStateChanged.emit({state:"closed",totalTime:this._closeAnimationDuration})}}_contentAttached(){super._contentAttached(),this._startOpenAnimation()}ngOnDestroy(){super.ngOnDestroy(),null!==this._animationTimer&&clearTimeout(this._animationTimer)}_startOpenAnimation(){this._animationStateChanged.emit({state:"opening",totalTime:this._openAnimationDuration}),this._animationsEnabled?(this._hostElement.style.setProperty(pE,`${this._openAnimationDuration}ms`),this._hostElement.classList.add(uE),this._hostElement.classList.add(bg),this._waitForAnimationToComplete(this._openAnimationDuration,this._finishDialogOpen)):(this._hostElement.classList.add(bg),Promise.resolve().then(()=>this._finishDialogOpen()))}_startExitAnimation(){this._animationStateChanged.emit({state:"closing",totalTime:this._closeAnimationDuration}),this._hostElement.classList.remove(bg),this._animationsEnabled?(this._hostElement.style.setProperty(pE,`${this._openAnimationDuration}ms`),this._hostElement.classList.add(hE),this._waitForAnimationToComplete(this._closeAnimationDuration,this._finishDialogClose)):Promise.resolve().then(()=>this._finishDialogClose())}_clearAnimationClasses(){this._hostElement.classList.remove(uE),this._hostElement.classList.remove(hE)}_waitForAnimationToComplete(e,i){null!==this._animationTimer&&clearTimeout(this._animationTimer),this._animationTimer=setTimeout(i,e)}}return n.\u0275fac=function(e){return new(e||n)(p(z),p(Ja),p(Y,8),p(mu),p(La),p(j),p(fl),p(Kt,8),p(er))},n.\u0275cmp=ee({type:n,selectors:[["mat-dialog-container"]],hostAttrs:["tabindex","-1",1,"mat-mdc-dialog-container","mdc-dialog"],hostVars:8,hostBindings:function(e,i){2&e&&(Rr("id",i._config.id),pe("aria-modal",i._config.ariaModal)("role",i._config.role)("aria-labelledby",i._config.ariaLabel?null:i._ariaLabelledBy)("aria-label",i._config.ariaLabel)("aria-describedby",i._config.ariaDescribedBy||null),me("_mat-animation-noopable",!i._animationsEnabled))},features:[K],decls:3,vars:0,consts:[[1,"mdc-dialog__container"],[1,"mat-mdc-dialog-surface","mdc-dialog__surface"],["cdkPortalOutlet",""]],template:function(e,i){1&e&&(b(0,"div",0)(1,"div",1),J(2,GL,0,0,"ng-template",2),y()())},dependencies:[hl],styles:['.mdc-elevation-overlay{position:absolute;border-radius:inherit;pointer-events:none;opacity:var(--mdc-elevation-overlay-opacity, 0);transition:opacity 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-dialog,.mdc-dialog__scrim{position:fixed;top:0;left:0;align-items:center;justify-content:center;box-sizing:border-box;width:100%;height:100%}.mdc-dialog{display:none;z-index:var(--mdc-dialog-z-index, 7)}.mdc-dialog .mdc-dialog__content{padding:20px 24px 20px 24px}.mdc-dialog .mdc-dialog__surface{min-width:280px}@media(max-width: 592px){.mdc-dialog .mdc-dialog__surface{max-width:calc(100vw - 32px)}}@media(min-width: 592px){.mdc-dialog .mdc-dialog__surface{max-width:560px}}.mdc-dialog .mdc-dialog__surface{max-height:calc(100% - 32px)}.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{max-width:none}@media(max-width: 960px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{max-height:560px;width:560px}.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface .mdc-dialog__close{right:-12px}}@media(max-width: 720px)and (max-width: 672px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{width:calc(100vw - 112px)}}@media(max-width: 720px)and (min-width: 672px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{width:560px}}@media(max-width: 720px)and (max-height: 720px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{max-height:calc(100vh - 160px)}}@media(max-width: 720px)and (min-height: 720px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{max-height:560px}}@media(max-width: 720px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface .mdc-dialog__close{right:-12px}}@media(max-width: 720px)and (max-height: 400px),(max-width: 600px),(min-width: 720px)and (max-height: 400px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{height:100%;max-height:100vh;max-width:100vw;width:100vw;border-radius:0}.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface .mdc-dialog__close{order:-1;left:-12px}.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface .mdc-dialog__header{padding:0 16px 9px;justify-content:flex-start}.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface .mdc-dialog__title{margin-left:calc(16px - 2 * 12px)}}@media(min-width: 960px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{width:calc(100vw - 400px)}.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface .mdc-dialog__close{right:-12px}}.mdc-dialog.mdc-dialog__scrim--hidden .mdc-dialog__scrim{opacity:0}.mdc-dialog__scrim{opacity:0;z-index:-1}.mdc-dialog__container{display:flex;flex-direction:row;align-items:center;justify-content:space-around;box-sizing:border-box;height:100%;transform:scale(0.8);opacity:0;pointer-events:none}.mdc-dialog__surface{position:relative;display:flex;flex-direction:column;flex-grow:0;flex-shrink:0;box-sizing:border-box;max-width:100%;max-height:100%;pointer-events:auto;overflow-y:auto}.mdc-dialog__surface .mdc-elevation-overlay{width:100%;height:100%;top:0;left:0}[dir=rtl] .mdc-dialog__surface,.mdc-dialog__surface[dir=rtl]{text-align:right}@media screen and (forced-colors: active),(-ms-high-contrast: active){.mdc-dialog__surface{outline:2px solid windowText}}.mdc-dialog__surface::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:2px solid rgba(0,0,0,0);border-radius:inherit;content:"";pointer-events:none}@media screen and (forced-colors: active){.mdc-dialog__surface::before{border-color:CanvasText}}@media screen and (-ms-high-contrast: active),screen and (-ms-high-contrast: none){.mdc-dialog__surface::before{content:none}}.mdc-dialog__title{display:block;margin-top:0;position:relative;flex-shrink:0;box-sizing:border-box;margin:0 0 1px;padding:0 24px 9px}.mdc-dialog__title::before{display:inline-block;width:0;height:40px;content:"";vertical-align:0}[dir=rtl] .mdc-dialog__title,.mdc-dialog__title[dir=rtl]{text-align:right}.mdc-dialog--scrollable .mdc-dialog__title{margin-bottom:1px;padding-bottom:15px}.mdc-dialog--fullscreen .mdc-dialog__header{align-items:baseline;border-bottom:1px solid rgba(0,0,0,0);display:inline-flex;justify-content:space-between;padding:0 24px 9px;z-index:1}@media screen and (forced-colors: active){.mdc-dialog--fullscreen .mdc-dialog__header{border-bottom-color:CanvasText}}.mdc-dialog--fullscreen .mdc-dialog__header .mdc-dialog__close{right:-12px}.mdc-dialog--fullscreen .mdc-dialog__title{margin-bottom:0;padding:0;border-bottom:0}.mdc-dialog--fullscreen.mdc-dialog--scrollable .mdc-dialog__title{border-bottom:0;margin-bottom:0}.mdc-dialog--fullscreen .mdc-dialog__close{top:5px}.mdc-dialog--fullscreen.mdc-dialog--scrollable .mdc-dialog__actions{border-top:1px solid rgba(0,0,0,0)}@media screen and (forced-colors: active){.mdc-dialog--fullscreen.mdc-dialog--scrollable .mdc-dialog__actions{border-top-color:CanvasText}}.mdc-dialog--fullscreen--titleless .mdc-dialog__close{margin-top:4px}.mdc-dialog--fullscreen--titleless.mdc-dialog--scrollable .mdc-dialog__close{margin-top:0}.mdc-dialog__content{flex-grow:1;box-sizing:border-box;margin:0;overflow:auto}.mdc-dialog__content>:first-child{margin-top:0}.mdc-dialog__content>:last-child{margin-bottom:0}.mdc-dialog__title+.mdc-dialog__content,.mdc-dialog__header+.mdc-dialog__content{padding-top:0}.mdc-dialog--scrollable .mdc-dialog__title+.mdc-dialog__content{padding-top:8px;padding-bottom:8px}.mdc-dialog__content .mdc-deprecated-list:first-child:last-child{padding:6px 0 0}.mdc-dialog--scrollable .mdc-dialog__content .mdc-deprecated-list:first-child:last-child{padding:0}.mdc-dialog__actions{display:flex;position:relative;flex-shrink:0;flex-wrap:wrap;align-items:center;justify-content:flex-end;box-sizing:border-box;min-height:52px;margin:0;padding:8px;border-top:1px solid rgba(0,0,0,0)}@media screen and (forced-colors: active){.mdc-dialog__actions{border-top-color:CanvasText}}.mdc-dialog--stacked .mdc-dialog__actions{flex-direction:column;align-items:flex-end}.mdc-dialog__button{margin-left:8px;margin-right:0;max-width:100%;text-align:right}[dir=rtl] .mdc-dialog__button,.mdc-dialog__button[dir=rtl]{margin-left:0;margin-right:8px}.mdc-dialog__button:first-child{margin-left:0;margin-right:0}[dir=rtl] .mdc-dialog__button:first-child,.mdc-dialog__button:first-child[dir=rtl]{margin-left:0;margin-right:0}[dir=rtl] .mdc-dialog__button,.mdc-dialog__button[dir=rtl]{text-align:left}.mdc-dialog--stacked .mdc-dialog__button:not(:first-child){margin-top:12px}.mdc-dialog--open,.mdc-dialog--opening,.mdc-dialog--closing{display:flex}.mdc-dialog--opening .mdc-dialog__scrim{transition:opacity 150ms linear}.mdc-dialog--opening .mdc-dialog__container{transition:opacity 75ms linear,transform 150ms 0ms cubic-bezier(0, 0, 0.2, 1)}.mdc-dialog--closing .mdc-dialog__scrim,.mdc-dialog--closing .mdc-dialog__container{transition:opacity 75ms linear}.mdc-dialog--closing .mdc-dialog__container{transform:none}.mdc-dialog--open .mdc-dialog__scrim{opacity:1}.mdc-dialog--open .mdc-dialog__container{transform:none;opacity:1}.mdc-dialog--open.mdc-dialog__surface-scrim--shown .mdc-dialog__surface-scrim{opacity:1}.mdc-dialog--open.mdc-dialog__surface-scrim--hiding .mdc-dialog__surface-scrim{transition:opacity 75ms linear}.mdc-dialog--open.mdc-dialog__surface-scrim--showing .mdc-dialog__surface-scrim{transition:opacity 150ms linear}.mdc-dialog__surface-scrim{display:none;opacity:0;position:absolute;width:100%;height:100%;z-index:1}.mdc-dialog__surface-scrim--shown .mdc-dialog__surface-scrim,.mdc-dialog__surface-scrim--showing .mdc-dialog__surface-scrim,.mdc-dialog__surface-scrim--hiding .mdc-dialog__surface-scrim{display:block}.mdc-dialog-scroll-lock{overflow:hidden}.mdc-dialog--no-content-padding .mdc-dialog__content{padding:0}.mdc-dialog--sheet .mdc-dialog__close{right:12px;top:9px;position:absolute;z-index:1}.mdc-dialog__scrim--removed{pointer-events:none}.mdc-dialog__scrim--removed .mdc-dialog__scrim,.mdc-dialog__scrim--removed .mdc-dialog__surface-scrim{display:none}.mat-mdc-dialog-content{max-height:65vh}.mat-mdc-dialog-container{position:static;display:block}.mat-mdc-dialog-container,.mat-mdc-dialog-container .mdc-dialog__container,.mat-mdc-dialog-container .mdc-dialog__surface{max-height:inherit;min-height:inherit;min-width:inherit;max-width:inherit}.mat-mdc-dialog-container .mdc-dialog__surface{display:block;width:100%;height:100%}.mat-mdc-dialog-container{outline:0}.mat-mdc-dialog-container .mdc-dialog__surface{background-color:var(--mdc-dialog-container-color, white)}.mat-mdc-dialog-container .mdc-dialog__surface{box-shadow:var(--mdc-dialog-container-elevation, 0px 11px 15px -7px rgba(0, 0, 0, 0.2), 0px 24px 38px 3px rgba(0, 0, 0, 0.14), 0px 9px 46px 8px rgba(0, 0, 0, 0.12))}.mat-mdc-dialog-container .mdc-dialog__surface{border-radius:var(--mdc-dialog-container-shape, var(--mdc-shape-medium, 4px))}.mat-mdc-dialog-container.mdc-dialog--scrollable .mdc-dialog__title,.mat-mdc-dialog-container.mdc-dialog--scrollable .mdc-dialog__actions,.mat-mdc-dialog-container.mdc-dialog--scrollable.mdc-dialog-scroll-divider-footer .mdc-dialog__actions{border-color:var(--mdc-dialog-with-divider-divider-color, black)}.mat-mdc-dialog-container.mdc-dialog--scrollable .mdc-dialog__title{border-bottom-color:var(--mdc-dialog-with-divider-divider-color, black)}.mat-mdc-dialog-container .mdc-dialog__title{font-family:var(--mdc-dialog-subhead-font, "Arial");line-height:var(--mdc-dialog-subhead-line-height, 14px);font-size:var(--mdc-dialog-subhead-size, 14px);font-weight:var(--mdc-dialog-subhead-weight, 500);letter-spacing:var(--mdc-dialog-subhead-tracking, 1px)}.mat-mdc-dialog-container .mdc-dialog__title{color:var(--mdc-dialog-subhead-color, black)}.mat-mdc-dialog-container .mdc-dialog__content{font-family:var(--mdc-dialog-supporting-text-font, "Arial");line-height:var(--mdc-dialog-supporting-text-line-height, 14px);font-size:var(--mdc-dialog-supporting-text-size, 14px);font-weight:var(--mdc-dialog-supporting-text-weight, 500);letter-spacing:var(--mdc-dialog-supporting-text-tracking, 1px)}.mat-mdc-dialog-container .mdc-dialog__content{color:var(--mdc-dialog-supporting-text-color, black)}.mat-mdc-dialog-container .mdc-dialog__container{transition-duration:var(--mat-dialog-transition-duration, 0ms)}.mat-mdc-dialog-container._mat-animation-noopable .mdc-dialog__container{transition:none}.mat-mdc-dialog-content{display:block}.mat-mdc-dialog-actions{justify-content:start}.mat-mdc-dialog-actions.mat-mdc-dialog-actions-align-center,.mat-mdc-dialog-actions[align=center]{justify-content:center}.mat-mdc-dialog-actions.mat-mdc-dialog-actions-align-end,.mat-mdc-dialog-actions[align=end]{justify-content:flex-end}.mat-mdc-dialog-actions .mat-button-base+.mat-button-base,.mat-mdc-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:8px}[dir=rtl] .mat-mdc-dialog-actions .mat-button-base+.mat-button-base,[dir=rtl] .mat-mdc-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:0;margin-right:8px}'],encapsulation:2}),n})();class $L{constructor(t,e,i){this._ref=t,this._containerInstance=i,this._afterOpened=new P,this._beforeClosed=new P,this._state=0,this.disableClose=e.disableClose,this.id=t.id,i._animationStateChanged.pipe(Re(r=>"opened"===r.state),Ue(1)).subscribe(()=>{this._afterOpened.next(),this._afterOpened.complete()}),i._animationStateChanged.pipe(Re(r=>"closed"===r.state),Ue(1)).subscribe(()=>{clearTimeout(this._closeFallbackTimeout),this._finishDialogClose()}),t.overlayRef.detachments().subscribe(()=>{this._beforeClosed.next(this._result),this._beforeClosed.complete(),this._finishDialogClose()}),$t(this.backdropClick(),this.keydownEvents().pipe(Re(r=>27===r.keyCode&&!this.disableClose&&!Ht(r)))).subscribe(r=>{this.disableClose||(r.preventDefault(),function eJ(n,t,e){n._closeInteractionType=t,n.close(e)}(this,"keydown"===r.type?"keyboard":"mouse"))})}close(t){this._result=t,this._containerInstance._animationStateChanged.pipe(Re(e=>"closing"===e.state),Ue(1)).subscribe(e=>{this._beforeClosed.next(t),this._beforeClosed.complete(),this._ref.overlayRef.detachBackdrop(),this._closeFallbackTimeout=setTimeout(()=>this._finishDialogClose(),e.totalTime+100)}),this._state=1,this._containerInstance._startExitAnimation()}afterOpened(){return this._afterOpened}afterClosed(){return this._ref.closed}beforeClosed(){return this._beforeClosed}backdropClick(){return this._ref.backdropClick}keydownEvents(){return this._ref.keydownEvents}updatePosition(t){let e=this._ref.config.positionStrategy;return t&&(t.left||t.right)?t.left?e.left(t.left):e.right(t.right):e.centerHorizontally(),t&&(t.top||t.bottom)?t.top?e.top(t.top):e.bottom(t.bottom):e.centerVertically(),this._ref.updatePosition(),this}updateSize(t="",e=""){return this._ref.updateSize(t,e),this}addPanelClass(t){return this._ref.addPanelClass(t),this}removePanelClass(t){return this._ref.removePanelClass(t),this}getState(){return this._state}_finishDialogClose(){this._state=2,this._ref.close(this._result,{focusOrigin:this._closeInteractionType}),this.componentInstance=null}}const mE=new D("MatMdcDialogData"),tJ=new D("mat-mdc-dialog-default-options"),gE=new D("mat-mdc-dialog-scroll-strategy"),iJ={provide:gE,deps:[En],useFactory:function nJ(n){return()=>n.scrollStrategies.block()}};let rJ=0,oJ=(()=>{class n{get openDialogs(){return this._parentDialog?this._parentDialog.openDialogs:this._openDialogsAtThisLevel}get afterOpened(){return this._parentDialog?this._parentDialog.afterOpened:this._afterOpenedAtThisLevel}_getAfterAllClosed(){const e=this._parentDialog;return e?e._getAfterAllClosed():this._afterAllClosedAtThisLevel}constructor(e,i,r,o,s,a,l,c,d,u){this._overlay=e,this._defaultOptions=r,this._parentDialog=o,this._dialogRefConstructor=l,this._dialogContainerType=c,this._dialogDataToken=d,this._openDialogsAtThisLevel=[],this._afterAllClosedAtThisLevel=new P,this._afterOpenedAtThisLevel=new P,this._idPrefix="mat-dialog-",this.dialogConfigClass=mu,this.afterAllClosed=Nr(()=>this.openDialogs.length?this._getAfterAllClosed():this._getAfterAllClosed().pipe(xn(void 0))),this._scrollStrategy=a,this._dialog=i.get(dE)}open(e,i){let r;(i={...this._defaultOptions||new mu,...i}).id=i.id||`${this._idPrefix}${rJ++}`,i.scrollStrategy=i.scrollStrategy||this._scrollStrategy();const o=this._dialog.open(e,{...i,positionStrategy:this._overlay.position().global().centerHorizontally().centerVertically(),disableClose:!0,closeOnDestroy:!1,container:{type:this._dialogContainerType,providers:()=>[{provide:this.dialogConfigClass,useValue:i},{provide:fu,useValue:i}]},templateContext:()=>({dialogRef:r}),providers:(s,a,l)=>(r=new this._dialogRefConstructor(s,i,l),r.updatePosition(i?.position),[{provide:this._dialogContainerType,useValue:l},{provide:this._dialogDataToken,useValue:a.data},{provide:this._dialogRefConstructor,useValue:r}])});return r.componentInstance=o.componentInstance,this.openDialogs.push(r),this.afterOpened.next(r),r.afterClosed().subscribe(()=>{const s=this.openDialogs.indexOf(r);s>-1&&(this.openDialogs.splice(s,1),this.openDialogs.length||this._getAfterAllClosed().next())}),r}closeAll(){this._closeDialogs(this.openDialogs)}getDialogById(e){return this.openDialogs.find(i=>i.id===e)}ngOnDestroy(){this._closeDialogs(this._openDialogsAtThisLevel),this._afterAllClosedAtThisLevel.complete(),this._afterOpenedAtThisLevel.complete()}_closeDialogs(e){let i=e.length;for(;i--;)e[i].close()}}return n.\u0275fac=function(e){Li()},n.\u0275prov=R({token:n,factory:n.\u0275fac}),n})(),bE=(()=>{class n extends oJ{constructor(e,i,r,o,s,a,l,c){super(e,i,o,a,l,s,$L,ZL,mE,c),this._idPrefix="mat-mdc-dialog-"}}return n.\u0275fac=function(e){return new(e||n)(v(En),v(ht),v(ga,8),v(tJ,8),v(gE),v(n,12),v(pu),v(Kt,8))},n.\u0275prov=R({token:n,factory:n.\u0275fac}),n})(),yE=(()=>{class n{}return n.\u0275fac=function(e){return new(e||n)},n.\u0275mod=he({type:n}),n.\u0275inj=ce({providers:[bE,iJ],imports:[QL,ml,pl,Ne,Ne]}),n})();class gl{constructor(t){this.data=t,this.member=t,console.log(this.member)}}gl.\u0275fac=function(t){return new(t||gl)(p(mE))},gl.\u0275cmp=ee({type:gl,selectors:[["app-show-photo-member"]],decls:2,vars:1,consts:[[1,"container-photo"],["alt","foto usuario","width","100%","height","100%",3,"src"]],template:function(t,e){1&t&&(b(0,"div",0),q(1,"img",1),y()),2&t&&(w(1),ia("src","data:image/png;base64, ",e.member.photo,"",Gs))},styles:[".container-photo[_ngcontent-%COMP%]{display:flex;width:100%;height:100%;justify-content:center;align-items:center}"]});const sJ=["tooltip"],AE=new D("mat-tooltip-scroll-strategy"),cJ={provide:AE,deps:[En],useFactory:function lJ(n){return()=>n.scrollStrategies.reposition({scrollThrottle:20})}},uJ=new D("mat-tooltip-default-options",{providedIn:"root",factory:function dJ(){return{showDelay:0,hideDelay:0,touchendHideDelay:1500}}}),SE="tooltip-panel",CE=os({passive:!0});let bJ=(()=>{class n{get position(){return this._position}set position(e){e!==this._position&&(this._position=e,this._overlayRef&&(this._updatePosition(this._overlayRef),this._tooltipInstance?.show(0),this._overlayRef.updatePosition()))}get positionAtOrigin(){return this._positionAtOrigin}set positionAtOrigin(e){this._positionAtOrigin=ue(e),this._detach(),this._overlayRef=null}get disabled(){return this._disabled}set disabled(e){this._disabled=ue(e),this._disabled?this.hide(0):this._setupPointerEnterEventsIfNeeded()}get showDelay(){return this._showDelay}set showDelay(e){this._showDelay=oi(e)}get hideDelay(){return this._hideDelay}set hideDelay(e){this._hideDelay=oi(e),this._tooltipInstance&&(this._tooltipInstance._mouseLeaveHideDelay=this._hideDelay)}get message(){return this._message}set message(e){this._ariaDescriber.removeDescription(this._elementRef.nativeElement,this._message,"tooltip"),this._message=null!=e?String(e).trim():"",!this._message&&this._isTooltipVisible()?this.hide(0):(this._setupPointerEnterEventsIfNeeded(),this._updateTooltipMessage(),this._ngZone.runOutsideAngular(()=>{Promise.resolve().then(()=>{this._ariaDescriber.describe(this._elementRef.nativeElement,this.message,"tooltip")})}))}get tooltipClass(){return this._tooltipClass}set tooltipClass(e){this._tooltipClass=e,this._tooltipInstance&&this._setTooltipClass(this._tooltipClass)}constructor(e,i,r,o,s,a,l,c,d,u,h,f){this._overlay=e,this._elementRef=i,this._scrollDispatcher=r,this._viewContainerRef=o,this._ngZone=s,this._platform=a,this._ariaDescriber=l,this._focusMonitor=c,this._dir=u,this._defaultOptions=h,this._position="below",this._positionAtOrigin=!1,this._disabled=!1,this._viewInitialized=!1,this._pointerExitEventsInitialized=!1,this._viewportMargin=8,this._cssClassPrefix="mat",this._showDelay=this._defaultOptions.showDelay,this._hideDelay=this._defaultOptions.hideDelay,this.touchGestures="auto",this._message="",this._passiveListeners=[],this._destroyed=new P,this._scrollStrategy=d,this._document=f,h&&(h.position&&(this.position=h.position),h.positionAtOrigin&&(this.positionAtOrigin=h.positionAtOrigin),h.touchGestures&&(this.touchGestures=h.touchGestures)),u.change.pipe(Te(this._destroyed)).subscribe(()=>{this._overlayRef&&this._updatePosition(this._overlayRef)})}ngAfterViewInit(){this._viewInitialized=!0,this._setupPointerEnterEventsIfNeeded(),this._focusMonitor.monitor(this._elementRef).pipe(Te(this._destroyed)).subscribe(e=>{e?"keyboard"===e&&this._ngZone.run(()=>this.show()):this._ngZone.run(()=>this.hide(0))})}ngOnDestroy(){const e=this._elementRef.nativeElement;clearTimeout(this._touchstartTimeout),this._overlayRef&&(this._overlayRef.dispose(),this._tooltipInstance=null),this._passiveListeners.forEach(([i,r])=>{e.removeEventListener(i,r,CE)}),this._passiveListeners.length=0,this._destroyed.next(),this._destroyed.complete(),this._ariaDescriber.removeDescription(e,this.message,"tooltip"),this._focusMonitor.stopMonitoring(e)}show(e=this.showDelay,i){if(this.disabled||!this.message||this._isTooltipVisible())return void this._tooltipInstance?._cancelPendingAnimations();const r=this._createOverlay(i);this._detach(),this._portal=this._portal||new gs(this._tooltipComponent,this._viewContainerRef);const o=this._tooltipInstance=r.attach(this._portal).instance;o._triggerElement=this._elementRef.nativeElement,o._mouseLeaveHideDelay=this._hideDelay,o.afterHidden().pipe(Te(this._destroyed)).subscribe(()=>this._detach()),this._setTooltipClass(this._tooltipClass),this._updateTooltipMessage(),o.show(e)}hide(e=this.hideDelay){const i=this._tooltipInstance;i&&(i.isVisible()?i.hide(e):(i._cancelPendingAnimations(),this._detach()))}toggle(e){this._isTooltipVisible()?this.hide():this.show(void 0,e)}_isTooltipVisible(){return!!this._tooltipInstance&&this._tooltipInstance.isVisible()}_createOverlay(e){if(this._overlayRef){const o=this._overlayRef.getConfig().positionStrategy;if((!this.positionAtOrigin||!e)&&o._origin instanceof z)return this._overlayRef;this._detach()}const i=this._scrollDispatcher.getAncestorScrollContainers(this._elementRef),r=this._overlay.position().flexibleConnectedTo(this.positionAtOrigin&&e||this._elementRef).withTransformOriginOn(`.${this._cssClassPrefix}-tooltip`).withFlexibleDimensions(!1).withViewportMargin(this._viewportMargin).withScrollableContainers(i);return r.positionChanges.pipe(Te(this._destroyed)).subscribe(o=>{this._updateCurrentPositionClass(o.connectionPair),this._tooltipInstance&&o.scrollableViewProperties.isOverlayClipped&&this._tooltipInstance.isVisible()&&this._ngZone.run(()=>this.hide(0))}),this._overlayRef=this._overlay.create({direction:this._dir,positionStrategy:r,panelClass:`${this._cssClassPrefix}-${SE}`,scrollStrategy:this._scrollStrategy()}),this._updatePosition(this._overlayRef),this._overlayRef.detachments().pipe(Te(this._destroyed)).subscribe(()=>this._detach()),this._overlayRef.outsidePointerEvents().pipe(Te(this._destroyed)).subscribe(()=>this._tooltipInstance?._handleBodyInteraction()),this._overlayRef.keydownEvents().pipe(Te(this._destroyed)).subscribe(o=>{this._isTooltipVisible()&&27===o.keyCode&&!Ht(o)&&(o.preventDefault(),o.stopPropagation(),this._ngZone.run(()=>this.hide(0)))}),this._defaultOptions?.disableTooltipInteractivity&&this._overlayRef.addPanelClass(`${this._cssClassPrefix}-tooltip-panel-non-interactive`),this._overlayRef}_detach(){this._overlayRef&&this._overlayRef.hasAttached()&&this._overlayRef.detach(),this._tooltipInstance=null}_updatePosition(e){const i=e.getConfig().positionStrategy,r=this._getOrigin(),o=this._getOverlayPosition();i.withPositions([this._addOffset({...r.main,...o.main}),this._addOffset({...r.fallback,...o.fallback})])}_addOffset(e){return e}_getOrigin(){const e=!this._dir||"ltr"==this._dir.value,i=this.position;let r;"above"==i||"below"==i?r={originX:"center",originY:"above"==i?"top":"bottom"}:"before"==i||"left"==i&&e||"right"==i&&!e?r={originX:"start",originY:"center"}:("after"==i||"right"==i&&e||"left"==i&&!e)&&(r={originX:"end",originY:"center"});const{x:o,y:s}=this._invertPosition(r.originX,r.originY);return{main:r,fallback:{originX:o,originY:s}}}_getOverlayPosition(){const e=!this._dir||"ltr"==this._dir.value,i=this.position;let r;"above"==i?r={overlayX:"center",overlayY:"bottom"}:"below"==i?r={overlayX:"center",overlayY:"top"}:"before"==i||"left"==i&&e||"right"==i&&!e?r={overlayX:"end",overlayY:"center"}:("after"==i||"right"==i&&e||"left"==i&&!e)&&(r={overlayX:"start",overlayY:"center"});const{x:o,y:s}=this._invertPosition(r.overlayX,r.overlayY);return{main:r,fallback:{overlayX:o,overlayY:s}}}_updateTooltipMessage(){this._tooltipInstance&&(this._tooltipInstance.message=this.message,this._tooltipInstance._markForCheck(),this._ngZone.onMicrotaskEmpty.pipe(Ue(1),Te(this._destroyed)).subscribe(()=>{this._tooltipInstance&&this._overlayRef.updatePosition()}))}_setTooltipClass(e){this._tooltipInstance&&(this._tooltipInstance.tooltipClass=e,this._tooltipInstance._markForCheck())}_invertPosition(e,i){return"above"===this.position||"below"===this.position?"top"===i?i="bottom":"bottom"===i&&(i="top"):"end"===e?e="start":"start"===e&&(e="end"),{x:e,y:i}}_updateCurrentPositionClass(e){const{overlayY:i,originX:r,originY:o}=e;let s;if(s="center"===i?this._dir&&"rtl"===this._dir.value?"end"===r?"left":"right":"start"===r?"left":"right":"bottom"===i&&"top"===o?"above":"below",s!==this._currentPosition){const a=this._overlayRef;if(a){const l=`${this._cssClassPrefix}-${SE}-`;a.removePanelClass(l+this._currentPosition),a.addPanelClass(l+s)}this._currentPosition=s}}_setupPointerEnterEventsIfNeeded(){this._disabled||!this.message||!this._viewInitialized||this._passiveListeners.length||(this._platformSupportsMouseEvents()?this._passiveListeners.push(["mouseenter",e=>{let i;this._setupPointerExitEventsIfNeeded(),void 0!==e.x&&void 0!==e.y&&(i=e),this.show(void 0,i)}]):"off"!==this.touchGestures&&(this._disableNativeGesturesIfNecessary(),this._passiveListeners.push(["touchstart",e=>{const i=e.targetTouches?.[0],r=i?{x:i.clientX,y:i.clientY}:void 0;this._setupPointerExitEventsIfNeeded(),clearTimeout(this._touchstartTimeout),this._touchstartTimeout=setTimeout(()=>this.show(void 0,r),500)}])),this._addListeners(this._passiveListeners))}_setupPointerExitEventsIfNeeded(){if(this._pointerExitEventsInitialized)return;this._pointerExitEventsInitialized=!0;const e=[];if(this._platformSupportsMouseEvents())e.push(["mouseleave",i=>{const r=i.relatedTarget;(!r||!this._overlayRef?.overlayElement.contains(r))&&this.hide()}],["wheel",i=>this._wheelListener(i)]);else if("off"!==this.touchGestures){this._disableNativeGesturesIfNecessary();const i=()=>{clearTimeout(this._touchstartTimeout),this.hide(this._defaultOptions.touchendHideDelay)};e.push(["touchend",i],["touchcancel",i])}this._addListeners(e),this._passiveListeners.push(...e)}_addListeners(e){e.forEach(([i,r])=>{this._elementRef.nativeElement.addEventListener(i,r,CE)})}_platformSupportsMouseEvents(){return!this._platform.IOS&&!this._platform.ANDROID}_wheelListener(e){if(this._isTooltipVisible()){const i=this._document.elementFromPoint(e.clientX,e.clientY),r=this._elementRef.nativeElement;i!==r&&!r.contains(i)&&this.hide()}}_disableNativeGesturesIfNecessary(){const e=this.touchGestures;if("off"!==e){const i=this._elementRef.nativeElement,r=i.style;("on"===e||"INPUT"!==i.nodeName&&"TEXTAREA"!==i.nodeName)&&(r.userSelect=r.msUserSelect=r.webkitUserSelect=r.MozUserSelect="none"),("on"===e||!i.draggable)&&(r.webkitUserDrag="none"),r.touchAction="none",r.webkitTapHighlightColor="transparent"}}}return n.\u0275fac=function(e){Li()},n.\u0275dir=M({type:n,inputs:{position:["matTooltipPosition","position"],positionAtOrigin:["matTooltipPositionAtOrigin","positionAtOrigin"],disabled:["matTooltipDisabled","disabled"],showDelay:["matTooltipShowDelay","showDelay"],hideDelay:["matTooltipHideDelay","hideDelay"],touchGestures:["matTooltipTouchGestures","touchGestures"],message:["matTooltip","message"],tooltipClass:["matTooltipClass","tooltipClass"]}}),n})(),yJ=(()=>{class n extends bJ{constructor(e,i,r,o,s,a,l,c,d,u,h,f){super(e,i,r,o,s,a,l,c,d,u,h,f),this._tooltipComponent=AJ,this._cssClassPrefix="mat-mdc",this._viewportMargin=8}_addOffset(e){const r=!this._dir||"ltr"==this._dir.value;return"top"===e.originY?e.offsetY=-8:"bottom"===e.originY?e.offsetY=8:"start"===e.originX?e.offsetX=r?-8:8:"end"===e.originX&&(e.offsetX=r?8:-8),e}}return n.\u0275fac=function(e){return new(e||n)(p(En),p(z),p(ps),p(jt),p(j),p(Ze),p(hq),p(er),p(AE),p(Lt,8),p(uJ,8),p(Y))},n.\u0275dir=M({type:n,selectors:[["","matTooltip",""]],hostAttrs:[1,"mat-mdc-tooltip-trigger"],exportAs:["matTooltip"],features:[K]}),n})(),vJ=(()=>{class n{constructor(e,i){this._changeDetectorRef=e,this._closeOnInteraction=!1,this._isVisible=!1,this._onHide=new P,this._animationsDisabled="NoopAnimations"===i}show(e){clearTimeout(this._hideTimeoutId),this._showTimeoutId=setTimeout(()=>{this._toggleVisibility(!0),this._showTimeoutId=void 0},e)}hide(e){clearTimeout(this._showTimeoutId),this._hideTimeoutId=setTimeout(()=>{this._toggleVisibility(!1),this._hideTimeoutId=void 0},e)}afterHidden(){return this._onHide}isVisible(){return this._isVisible}ngOnDestroy(){this._cancelPendingAnimations(),this._onHide.complete(),this._triggerElement=null}_handleBodyInteraction(){this._closeOnInteraction&&this.hide(0)}_markForCheck(){this._changeDetectorRef.markForCheck()}_handleMouseLeave({relatedTarget:e}){(!e||!this._triggerElement.contains(e))&&(this.isVisible()?this.hide(this._mouseLeaveHideDelay):this._finalizeAnimation(!1))}_onShow(){}_handleAnimationEnd({animationName:e}){(e===this._showAnimation||e===this._hideAnimation)&&this._finalizeAnimation(e===this._showAnimation)}_cancelPendingAnimations(){clearTimeout(this._showTimeoutId),clearTimeout(this._hideTimeoutId),this._showTimeoutId=this._hideTimeoutId=void 0}_finalizeAnimation(e){e?this._closeOnInteraction=!0:this.isVisible()||this._onHide.next()}_toggleVisibility(e){const i=this._tooltip.nativeElement,r=this._showAnimation,o=this._hideAnimation;if(i.classList.remove(e?o:r),i.classList.add(e?r:o),this._isVisible=e,e&&!this._animationsDisabled&&"function"==typeof getComputedStyle){const s=getComputedStyle(i);("0s"===s.getPropertyValue("animation-duration")||"none"===s.getPropertyValue("animation-name"))&&(this._animationsDisabled=!0)}e&&this._onShow(),this._animationsDisabled&&(i.classList.add("_mat-animation-noopable"),this._finalizeAnimation(e))}}return n.\u0275fac=function(e){return new(e||n)(p(Xe),p(Kt,8))},n.\u0275dir=M({type:n}),n})(),AJ=(()=>{class n extends vJ{constructor(e,i,r){super(e,r),this._elementRef=i,this._isMultiline=!1,this._showAnimation="mat-mdc-tooltip-show",this._hideAnimation="mat-mdc-tooltip-hide"}_onShow(){this._isMultiline=this._isTooltipMultiline(),this._markForCheck()}_isTooltipMultiline(){const e=this._elementRef.nativeElement.getBoundingClientRect();return e.height>24&&e.width>=200}}return n.\u0275fac=function(e){return new(e||n)(p(Xe),p(z),p(Kt,8))},n.\u0275cmp=ee({type:n,selectors:[["mat-tooltip-component"]],viewQuery:function(e,i){if(1&e&&je(sJ,7),2&e){let r;oe(r=se())&&(i._tooltip=r.first)}},hostAttrs:["aria-hidden","true"],hostVars:2,hostBindings:function(e,i){1&e&&H("mouseleave",function(o){return i._handleMouseLeave(o)}),2&e&&_n("zoom",i.isVisible()?1:null)},features:[K],decls:4,vars:4,consts:[[1,"mdc-tooltip","mdc-tooltip--shown","mat-mdc-tooltip",3,"ngClass","animationend"],["tooltip",""],[1,"mdc-tooltip__surface","mdc-tooltip__surface-animation"]],template:function(e,i){1&e&&(b(0,"div",0,1),H("animationend",function(o){return i._handleAnimationEnd(o)}),b(2,"div",2),E(3),y()()),2&e&&(me("mdc-tooltip--multiline",i._isMultiline),I("ngClass",i.tooltipClass),w(3),gt(i.message))},dependencies:[Vr],styles:['.mdc-tooltip__surface{word-break:var(--mdc-tooltip-word-break, normal);overflow-wrap:anywhere}.mdc-tooltip{position:fixed;display:none;z-index:9}.mdc-tooltip-wrapper--rich{position:relative}.mdc-tooltip--shown,.mdc-tooltip--showing,.mdc-tooltip--hide{display:inline-flex}.mdc-tooltip--shown.mdc-tooltip--rich,.mdc-tooltip--showing.mdc-tooltip--rich,.mdc-tooltip--hide.mdc-tooltip--rich{display:inline-block;left:-320px;position:absolute}.mdc-tooltip__surface{line-height:16px;padding:4px 8px;min-width:40px;max-width:200px;min-height:24px;max-height:40vh;box-sizing:border-box;overflow:hidden;text-align:center}.mdc-tooltip__surface::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:"";pointer-events:none}@media screen and (forced-colors: active){.mdc-tooltip__surface::before{border-color:CanvasText}}.mdc-tooltip--rich .mdc-tooltip__surface{align-items:flex-start;display:flex;flex-direction:column;min-height:24px;min-width:40px;max-width:320px;position:relative}.mdc-tooltip--multiline .mdc-tooltip__surface{text-align:left}[dir=rtl] .mdc-tooltip--multiline .mdc-tooltip__surface,.mdc-tooltip--multiline .mdc-tooltip__surface[dir=rtl]{text-align:right}.mdc-tooltip__surface .mdc-tooltip__title{margin:0 8px}.mdc-tooltip__surface .mdc-tooltip__content{max-width:calc(200px - (2 * 8px));margin:8px;text-align:left}[dir=rtl] .mdc-tooltip__surface .mdc-tooltip__content,.mdc-tooltip__surface .mdc-tooltip__content[dir=rtl]{text-align:right}.mdc-tooltip--rich .mdc-tooltip__surface .mdc-tooltip__content{max-width:calc(320px - (2 * 8px));align-self:stretch}.mdc-tooltip__surface .mdc-tooltip__content-link{text-decoration:none}.mdc-tooltip--rich-actions,.mdc-tooltip__content,.mdc-tooltip__title{z-index:1}.mdc-tooltip__surface-animation{opacity:0;transform:scale(0.8);will-change:transform,opacity}.mdc-tooltip--shown .mdc-tooltip__surface-animation{transform:scale(1);opacity:1}.mdc-tooltip--hide .mdc-tooltip__surface-animation{transform:scale(1)}.mdc-tooltip__caret-surface-top,.mdc-tooltip__caret-surface-bottom{position:absolute;height:24px;width:24px;transform:rotate(35deg) skewY(20deg) scaleX(0.9396926208)}.mdc-tooltip__caret-surface-top .mdc-elevation-overlay,.mdc-tooltip__caret-surface-bottom .mdc-elevation-overlay{width:100%;height:100%;top:0;left:0}.mdc-tooltip__caret-surface-bottom{outline:1px solid rgba(0,0,0,0);z-index:-1}@media screen and (forced-colors: active){.mdc-tooltip__caret-surface-bottom{outline-color:CanvasText}}.mdc-tooltip__surface{background-color:var(--mdc-plain-tooltip-container-color, #fff)}.mdc-tooltip__surface{border-radius:var(--mdc-plain-tooltip-container-shape, var(--mdc-shape-small, 4px))}.mdc-tooltip__caret-surface-top,.mdc-tooltip__caret-surface-bottom{border-radius:var(--mdc-plain-tooltip-container-shape, var(--mdc-shape-small, 4px))}.mdc-tooltip__surface{color:var(--mdc-plain-tooltip-supporting-text-color, #000)}.mdc-tooltip__surface{font-family:var(--mdc-plain-tooltip-supporting-text-font, inherit);font-size:var(--mdc-plain-tooltip-supporting-text-size, inherit);font-weight:var(--mdc-plain-tooltip-supporting-text-weight, inherit);letter-spacing:var(--mdc-plain-tooltip-supporting-text-tracking, inherit)}.mat-mdc-tooltip{position:relative;transform:scale(0)}.mat-mdc-tooltip::before{content:"";top:-8px;right:-8px;bottom:-8px;left:-8px;z-index:-1;position:absolute}.mat-mdc-tooltip._mat-animation-noopable{animation:none;transform:scale(1)}.mat-mdc-tooltip-panel-non-interactive{pointer-events:none}@keyframes mat-mdc-tooltip-show{0%{opacity:0;transform:scale(0.8)}100%{opacity:1;transform:scale(1)}}@keyframes mat-mdc-tooltip-hide{0%{opacity:1;transform:scale(1)}100%{opacity:0;transform:scale(0.8)}}.mat-mdc-tooltip-show{animation:mat-mdc-tooltip-show 150ms cubic-bezier(0, 0, 0.2, 1) forwards}.mat-mdc-tooltip-hide{animation:mat-mdc-tooltip-hide 75ms cubic-bezier(0.4, 0, 1, 1) forwards}'],encapsulation:2,changeDetection:0}),n})(),kE=(()=>{class n{}return n.\u0275fac=function(e){return new(e||n)},n.\u0275mod=he({type:n}),n.\u0275inj=ce({providers:[cJ],imports:[Dm,Ei,ml,Ne,Ne,Gr]}),n})();function SJ(n,t){1&n&&q(0,"img",16)}function CJ(n,t){if(1&n){const e=Xn();b(0,"img",17),H("click",function(){return ct(e),dt(re().showPhoto())}),y()}2&n&&ia("src","data:image/png;base64, ",re().member.photo,"",Gs)}const kJ=function(n,t){return{"card-border-red":n,"card-border-green":t}};class bl{constructor(t){this.matDialog=t}showPhoto(){Yw.data=this.member,this.matDialog.open(gl,Yw)}}function xJ(n,t){1&n&&q(0,"app-card-member",5),2&n&&I("member",t.$implicit)}bl.\u0275fac=function(t){return new(t||bl)(p(bE))},bl.\u0275cmp=ee({type:bl,selectors:[["app-card-member"]],inputs:{member:"member"},decls:25,vars:9,consts:[[1,"user-info-grid",3,"ngClass"],[1,"uno"],["class","img-avatar","src","../../../assets/img/user-gym-women.png","alt","foto usuario",4,"ngIf"],["class","img-avatar","alt","foto usuario",3,"src","click",4,"ngIf"],[1,"dos"],[1,"info-label"],[1,"info-data"],[1,"info-label",2,"margin-top","4px"],[1,"tres"],[1,"cuatro"],["href","tel:9612995191","matTooltip","Llamar"],["src","../../../assets/img/icon-phone-48.png","alt","","height","48","width","48"],["href","https://wa.me/9612995191?text=Hello%20World","matTooltip","WhatsApp"],["src","../../../assets/img/icon-whatsapp-48.png","alt","","height","48","width","48"],["href","#","matTooltip","Renovar Membres\xeda"],["src","../../../assets/img/icon-renovar-suscripcion-48.png","alt","","height","48","width","48"],["src","../../../assets/img/user-gym-women.png","alt","foto usuario",1,"img-avatar"],["alt","foto usuario",1,"img-avatar",3,"src","click"]],template:function(t,e){1&t&&(b(0,"div",0)(1,"div",1),J(2,SJ,1,0,"img",2),J(3,CJ,1,1,"img",3),y(),b(4,"div",4)(5,"span",5),E(6,"Nombre"),y(),b(7,"span",6),E(8),y(),b(9,"span",7),E(10,"Vence"),y(),b(11,"span",6),E(12),y()(),b(13,"div",8)(14,"span",5),E(15,"Tel\xe9fono"),y(),b(16,"span",6),E(17),y()(),b(18,"div",9)(19,"a",10),q(20,"img",11),y(),b(21,"a",12),q(22,"img",13),y(),b(23,"a",14),q(24,"img",15),y()()()),2&t&&(I("ngClass",XS(6,kJ,e.member.expired,!e.member.expired)),w(2),I("ngIf",""==e.member.photo),w(1),I("ngIf",""!=e.member.photo),w(5),gt(e.member.name),w(4),gt(e.member.expiration),w(5),gt(e.member.phone))},dependencies:[Vr,wi,yJ],styles:[".img-avatar[_ngcontent-%COMP%]{width:100px;height:100px;border-radius:50%}.info-label[_ngcontent-%COMP%]{display:block;color:#4168ff;font-size:small}.info-data[_ngcontent-%COMP%]{display:block;font-size:small}.user-info-grid[_ngcontent-%COMP%]{display:grid;grid-template-columns:repeat(3,1fr);gap:8px;grid-auto-rows:minmax(50px,auto);max-width:400px;padding:8px;border-radius:10px;box-shadow:1px 0 8px 4px #0000003b;-webkit-box-shadow:1px 0px 8px 4px rgba(0,0,0,.23);-moz-box-shadow:1px 0px 8px 4px rgba(0,0,0,.23)}.card-border-red[_ngcontent-%COMP%]{border-top:solid;border-color:red;border-width:12px}.card-border-green[_ngcontent-%COMP%]{border-top:solid;border-color:green;border-width:12px}.uno[_ngcontent-%COMP%]{grid-column:1;grid-row:1/3}.dos[_ngcontent-%COMP%]{grid-column:2;grid-row:1}.tres[_ngcontent-%COMP%]{grid-column:3;grid-row:1}.cuatro[_ngcontent-%COMP%]{display:flex;justify-content:end;grid-column:2/5;grid-row:2;gap:4px}"]});const yg=function(n){return{"button-sgm-frame-primary-noselected":n}};class yl{constructor(t){this.processesService=t,this.statusMembers=1,this.membersList=xL}ngOnInit(){this.processesService.setPath("Miembros")}changeMemberStatus(t){this.statusMembers=t}}yl.\u0275fac=function(t){return new(t||yl)(p(ri))},yl.\u0275cmp=ee({type:yl,selectors:[["app-members"]],decls:10,vars:10,consts:[[1,"container-options"],["mat-raised-button","",1,"button-sgm-frame-primary",2,"font-size","16px","padding","1px",3,"ngClass","click"],["type","text","placeholder","Buscar miembro",1,"search-input"],[1,"container-cards-member"],[3,"member",4,"ngFor","ngForOf"],[3,"member"]],template:function(t,e){1&t&&(b(0,"div",0)(1,"button",1),H("click",function(){return e.changeMemberStatus(3)}),E(2," Todos "),y(),b(3,"button",1),H("click",function(){return e.changeMemberStatus(1)}),E(4," Activos "),y(),b(5,"button",1),H("click",function(){return e.changeMemberStatus(2)}),E(6," Inactivos "),y(),q(7,"input",2),y(),b(8,"div",3),J(9,xJ,1,1,"app-card-member",4),y()),2&t&&(w(1),I("ngClass",Bc(4,yg,3!=e.statusMembers)),w(2),I("ngClass",Bc(6,yg,1!=e.statusMembers)),w(2),I("ngClass",Bc(8,yg,2!=e.statusMembers)),w(4),I("ngForOf",e.membersList))},dependencies:[Vr,Ur,Fi,bl],styles:[".container-cards-member[_ngcontent-%COMP%]{display:flex;gap:12px;flex-wrap:wrap;justify-content:center}.container-options[_ngcontent-%COMP%]{display:flex;justify-content:center;padding-bottom:4px}.mat-mdc-radio-button.mat-accent[_ngcontent-%COMP%]{--mdc-radio-disabled-selected-icon-color: #000 !important;--mdc-radio-disabled-unselected-icon-color: #000 !important;--mdc-radio-unselected-focus-icon-color: #212121 !important;--mdc-radio-unselected-hover-icon-color: #212121 !important;--mdc-radio-unselected-icon-color: rgba(0, 0, 0, .54) !important;--mdc-radio-unselected-pressed-icon-color: rgba(0, 0, 0, .54) !important;--mdc-radio-selected-focus-icon-color: #4168ff !important;--mdc-radio-selected-hover-icon-color: #4168ff !important;--mdc-radio-selected-icon-color: #4168ff !important;--mdc-radio-selected-pressed-icon-color: #4168ff !important;--mat-mdc-radio-ripple-color: #000 !important;--mat-mdc-radio-checked-ripple-color: #4168ff !important}.button-sgm-frame-primary-noselected[_ngcontent-%COMP%]{opacity:.5}.search-input[_ngcontent-%COMP%]{margin-left:4px;border-radius:10px;font-size:16px}@media screen and (max-width: 400px){.search-input[_ngcontent-%COMP%]{max-width:120px}}"]});const DJ=JSON.parse('{"h":[{"name_en":"Mexico","name_es":"M\xe9xico","continent_en":"North America","continent_es":"Am\xe9rica del Norte","capital_en":"Mexico City","capital_es":"Ciudad de M\xe9xico","dial_code":"+52","code_2":"MX","code_3":"MEX","tld":".mx"}]}');let wJ=(()=>{class n{constructor(){this._vertical=!1,this._inset=!1}get vertical(){return this._vertical}set vertical(e){this._vertical=ue(e)}get inset(){return this._inset}set inset(e){this._inset=ue(e)}}return n.\u0275fac=function(e){return new(e||n)},n.\u0275cmp=ee({type:n,selectors:[["mat-divider"]],hostAttrs:["role","separator",1,"mat-divider"],hostVars:7,hostBindings:function(e,i){2&e&&(pe("aria-orientation",i.vertical?"vertical":"horizontal"),me("mat-divider-vertical",i.vertical)("mat-divider-horizontal",!i.vertical)("mat-divider-inset",i.inset))},inputs:{vertical:"vertical",inset:"inset"},decls:0,vars:0,template:function(e,i){},styles:[".mat-divider{display:block;margin:0;border-top-width:1px;border-top-style:solid}.mat-divider.mat-divider-vertical{border-top:0;border-right-width:1px;border-right-style:solid}.mat-divider.mat-divider-inset{margin-left:80px}[dir=rtl] .mat-divider.mat-divider-inset{margin-left:auto;margin-right:80px}"],encapsulation:2,changeDetection:0}),n})(),xE=(()=>{class n{}return n.\u0275fac=function(e){return new(e||n)},n.\u0275mod=he({type:n}),n.\u0275inj=ce({imports:[Ne,Ne]}),n})();class EJ{get selected(){return this._selected||(this._selected=Array.from(this._selection.values())),this._selected}constructor(t=!1,e,i=!0,r){this._multiple=t,this._emitChanges=i,this.compareWith=r,this._selection=new Set,this._deselectedToEmit=[],this._selectedToEmit=[],this.changed=new P,e&&e.length&&(t?e.forEach(o=>this._markSelected(o)):this._markSelected(e[0]),this._selectedToEmit.length=0)}select(...t){this._verifyValueAssignment(t),t.forEach(i=>this._markSelected(i));const e=this._hasQueuedChanges();return this._emitChangeEvent(),e}deselect(...t){this._verifyValueAssignment(t),t.forEach(i=>this._unmarkSelected(i));const e=this._hasQueuedChanges();return this._emitChangeEvent(),e}setSelection(...t){this._verifyValueAssignment(t);const e=this.selected,i=new Set(t);t.forEach(o=>this._markSelected(o)),e.filter(o=>!i.has(o)).forEach(o=>this._unmarkSelected(o));const r=this._hasQueuedChanges();return this._emitChangeEvent(),r}toggle(t){return this.isSelected(t)?this.deselect(t):this.select(t)}clear(t=!0){this._unmarkAll();const e=this._hasQueuedChanges();return t&&this._emitChangeEvent(),e}isSelected(t){if(this.compareWith){for(const e of this._selection)if(this.compareWith(e,t))return!0;return!1}return this._selection.has(t)}isEmpty(){return 0===this._selection.size}hasValue(){return!this.isEmpty()}sort(t){this._multiple&&this.selected&&this._selected.sort(t)}isMultipleSelection(){return this._multiple}_emitChangeEvent(){this._selected=null,(this._selectedToEmit.length||this._deselectedToEmit.length)&&(this.changed.next({source:this,added:this._selectedToEmit,removed:this._deselectedToEmit}),this._deselectedToEmit=[],this._selectedToEmit=[])}_markSelected(t){this.isSelected(t)||(this._multiple||this._unmarkAll(),this.isSelected(t)||this._selection.add(t),this._emitChanges&&this._selectedToEmit.push(t))}_unmarkSelected(t){this.isSelected(t)&&(this._selection.delete(t),this._emitChanges&&this._deselectedToEmit.push(t))}_unmarkAll(){this.isEmpty()||this._selection.forEach(t=>this._unmarkSelected(t))}_verifyValueAssignment(t){}_hasQueuedChanges(){return!(!this._deselectedToEmit.length&&!this._selectedToEmit.length)}}let IJ=(()=>{class n{constructor(){this._listeners=[]}notify(e,i){for(let r of this._listeners)r(e,i)}listen(e){return this._listeners.push(e),()=>{this._listeners=this._listeners.filter(i=>e!==i)}}ngOnDestroy(){this._listeners=[]}}return n.\u0275fac=function(e){return new(e||n)},n.\u0275prov=R({token:n,factory:n.\u0275fac,providedIn:"root"}),n})();const RJ=["trigger"],TJ=["panel"];function MJ(n,t){if(1&n&&(b(0,"span",10),E(1),y()),2&n){const e=re();w(1),gt(e.placeholder)}}function OJ(n,t){if(1&n&&(b(0,"span",14),E(1),y()),2&n){const e=re(2);w(1),gt(e.triggerValue)}}function FJ(n,t){1&n&&Ie(0,0,["*ngSwitchCase","true"])}function VJ(n,t){1&n&&(b(0,"span",11),J(1,OJ,2,1,"span",12),J(2,FJ,1,0,"ng-content",13),y()),2&n&&(I("ngSwitch",!!re().customTrigger),w(2),I("ngSwitchCase",!0))}function UJ(n,t){if(1&n){const e=Xn();Ns(),ph(),b(0,"div",15,16),H("@transformPanel.done",function(r){return ct(e),dt(re()._panelDoneAnimatingStream.next(r.toState))})("keydown",function(r){return ct(e),dt(re()._handleKeydown(r))}),Ie(2,1),y()}if(2&n){const e=re();oS("mat-mdc-select-panel mdc-menu-surface mdc-menu-surface--open ",e._getPanelTheme(),""),I("ngClass",e.panelClass)("@transformPanel","showing"),pe("id",e.id+"-panel")("aria-multiselectable",e.multiple)("aria-label",e.ariaLabel||null)("aria-labelledby",e._getPanelAriaLabelledby())}}const NJ=[[["mat-select-trigger"]],"*"],PJ=["mat-select-trigger","*"],_J={transformPanelWrap:ir("transformPanelWrap",[Zt("* => void",jm("@transformPanel",[Bm()],{optional:!0}))]),transformPanel:ir("transformPanel",[si("void",$e({opacity:0,transform:"scale(1, 0.8)"})),Zt("void => showing",cn("120ms cubic-bezier(0, 0, 0.2, 1)",$e({opacity:1,transform:"scale(1, 1)"}))),Zt("* => void",cn("100ms linear",$e({opacity:0})))])};let DE=0;const wE=new D("mat-select-scroll-strategy"),jJ=new D("MAT_SELECT_CONFIG"),qJ={provide:wE,deps:[En],useFactory:function BJ(n){return()=>n.scrollStrategies.reposition()}},KJ=new D("MatSelectTrigger");class HJ{constructor(t,e){this.source=t,this.value=e}}const LJ=wm(_x(Px(Bx(class{constructor(n,t,e,i,r){this._elementRef=n,this._defaultErrorStateMatcher=t,this._parentForm=e,this._parentFormGroup=i,this.ngControl=r,this.stateChanges=new P}}))));let JJ=(()=>{class n extends LJ{get focused(){return this._focused||this._panelOpen}get placeholder(){return this._placeholder}set placeholder(e){this._placeholder=e,this.stateChanges.next()}get required(){return this._required??this.ngControl?.control?.hasValidator(Jm.required)??!1}set required(e){this._required=ue(e),this.stateChanges.next()}get multiple(){return this._multiple}set multiple(e){this._multiple=ue(e)}get disableOptionCentering(){return this._disableOptionCentering}set disableOptionCentering(e){this._disableOptionCentering=ue(e)}get compareWith(){return this._compareWith}set compareWith(e){this._compareWith=e,this._selectionModel&&this._initializeSelection()}get value(){return this._value}set value(e){this._assignValue(e)&&this._onChange(e)}get typeaheadDebounceInterval(){return this._typeaheadDebounceInterval}set typeaheadDebounceInterval(e){this._typeaheadDebounceInterval=oi(e)}get id(){return this._id}set id(e){this._id=e||this._uid,this.stateChanges.next()}constructor(e,i,r,o,s,a,l,c,d,u,h,f,m,g){super(s,o,l,c,u),this._viewportRuler=e,this._changeDetectorRef=i,this._ngZone=r,this._dir=a,this._parentFormField=d,this._liveAnnouncer=m,this._defaultOptions=g,this._panelOpen=!1,this._compareWith=(A,k)=>A===k,this._uid="mat-select-"+DE++,this._triggerAriaLabelledBy=null,this._destroy=new P,this._onChange=()=>{},this._onTouched=()=>{},this._valueId="mat-select-value-"+DE++,this._panelDoneAnimatingStream=new P,this._overlayPanelClass=this._defaultOptions?.overlayPanelClass||"",this._focused=!1,this.controlType="mat-select",this._multiple=!1,this._disableOptionCentering=this._defaultOptions?.disableOptionCentering??!1,this.ariaLabel="",this.optionSelectionChanges=Nr(()=>{const A=this.options;return A?A.changes.pipe(xn(A),Mt(()=>$t(...A.map(k=>k.onSelectionChange)))):this._ngZone.onStable.pipe(Ue(1),Mt(()=>this.optionSelectionChanges))}),this.openedChange=new O,this._openedStream=this.openedChange.pipe(Re(A=>A),B(()=>{})),this._closedStream=this.openedChange.pipe(Re(A=>!A),B(()=>{})),this.selectionChange=new O,this.valueChange=new O,this.ngControl&&(this.ngControl.valueAccessor=this),null!=g?.typeaheadDebounceInterval&&(this._typeaheadDebounceInterval=g.typeaheadDebounceInterval),this._scrollStrategyFactory=f,this._scrollStrategy=this._scrollStrategyFactory(),this.tabIndex=parseInt(h)||0,this.id=this.id}ngOnInit(){this._selectionModel=new EJ(this.multiple),this.stateChanges.next(),this._panelDoneAnimatingStream.pipe(Sm(),Te(this._destroy)).subscribe(()=>this._panelDoneAnimating(this.panelOpen))}ngAfterContentInit(){this._initKeyManager(),this._selectionModel.changed.pipe(Te(this._destroy)).subscribe(e=>{e.added.forEach(i=>i.select()),e.removed.forEach(i=>i.deselect())}),this.options.changes.pipe(xn(null),Te(this._destroy)).subscribe(()=>{this._resetOptions(),this._initializeSelection()})}ngDoCheck(){const e=this._getTriggerAriaLabelledby(),i=this.ngControl;if(e!==this._triggerAriaLabelledBy){const r=this._elementRef.nativeElement;this._triggerAriaLabelledBy=e,e?r.setAttribute("aria-labelledby",e):r.removeAttribute("aria-labelledby")}i&&(this._previousControl!==i.control&&(void 0!==this._previousControl&&null!==i.disabled&&i.disabled!==this.disabled&&(this.disabled=i.disabled),this._previousControl=i.control),this.updateErrorState())}ngOnChanges(e){(e.disabled||e.userAriaDescribedBy)&&this.stateChanges.next(),e.typeaheadDebounceInterval&&this._keyManager&&this._keyManager.withTypeAhead(this._typeaheadDebounceInterval)}ngOnDestroy(){this._keyManager?.destroy(),this._destroy.next(),this._destroy.complete(),this.stateChanges.complete()}toggle(){this.panelOpen?this.close():this.open()}open(){this._canOpen()&&(this._panelOpen=!0,this._keyManager.withHorizontalOrientation(null),this._highlightCorrectOption(),this._changeDetectorRef.markForCheck())}close(){this._panelOpen&&(this._panelOpen=!1,this._keyManager.withHorizontalOrientation(this._isRtl()?"rtl":"ltr"),this._changeDetectorRef.markForCheck(),this._onTouched())}writeValue(e){this._assignValue(e)}registerOnChange(e){this._onChange=e}registerOnTouched(e){this._onTouched=e}setDisabledState(e){this.disabled=e,this._changeDetectorRef.markForCheck(),this.stateChanges.next()}get panelOpen(){return this._panelOpen}get selected(){return this.multiple?this._selectionModel?.selected||[]:this._selectionModel?.selected[0]}get triggerValue(){if(this.empty)return"";if(this._multiple){const e=this._selectionModel.selected.map(i=>i.viewValue);return this._isRtl()&&e.reverse(),e.join(", ")}return this._selectionModel.selected[0].viewValue}_isRtl(){return!!this._dir&&"rtl"===this._dir.value}_handleKeydown(e){this.disabled||(this.panelOpen?this._handleOpenKeydown(e):this._handleClosedKeydown(e))}_handleClosedKeydown(e){const i=e.keyCode,r=40===i||38===i||37===i||39===i,o=13===i||32===i,s=this._keyManager;if(!s.isTyping()&&o&&!Ht(e)||(this.multiple||e.altKey)&&r)e.preventDefault(),this.open();else if(!this.multiple){const a=this.selected;s.onKeydown(e);const l=this.selected;l&&a!==l&&this._liveAnnouncer.announce(l.viewValue,1e4)}}_handleOpenKeydown(e){const i=this._keyManager,r=e.keyCode,o=40===r||38===r,s=i.isTyping();if(o&&e.altKey)e.preventDefault(),this.close();else if(s||13!==r&&32!==r||!i.activeItem||Ht(e))if(!s&&this._multiple&&65===r&&e.ctrlKey){e.preventDefault();const a=this.options.some(l=>!l.disabled&&!l.selected);this.options.forEach(l=>{l.disabled||(a?l.select():l.deselect())})}else{const a=i.activeItemIndex;i.onKeydown(e),this._multiple&&o&&e.shiftKey&&i.activeItem&&i.activeItemIndex!==a&&i.activeItem._selectViaInteraction()}else e.preventDefault(),i.activeItem._selectViaInteraction()}_onFocus(){this.disabled||(this._focused=!0,this.stateChanges.next())}_onBlur(){this._focused=!1,this._keyManager?.cancelTypeahead(),!this.disabled&&!this.panelOpen&&(this._onTouched(),this._changeDetectorRef.markForCheck(),this.stateChanges.next())}_onAttached(){this._overlayDir.positionChange.pipe(Ue(1)).subscribe(()=>{this._changeDetectorRef.detectChanges(),this._positioningSettled()})}_getPanelTheme(){return this._parentFormField?`mat-${this._parentFormField.color}`:""}get empty(){return!this._selectionModel||this._selectionModel.isEmpty()}_initializeSelection(){Promise.resolve().then(()=>{this.ngControl&&(this._value=this.ngControl.value),this._setSelectionByValue(this._value),this.stateChanges.next()})}_setSelectionByValue(e){if(this._selectionModel.selected.forEach(i=>i.setInactiveStyles()),this._selectionModel.clear(),this.multiple&&e)Array.isArray(e),e.forEach(i=>this._selectOptionByValue(i)),this._sortValues();else{const i=this._selectOptionByValue(e);i?this._keyManager.updateActiveItem(i):this.panelOpen||this._keyManager.updateActiveItem(-1)}this._changeDetectorRef.markForCheck()}_selectOptionByValue(e){const i=this.options.find(r=>{if(this._selectionModel.isSelected(r))return!1;try{return null!=r.value&&this._compareWith(r.value,e)}catch{return!1}});return i&&this._selectionModel.select(i),i}_assignValue(e){return!!(e!==this._value||this._multiple&&Array.isArray(e))&&(this.options&&this._setSelectionByValue(e),this._value=e,!0)}_initKeyManager(){this._keyManager=new fq(this.options).withTypeAhead(this._typeaheadDebounceInterval).withVerticalOrientation().withHorizontalOrientation(this._isRtl()?"rtl":"ltr").withHomeAndEnd().withPageUpDown().withAllowedModifierKeys(["shiftKey"]),this._keyManager.tabOut.subscribe(()=>{this.panelOpen&&(!this.multiple&&this._keyManager.activeItem&&this._keyManager.activeItem._selectViaInteraction(),this.focus(),this.close())}),this._keyManager.change.subscribe(()=>{this._panelOpen&&this.panel?this._scrollOptionIntoView(this._keyManager.activeItemIndex||0):!this._panelOpen&&!this.multiple&&this._keyManager.activeItem&&this._keyManager.activeItem._selectViaInteraction()})}_resetOptions(){const e=$t(this.options.changes,this._destroy);this.optionSelectionChanges.pipe(Te(e)).subscribe(i=>{this._onSelect(i.source,i.isUserInput),i.isUserInput&&!this.multiple&&this._panelOpen&&(this.close(),this.focus())}),$t(...this.options.map(i=>i._stateChanges)).pipe(Te(e)).subscribe(()=>{this._changeDetectorRef.detectChanges(),this.stateChanges.next()})}_onSelect(e,i){const r=this._selectionModel.isSelected(e);null!=e.value||this._multiple?(r!==e.selected&&(e.selected?this._selectionModel.select(e):this._selectionModel.deselect(e)),i&&this._keyManager.setActiveItem(e),this.multiple&&(this._sortValues(),i&&this.focus())):(e.deselect(),this._selectionModel.clear(),null!=this.value&&this._propagateChanges(e.value)),r!==this._selectionModel.isSelected(e)&&this._propagateChanges(),this.stateChanges.next()}_sortValues(){if(this.multiple){const e=this.options.toArray();this._selectionModel.sort((i,r)=>this.sortComparator?this.sortComparator(i,r,e):e.indexOf(i)-e.indexOf(r)),this.stateChanges.next()}}_propagateChanges(e){let i=null;i=this.multiple?this.selected.map(r=>r.value):this.selected?this.selected.value:e,this._value=i,this.valueChange.emit(i),this._onChange(i),this.selectionChange.emit(this._getChangeEvent(i)),this._changeDetectorRef.markForCheck()}_highlightCorrectOption(){this._keyManager&&(this.empty?this._keyManager.setFirstItemActive():this._keyManager.setActiveItem(this._selectionModel.selected[0]))}_canOpen(){return!this._panelOpen&&!this.disabled&&this.options?.length>0}focus(e){this._elementRef.nativeElement.focus(e)}_getPanelAriaLabelledby(){if(this.ariaLabel)return null;const e=this._parentFormField?.getLabelId();return this.ariaLabelledby?(e?e+" ":"")+this.ariaLabelledby:e}_getAriaActiveDescendant(){return this.panelOpen&&this._keyManager&&this._keyManager.activeItem?this._keyManager.activeItem.id:null}_getTriggerAriaLabelledby(){if(this.ariaLabel)return null;const e=this._parentFormField?.getLabelId();let i=(e?e+" ":"")+this._valueId;return this.ariaLabelledby&&(i+=" "+this.ariaLabelledby),i}_panelDoneAnimating(e){this.openedChange.emit(e)}setDescribedByIds(e){e.length?this._elementRef.nativeElement.setAttribute("aria-describedby",e.join(" ")):this._elementRef.nativeElement.removeAttribute("aria-describedby")}onContainerClick(){this.focus(),this.open()}get shouldLabelFloat(){return this._panelOpen||!this.empty||this._focused&&!!this._placeholder}}return n.\u0275fac=function(e){return new(e||n)(p(tl),p(Xe),p(j),p(Kx),p(z),p(Lt,8),p(cl,8),p(dl,8),p($d,8),p(ai,10),Hi("tabindex"),p(wE),p(Vq),p(jJ,8))},n.\u0275dir=M({type:n,viewQuery:function(e,i){if(1&e&&(je(RJ,5),je(TJ,5),je(aE,5)),2&e){let r;oe(r=se())&&(i.trigger=r.first),oe(r=se())&&(i.panel=r.first),oe(r=se())&&(i._overlayDir=r.first)}},inputs:{userAriaDescribedBy:["aria-describedby","userAriaDescribedBy"],panelClass:"panelClass",placeholder:"placeholder",required:"required",multiple:"multiple",disableOptionCentering:"disableOptionCentering",compareWith:"compareWith",value:"value",ariaLabel:["aria-label","ariaLabel"],ariaLabelledby:["aria-labelledby","ariaLabelledby"],errorStateMatcher:"errorStateMatcher",typeaheadDebounceInterval:"typeaheadDebounceInterval",sortComparator:"sortComparator",id:"id"},outputs:{openedChange:"openedChange",_openedStream:"opened",_closedStream:"closed",selectionChange:"selectionChange",valueChange:"valueChange"},features:[K,ze]}),n})(),EE=(()=>{class n extends JJ{constructor(){super(...arguments),this._positions=[{originX:"start",originY:"bottom",overlayX:"start",overlayY:"top"},{originX:"start",originY:"top",overlayX:"start",overlayY:"bottom",panelClass:"mat-mdc-select-panel-above"}]}get shouldLabelFloat(){return this.panelOpen||!this.empty||this.focused&&!!this.placeholder}ngOnInit(){super.ngOnInit(),this._viewportRuler.change().pipe(Te(this._destroy)).subscribe(()=>{this.panelOpen&&(this._overlayWidth=this._getOverlayWidth(),this._changeDetectorRef.detectChanges())})}ngAfterViewInit(){this._parentFormField&&(this._preferredOverlayOrigin=this._parentFormField.getConnectedOverlayOrigin())}open(){this._overlayWidth=this._getOverlayWidth(),super.open(),this.stateChanges.next()}close(){super.close(),this.stateChanges.next()}_scrollOptionIntoView(e){const i=this.options.toArray()[e];if(i){const r=this.panel.nativeElement,o=function cK(n,t,e){if(e.length){let i=t.toArray(),r=e.toArray(),o=0;for(let s=0;s<n+1;s++)i[s].group&&i[s].group===r[o]&&o++;return o}return 0}(e,this.options,this.optionGroups),s=i._getHostElement();r.scrollTop=0===e&&1===o?0:function dK(n,t,e,i){return n<e?n:n+t>e+i?Math.max(0,n-i+t):e}(s.offsetTop,s.offsetHeight,r.scrollTop,r.offsetHeight)}}_positioningSettled(){this._scrollOptionIntoView(this._keyManager.activeItemIndex||0)}_getChangeEvent(e){return new HJ(this,e)}_getOverlayWidth(){return(this._preferredOverlayOrigin instanceof fg?this._preferredOverlayOrigin.elementRef:this._preferredOverlayOrigin||this._elementRef).nativeElement.getBoundingClientRect().width}}return n.\u0275fac=function(){let t;return function(i){return(t||(t=rt(n)))(i||n)}}(),n.\u0275cmp=ee({type:n,selectors:[["mat-select"]],contentQueries:function(e,i,r){if(1&e&&(At(r,KJ,5),At(r,Rm,5),At(r,zx,5)),2&e){let o;oe(o=se())&&(i.customTrigger=o.first),oe(o=se())&&(i.options=o),oe(o=se())&&(i.optionGroups=o)}},hostAttrs:["role","combobox","aria-autocomplete","none","aria-haspopup","listbox",1,"mat-mdc-select"],hostVars:19,hostBindings:function(e,i){1&e&&H("keydown",function(o){return i._handleKeydown(o)})("focus",function(){return i._onFocus()})("blur",function(){return i._onBlur()}),2&e&&(pe("id",i.id)("tabindex",i.tabIndex)("aria-controls",i.panelOpen?i.id+"-panel":null)("aria-expanded",i.panelOpen)("aria-label",i.ariaLabel||null)("aria-required",i.required.toString())("aria-disabled",i.disabled.toString())("aria-invalid",i.errorState)("aria-activedescendant",i._getAriaActiveDescendant()),me("mat-mdc-select-disabled",i.disabled)("mat-mdc-select-invalid",i.errorState)("mat-mdc-select-required",i.required)("mat-mdc-select-empty",i.empty)("mat-mdc-select-multiple",i.multiple))},inputs:{disabled:"disabled",disableRipple:"disableRipple",tabIndex:"tabIndex"},exportAs:["matSelect"],features:[ve([{provide:Hm,useExisting:n},{provide:Gx,useExisting:n}]),K],ngContentSelectors:PJ,decls:11,vars:11,consts:[["cdk-overlay-origin","",1,"mat-mdc-select-trigger",3,"click"],["fallbackOverlayOrigin","cdkOverlayOrigin","trigger",""],[1,"mat-mdc-select-value",3,"ngSwitch"],["class","mat-mdc-select-placeholder mat-mdc-select-min-line",4,"ngSwitchCase"],["class","mat-mdc-select-value-text",3,"ngSwitch",4,"ngSwitchCase"],[1,"mat-mdc-select-arrow-wrapper"],[1,"mat-mdc-select-arrow"],["viewBox","0 0 24 24","width","24px","height","24px","focusable","false"],["d","M7 10l5 5 5-5z"],["cdk-connected-overlay","","cdkConnectedOverlayLockPosition","","cdkConnectedOverlayHasBackdrop","","cdkConnectedOverlayBackdropClass","cdk-overlay-transparent-backdrop",3,"cdkConnectedOverlayPanelClass","cdkConnectedOverlayScrollStrategy","cdkConnectedOverlayOrigin","cdkConnectedOverlayOpen","cdkConnectedOverlayPositions","cdkConnectedOverlayWidth","backdropClick","attach","detach"],[1,"mat-mdc-select-placeholder","mat-mdc-select-min-line"],[1,"mat-mdc-select-value-text",3,"ngSwitch"],["class","mat-mdc-select-min-line",4,"ngSwitchDefault"],[4,"ngSwitchCase"],[1,"mat-mdc-select-min-line"],["role","listbox","tabindex","-1",3,"ngClass","keydown"],["panel",""]],template:function(e,i){if(1&e&&(Tt(NJ),b(0,"div",0,1),H("click",function(){return i.toggle()}),b(3,"div",2),J(4,MJ,2,1,"span",3),J(5,VJ,3,2,"span",4),y(),b(6,"div",5)(7,"div",6),Ns(),b(8,"svg",7),q(9,"path",8),y()()()(),J(10,UJ,3,9,"ng-template",9),H("backdropClick",function(){return i.close()})("attach",function(){return i._onAttached()})("detach",function(){return i.close()})),2&e){const r=Er(1);pe("aria-owns",i.panelOpen?i.id+"-panel":null),w(3),I("ngSwitch",i.empty),pe("id",i._valueId),w(1),I("ngSwitchCase",!0),w(1),I("ngSwitchCase",!1),w(5),I("cdkConnectedOverlayPanelClass",i._overlayPanelClass)("cdkConnectedOverlayScrollStrategy",i._scrollStrategy)("cdkConnectedOverlayOrigin",i._preferredOverlayOrigin||r)("cdkConnectedOverlayOpen",i.panelOpen)("cdkConnectedOverlayPositions",i._positions)("cdkConnectedOverlayWidth",i._overlayWidth)}},dependencies:[Vr,Wo,rd,xC,aE,fg],styles:['.mdc-menu-surface{display:none;position:absolute;box-sizing:border-box;max-width:calc(100vw - 32px);max-width:var(--mdc-menu-max-width, calc(100vw - 32px));max-height:calc(100vh - 32px);max-height:var(--mdc-menu-max-height, calc(100vh - 32px));margin:0;padding:0;transform:scale(1);transform-origin:top left;opacity:0;overflow:auto;will-change:transform,opacity;z-index:8;border-radius:4px;border-radius:var(--mdc-shape-medium, 4px);transform-origin-left:top left;transform-origin-right:top right}.mdc-menu-surface:focus{outline:none}.mdc-menu-surface--animating-open{display:inline-block;transform:scale(0.8);opacity:0}.mdc-menu-surface--open{display:inline-block;transform:scale(1);opacity:1}.mdc-menu-surface--animating-closed{display:inline-block;opacity:0}[dir=rtl] .mdc-menu-surface,.mdc-menu-surface[dir=rtl]{transform-origin-left:top right;transform-origin-right:top left}.mdc-menu-surface--anchor{position:relative;overflow:visible}.mdc-menu-surface--fixed{position:fixed}.mdc-menu-surface--fullwidth{width:100%}.mat-mdc-select{display:inline-block;width:100%;outline:none}.mat-mdc-select-trigger{display:inline-flex;align-items:center;cursor:pointer;position:relative;box-sizing:border-box;width:100%}.mat-mdc-select-disabled .mat-mdc-select-trigger{-webkit-user-select:none;user-select:none;cursor:default}.mat-mdc-select-value{width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.mat-mdc-select-value-text{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-mdc-select-arrow-wrapper{height:24px;flex-shrink:0;display:inline-flex;align-items:center}.mat-form-field-appearance-fill .mat-mdc-select-arrow-wrapper{transform:translateY(-8px)}.mat-form-field-appearance-fill .mdc-text-field--no-label .mat-mdc-select-arrow-wrapper{transform:none}.mat-mdc-select-arrow{width:10px;height:5px;position:relative}.mat-mdc-select-arrow svg{fill:currentColor;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%)}.cdk-high-contrast-active .mat-mdc-select-arrow svg{fill:CanvasText}.mat-mdc-select-disabled .cdk-high-contrast-active .mat-mdc-select-arrow svg{fill:GrayText}.mdc-menu-surface.mat-mdc-select-panel{width:100%;max-height:275px;position:static;outline:0;margin:0;padding:8px 0;list-style-type:none}.mdc-menu-surface.mat-mdc-select-panel:focus{outline:none}.cdk-high-contrast-active .mdc-menu-surface.mat-mdc-select-panel{outline:solid 1px}.cdk-overlay-pane:not(.mat-mdc-select-panel-above) .mdc-menu-surface.mat-mdc-select-panel{border-top-left-radius:0;border-top-right-radius:0;transform-origin:top center}.mat-mdc-select-panel-above .mdc-menu-surface.mat-mdc-select-panel{border-bottom-left-radius:0;border-bottom-right-radius:0;transform-origin:bottom center}.mat-mdc-select-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable .mat-mdc-select-placeholder{transition:none}.mat-form-field-hide-placeholder .mat-mdc-select-placeholder{color:rgba(0,0,0,0);-webkit-text-fill-color:rgba(0,0,0,0);transition:none;display:block}.mat-mdc-form-field-type-mat-select.mat-form-field-appearance-fill .mat-mdc-floating-label{max-width:calc(100% - 18px)}.mat-mdc-form-field-type-mat-select.mat-form-field-appearance-fill .mdc-floating-label--float-above{max-width:calc(100% / 0.75 - 24px)}.mat-mdc-form-field-type-mat-select.mat-form-field-appearance-outline .mdc-notched-outline__notch{max-width:calc(100% - 60px)}.mat-mdc-form-field-type-mat-select.mat-form-field-appearance-outline .mdc-text-field--label-floating .mdc-notched-outline__notch{max-width:calc(100% - 24px)}.mat-mdc-select-min-line:empty::before{content:" ";white-space:pre;width:1px;display:inline-block;visibility:hidden}'],encapsulation:2,data:{animation:[_J.transformPanel]},changeDetection:0}),n})(),IE=(()=>{class n{}return n.\u0275fac=function(e){return new(e||n)},n.\u0275mod=he({type:n}),n.\u0275inj=ce({providers:[qJ],imports:[Ei,ml,Yx,Ne,Gr,rl,Yx,Ne]}),n})();const WJ=["mat-calendar-body",""];function QJ(n,t){if(1&n&&(b(0,"tr",3)(1,"td",4),E(2),y()()),2&n){const e=re();w(1),_n("padding-top",e._cellPadding)("padding-bottom",e._cellPadding),pe("colspan",e.numCols),w(1),An(" ",e.label," ")}}function GJ(n,t){if(1&n&&(b(0,"td",4),E(1),y()),2&n){const e=re(2);_n("padding-top",e._cellPadding)("padding-bottom",e._cellPadding),pe("colspan",e._firstRowOffset),w(1),An(" ",e._firstRowOffset>=e.labelMinRequiredCells?e.label:""," ")}}function zJ(n,t){if(1&n){const e=Xn();b(0,"td",8)(1,"button",9),H("click",function(r){const s=ct(e).$implicit;return dt(re(2)._cellClicked(s,r))})("focus",function(r){const s=ct(e).$implicit;return dt(re(2)._emitActiveDateChange(s,r))}),b(2,"div",10),E(3),y(),q(4,"div",11),y()()}if(2&n){const e=t.$implicit,i=t.index,r=re().index,o=re();_n("width",o._cellWidth)("padding-top",o._cellPadding)("padding-bottom",o._cellPadding),pe("data-mat-row",r)("data-mat-col",i),w(1),me("mat-calendar-body-disabled",!e.enabled)("mat-calendar-body-active",o._isActiveCell(r,i))("mat-calendar-body-range-start",o._isRangeStart(e.compareValue))("mat-calendar-body-range-end",o._isRangeEnd(e.compareValue))("mat-calendar-body-in-range",o._isInRange(e.compareValue))("mat-calendar-body-comparison-bridge-start",o._isComparisonBridgeStart(e.compareValue,r,i))("mat-calendar-body-comparison-bridge-end",o._isComparisonBridgeEnd(e.compareValue,r,i))("mat-calendar-body-comparison-start",o._isComparisonStart(e.compareValue))("mat-calendar-body-comparison-end",o._isComparisonEnd(e.compareValue))("mat-calendar-body-in-comparison-range",o._isInComparisonRange(e.compareValue))("mat-calendar-body-preview-start",o._isPreviewStart(e.compareValue))("mat-calendar-body-preview-end",o._isPreviewEnd(e.compareValue))("mat-calendar-body-in-preview",o._isInPreview(e.compareValue)),I("ngClass",e.cssClasses)("tabindex",o._isActiveCell(r,i)?0:-1),pe("aria-label",e.ariaLabel)("aria-disabled",!e.enabled||null)("aria-pressed",o._isSelected(e.compareValue))("aria-current",o.todayValue===e.compareValue?"date":null)("aria-describedby",o._getDescribedby(e.compareValue)),w(1),me("mat-calendar-body-selected",o._isSelected(e.compareValue))("mat-calendar-body-comparison-identical",o._isComparisonIdentical(e.compareValue))("mat-calendar-body-today",o.todayValue===e.compareValue),w(1),An(" ",e.displayValue," ")}}function YJ(n,t){if(1&n&&(b(0,"tr",5),J(1,GJ,2,6,"td",6),J(2,zJ,5,48,"td",7),y()),2&n){const e=t.$implicit,i=t.index,r=re();w(1),I("ngIf",0===i&&r._firstRowOffset),w(1),I("ngForOf",e)}}function XJ(n,t){if(1&n&&(b(0,"th",5)(1,"span",6),E(2),y(),b(3,"span",7),E(4),y()()),2&n){const e=t.$implicit;w(2),gt(e.long),w(2),gt(e.narrow)}}const ZJ=["*"];function $J(n,t){}function eW(n,t){if(1&n){const e=Xn();b(0,"mat-month-view",5),H("activeDateChange",function(r){return ct(e),dt(re().activeDate=r)})("_userSelection",function(r){return ct(e),dt(re()._dateSelected(r))})("dragStarted",function(r){return ct(e),dt(re()._dragStarted(r))})("dragEnded",function(r){return ct(e),dt(re()._dragEnded(r))}),y()}if(2&n){const e=re();I("activeDate",e.activeDate)("selected",e.selected)("dateFilter",e.dateFilter)("maxDate",e.maxDate)("minDate",e.minDate)("dateClass",e.dateClass)("comparisonStart",e.comparisonStart)("comparisonEnd",e.comparisonEnd)("startDateAccessibleName",e.startDateAccessibleName)("endDateAccessibleName",e.endDateAccessibleName)("activeDrag",e._activeDrag)}}function tW(n,t){if(1&n){const e=Xn();b(0,"mat-year-view",6),H("activeDateChange",function(r){return ct(e),dt(re().activeDate=r)})("monthSelected",function(r){return ct(e),dt(re()._monthSelectedInYearView(r))})("selectedChange",function(r){return ct(e),dt(re()._goToDateInView(r,"month"))}),y()}if(2&n){const e=re();I("activeDate",e.activeDate)("selected",e.selected)("dateFilter",e.dateFilter)("maxDate",e.maxDate)("minDate",e.minDate)("dateClass",e.dateClass)}}function nW(n,t){if(1&n){const e=Xn();b(0,"mat-multi-year-view",7),H("activeDateChange",function(r){return ct(e),dt(re().activeDate=r)})("yearSelected",function(r){return ct(e),dt(re()._yearSelectedInMultiYearView(r))})("selectedChange",function(r){return ct(e),dt(re()._goToDateInView(r,"year"))}),y()}if(2&n){const e=re();I("activeDate",e.activeDate)("selected",e.selected)("dateFilter",e.dateFilter)("maxDate",e.maxDate)("minDate",e.minDate)("dateClass",e.dateClass)}}function iW(n,t){}const rW=["button"];function oW(n,t){1&n&&(Ns(),b(0,"svg",3),q(1,"path",4),y())}const sW=[[["","matDatepickerToggleIcon",""]]],aW=["[matDatepickerToggleIcon]"];let vl=(()=>{class n{constructor(){this.changes=new P,this.calendarLabel="Calendar",this.openCalendarLabel="Open calendar",this.closeCalendarLabel="Close calendar",this.prevMonthLabel="Previous month",this.nextMonthLabel="Next month",this.prevYearLabel="Previous year",this.nextYearLabel="Next year",this.prevMultiYearLabel="Previous 24 years",this.nextMultiYearLabel="Next 24 years",this.switchToMonthViewLabel="Choose date",this.switchToMultiYearViewLabel="Choose month and year",this.startDateLabel="Start date",this.endDateLabel="End date"}formatYearRange(e,i){return`${e} \u2013 ${i}`}formatYearRangeLabel(e,i){return`${e} to ${i}`}}return n.\u0275fac=function(e){return new(e||n)},n.\u0275prov=R({token:n,factory:n.\u0275fac,providedIn:"root"}),n})();class vg{constructor(t,e,i,r,o={},s=t,a){this.value=t,this.displayValue=e,this.ariaLabel=i,this.enabled=r,this.cssClasses=o,this.compareValue=s,this.rawValue=a}}let lW=1,bs=(()=>{class n{ngAfterViewChecked(){this._focusActiveCellAfterViewChecked&&(this._focusActiveCell(),this._focusActiveCellAfterViewChecked=!1)}constructor(e,i){this._elementRef=e,this._ngZone=i,this._focusActiveCellAfterViewChecked=!1,this.numCols=7,this.activeCell=0,this.isRange=!1,this.cellAspectRatio=1,this.previewStart=null,this.previewEnd=null,this.selectedValueChange=new O,this.previewChange=new O,this.activeDateChange=new O,this.dragStarted=new O,this.dragEnded=new O,this._didDragSinceMouseDown=!1,this._enterHandler=r=>{if(this._skipNextFocus&&"focus"===r.type)this._skipNextFocus=!1;else if(r.target&&this.isRange){const o=this._getCellFromElement(r.target);o&&this._ngZone.run(()=>this.previewChange.emit({value:o.enabled?o:null,event:r}))}},this._touchmoveHandler=r=>{if(!this.isRange)return;const o=RE(r),s=o?this._getCellFromElement(o):null;o!==r.target&&(this._didDragSinceMouseDown=!0),Sg(r.target)&&r.preventDefault(),this._ngZone.run(()=>this.previewChange.emit({value:s?.enabled?s:null,event:r}))},this._leaveHandler=r=>{null!==this.previewEnd&&this.isRange&&("blur"!==r.type&&(this._didDragSinceMouseDown=!0),r.target&&this._getCellFromElement(r.target)&&(!r.relatedTarget||!this._getCellFromElement(r.relatedTarget))&&this._ngZone.run(()=>this.previewChange.emit({value:null,event:r})))},this._mousedownHandler=r=>{if(!this.isRange)return;this._didDragSinceMouseDown=!1;const o=r.target&&this._getCellFromElement(r.target);!o||!this._isInRange(o.rawValue)||this._ngZone.run(()=>{this.dragStarted.emit({value:o.rawValue,event:r})})},this._mouseupHandler=r=>{if(!this.isRange)return;const o=Sg(r.target);o?o.closest(".mat-calendar-body")===this._elementRef.nativeElement&&this._ngZone.run(()=>{const s=this._getCellFromElement(o);this.dragEnded.emit({value:s?.rawValue??null,event:r})}):this._ngZone.run(()=>{this.dragEnded.emit({value:null,event:r})})},this._touchendHandler=r=>{const o=RE(r);o&&this._mouseupHandler({target:o})},this._id="mat-calendar-body-"+lW++,this._startDateLabelId=`${this._id}-start-date`,this._endDateLabelId=`${this._id}-end-date`,i.runOutsideAngular(()=>{const r=e.nativeElement;r.addEventListener("mouseenter",this._enterHandler,!0),r.addEventListener("touchmove",this._touchmoveHandler,!0),r.addEventListener("focus",this._enterHandler,!0),r.addEventListener("mouseleave",this._leaveHandler,!0),r.addEventListener("blur",this._leaveHandler,!0),r.addEventListener("mousedown",this._mousedownHandler),r.addEventListener("touchstart",this._mousedownHandler),window.addEventListener("mouseup",this._mouseupHandler),window.addEventListener("touchend",this._touchendHandler)})}_cellClicked(e,i){this._didDragSinceMouseDown||e.enabled&&this.selectedValueChange.emit({value:e.value,event:i})}_emitActiveDateChange(e,i){e.enabled&&this.activeDateChange.emit({value:e.value,event:i})}_isSelected(e){return this.startValue===e||this.endValue===e}ngOnChanges(e){const i=e.numCols,{rows:r,numCols:o}=this;(e.rows||i)&&(this._firstRowOffset=r&&r.length&&r[0].length?o-r[0].length:0),(e.cellAspectRatio||i||!this._cellPadding)&&(this._cellPadding=50*this.cellAspectRatio/o+"%"),(i||!this._cellWidth)&&(this._cellWidth=100/o+"%")}ngOnDestroy(){const e=this._elementRef.nativeElement;e.removeEventListener("mouseenter",this._enterHandler,!0),e.removeEventListener("touchmove",this._touchmoveHandler,!0),e.removeEventListener("focus",this._enterHandler,!0),e.removeEventListener("mouseleave",this._leaveHandler,!0),e.removeEventListener("blur",this._leaveHandler,!0),e.removeEventListener("mousedown",this._mousedownHandler),e.removeEventListener("touchstart",this._mousedownHandler),window.removeEventListener("mouseup",this._mouseupHandler),window.removeEventListener("touchend",this._touchendHandler)}_isActiveCell(e,i){let r=e*this.numCols+i;return e&&(r-=this._firstRowOffset),r==this.activeCell}_focusActiveCell(e=!0){this._ngZone.runOutsideAngular(()=>{this._ngZone.onStable.pipe(Ue(1)).subscribe(()=>{setTimeout(()=>{const i=this._elementRef.nativeElement.querySelector(".mat-calendar-body-active");i&&(e||(this._skipNextFocus=!0),i.focus())})})})}_scheduleFocusActiveCellAfterViewChecked(){this._focusActiveCellAfterViewChecked=!0}_isRangeStart(e){return Cg(e,this.startValue,this.endValue)}_isRangeEnd(e){return kg(e,this.startValue,this.endValue)}_isInRange(e){return xg(e,this.startValue,this.endValue,this.isRange)}_isComparisonStart(e){return Cg(e,this.comparisonStart,this.comparisonEnd)}_isComparisonBridgeStart(e,i,r){if(!this._isComparisonStart(e)||this._isRangeStart(e)||!this._isInRange(e))return!1;let o=this.rows[i][r-1];if(!o){const s=this.rows[i-1];o=s&&s[s.length-1]}return o&&!this._isRangeEnd(o.compareValue)}_isComparisonBridgeEnd(e,i,r){if(!this._isComparisonEnd(e)||this._isRangeEnd(e)||!this._isInRange(e))return!1;let o=this.rows[i][r+1];if(!o){const s=this.rows[i+1];o=s&&s[0]}return o&&!this._isRangeStart(o.compareValue)}_isComparisonEnd(e){return kg(e,this.comparisonStart,this.comparisonEnd)}_isInComparisonRange(e){return xg(e,this.comparisonStart,this.comparisonEnd,this.isRange)}_isComparisonIdentical(e){return this.comparisonStart===this.comparisonEnd&&e===this.comparisonStart}_isPreviewStart(e){return Cg(e,this.previewStart,this.previewEnd)}_isPreviewEnd(e){return kg(e,this.previewStart,this.previewEnd)}_isInPreview(e){return xg(e,this.previewStart,this.previewEnd,this.isRange)}_getDescribedby(e){return this.isRange?this.startValue===e&&this.endValue===e?`${this._startDateLabelId} ${this._endDateLabelId}`:this.startValue===e?this._startDateLabelId:this.endValue===e?this._endDateLabelId:null:null}_getCellFromElement(e){const i=Sg(e);if(i){const r=i.getAttribute("data-mat-row"),o=i.getAttribute("data-mat-col");if(r&&o)return this.rows[parseInt(r)][parseInt(o)]}return null}}return n.\u0275fac=function(e){return new(e||n)(p(z),p(j))},n.\u0275cmp=ee({type:n,selectors:[["","mat-calendar-body",""]],hostAttrs:[1,"mat-calendar-body"],inputs:{label:"label",rows:"rows",todayValue:"todayValue",startValue:"startValue",endValue:"endValue",labelMinRequiredCells:"labelMinRequiredCells",numCols:"numCols",activeCell:"activeCell",isRange:"isRange",cellAspectRatio:"cellAspectRatio",comparisonStart:"comparisonStart",comparisonEnd:"comparisonEnd",previewStart:"previewStart",previewEnd:"previewEnd",startDateAccessibleName:"startDateAccessibleName",endDateAccessibleName:"endDateAccessibleName"},outputs:{selectedValueChange:"selectedValueChange",previewChange:"previewChange",activeDateChange:"activeDateChange",dragStarted:"dragStarted",dragEnded:"dragEnded"},exportAs:["matCalendarBody"],features:[ze],attrs:WJ,decls:6,vars:6,consts:[["aria-hidden","true",4,"ngIf"],["role","row",4,"ngFor","ngForOf"],[1,"mat-calendar-body-hidden-label",3,"id"],["aria-hidden","true"],[1,"mat-calendar-body-label"],["role","row"],["class","mat-calendar-body-label",3,"paddingTop","paddingBottom",4,"ngIf"],["role","gridcell","class","mat-calendar-body-cell-container",3,"width","paddingTop","paddingBottom",4,"ngFor","ngForOf"],["role","gridcell",1,"mat-calendar-body-cell-container"],["type","button",1,"mat-calendar-body-cell",3,"ngClass","tabindex","click","focus"],[1,"mat-calendar-body-cell-content","mat-focus-indicator"],["aria-hidden","true",1,"mat-calendar-body-cell-preview"]],template:function(e,i){1&e&&(J(0,QJ,3,6,"tr",0),J(1,YJ,3,2,"tr",1),b(2,"label",2),E(3),y(),b(4,"label",2),E(5),y()),2&e&&(I("ngIf",i._firstRowOffset<i.labelMinRequiredCells),w(1),I("ngForOf",i.rows),w(1),I("id",i._startDateLabelId),w(1),An(" ",i.startDateAccessibleName,"\n"),w(1),I("id",i._endDateLabelId),w(1),An(" ",i.endDateAccessibleName,"\n"))},dependencies:[Vr,Ur,wi],styles:['.mat-calendar-body{min-width:224px}.mat-calendar-body-label{height:0;line-height:0;text-align:left;padding-left:4.7142857143%;padding-right:4.7142857143%}.mat-calendar-body-hidden-label{display:none}.mat-calendar-body-cell-container{position:relative;height:0;line-height:0}.mat-calendar-body-cell{-webkit-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:rgba(0,0,0,0);position:absolute;top:0;left:0;width:100%;height:100%;background:none;text-align:center;outline:none;font-family:inherit;margin:0}.mat-calendar-body-cell::-moz-focus-inner{border:0}.mat-calendar-body-cell::before,.mat-calendar-body-cell::after,.mat-calendar-body-cell-preview{content:"";position:absolute;top:5%;left:0;z-index:0;box-sizing:border-box;height:90%;width:100%}.mat-calendar-body-range-start:not(.mat-calendar-body-in-comparison-range)::before,.mat-calendar-body-range-start::after,.mat-calendar-body-comparison-start:not(.mat-calendar-body-comparison-bridge-start)::before,.mat-calendar-body-comparison-start::after,.mat-calendar-body-preview-start .mat-calendar-body-cell-preview{left:5%;width:95%;border-top-left-radius:999px;border-bottom-left-radius:999px}[dir=rtl] .mat-calendar-body-range-start:not(.mat-calendar-body-in-comparison-range)::before,[dir=rtl] .mat-calendar-body-range-start::after,[dir=rtl] .mat-calendar-body-comparison-start:not(.mat-calendar-body-comparison-bridge-start)::before,[dir=rtl] .mat-calendar-body-comparison-start::after,[dir=rtl] .mat-calendar-body-preview-start .mat-calendar-body-cell-preview{left:0;border-radius:0;border-top-right-radius:999px;border-bottom-right-radius:999px}.mat-calendar-body-range-end:not(.mat-calendar-body-in-comparison-range)::before,.mat-calendar-body-range-end::after,.mat-calendar-body-comparison-end:not(.mat-calendar-body-comparison-bridge-end)::before,.mat-calendar-body-comparison-end::after,.mat-calendar-body-preview-end .mat-calendar-body-cell-preview{width:95%;border-top-right-radius:999px;border-bottom-right-radius:999px}[dir=rtl] .mat-calendar-body-range-end:not(.mat-calendar-body-in-comparison-range)::before,[dir=rtl] .mat-calendar-body-range-end::after,[dir=rtl] .mat-calendar-body-comparison-end:not(.mat-calendar-body-comparison-bridge-end)::before,[dir=rtl] .mat-calendar-body-comparison-end::after,[dir=rtl] .mat-calendar-body-preview-end .mat-calendar-body-cell-preview{left:5%;border-radius:0;border-top-left-radius:999px;border-bottom-left-radius:999px}[dir=rtl] .mat-calendar-body-comparison-bridge-start.mat-calendar-body-range-end::after,[dir=rtl] .mat-calendar-body-comparison-bridge-end.mat-calendar-body-range-start::after{width:95%;border-top-right-radius:999px;border-bottom-right-radius:999px}.mat-calendar-body-comparison-start.mat-calendar-body-range-end::after,[dir=rtl] .mat-calendar-body-comparison-start.mat-calendar-body-range-end::after,.mat-calendar-body-comparison-end.mat-calendar-body-range-start::after,[dir=rtl] .mat-calendar-body-comparison-end.mat-calendar-body-range-start::after{width:90%}.mat-calendar-body-in-preview .mat-calendar-body-cell-preview{border-top:dashed 1px;border-bottom:dashed 1px}.mat-calendar-body-preview-start .mat-calendar-body-cell-preview{border-left:dashed 1px}[dir=rtl] .mat-calendar-body-preview-start .mat-calendar-body-cell-preview{border-left:0;border-right:dashed 1px}.mat-calendar-body-preview-end .mat-calendar-body-cell-preview{border-right:dashed 1px}[dir=rtl] .mat-calendar-body-preview-end .mat-calendar-body-cell-preview{border-right:0;border-left:dashed 1px}.mat-calendar-body-disabled{cursor:default}.cdk-high-contrast-active .mat-calendar-body-disabled{opacity:.5}.mat-calendar-body-cell-content{top:5%;left:5%;z-index:1;display:flex;align-items:center;justify-content:center;box-sizing:border-box;width:90%;height:90%;line-height:1;border-width:1px;border-style:solid;border-radius:999px}.mat-calendar-body-cell-content.mat-focus-indicator{position:absolute}.cdk-high-contrast-active .mat-calendar-body-cell-content{border:none}.cdk-high-contrast-active .mat-datepicker-popup:not(:empty),.cdk-high-contrast-active .mat-calendar-body-cell:not(.mat-calendar-body-in-range) .mat-calendar-body-selected{outline:solid 1px}.cdk-high-contrast-active .mat-calendar-body-today{outline:dotted 1px}.cdk-high-contrast-active .mat-calendar-body-cell::before,.cdk-high-contrast-active .mat-calendar-body-cell::after,.cdk-high-contrast-active .mat-calendar-body-selected{background:none}.cdk-high-contrast-active .mat-calendar-body-in-range::before,.cdk-high-contrast-active .mat-calendar-body-comparison-bridge-start::before,.cdk-high-contrast-active .mat-calendar-body-comparison-bridge-end::before{border-top:solid 1px;border-bottom:solid 1px}.cdk-high-contrast-active .mat-calendar-body-range-start::before{border-left:solid 1px}[dir=rtl] .cdk-high-contrast-active .mat-calendar-body-range-start::before{border-left:0;border-right:solid 1px}.cdk-high-contrast-active .mat-calendar-body-range-end::before{border-right:solid 1px}[dir=rtl] .cdk-high-contrast-active .mat-calendar-body-range-end::before{border-right:0;border-left:solid 1px}.cdk-high-contrast-active .mat-calendar-body-in-comparison-range::before{border-top:dashed 1px;border-bottom:dashed 1px}.cdk-high-contrast-active .mat-calendar-body-comparison-start::before{border-left:dashed 1px}[dir=rtl] .cdk-high-contrast-active .mat-calendar-body-comparison-start::before{border-left:0;border-right:dashed 1px}.cdk-high-contrast-active .mat-calendar-body-comparison-end::before{border-right:dashed 1px}[dir=rtl] .cdk-high-contrast-active .mat-calendar-body-comparison-end::before{border-right:0;border-left:dashed 1px}[dir=rtl] .mat-calendar-body-label{text-align:right}'],encapsulation:2,changeDetection:0}),n})();function Ag(n){return"TD"===n?.nodeName}function Sg(n){let t;return Ag(n)?t=n:Ag(n.parentNode)?t=n.parentNode:Ag(n.parentNode?.parentNode)&&(t=n.parentNode.parentNode),null!=t?.getAttribute("data-mat-row")?t:null}function Cg(n,t,e){return null!==e&&t!==e&&n<e&&n===t}function kg(n,t,e){return null!==t&&t!==e&&n>=t&&n===e}function xg(n,t,e,i){return i&&null!==t&&null!==e&&t!==e&&n>=t&&n<=e}function RE(n){const t=n.changedTouches[0];return document.elementFromPoint(t.clientX,t.clientY)}class Wt{constructor(t,e){this.start=t,this.end=e}}let sr=(()=>{class n{constructor(e,i){this.selection=e,this._adapter=i,this._selectionChanged=new P,this.selectionChanged=this._selectionChanged,this.selection=e}updateSelection(e,i){const r=this.selection;this.selection=e,this._selectionChanged.next({selection:e,source:i,oldValue:r})}ngOnDestroy(){this._selectionChanged.complete()}_isValidDateInstance(e){return this._adapter.isDateInstance(e)&&this._adapter.isValid(e)}}return n.\u0275fac=function(e){Li()},n.\u0275prov=R({token:n,factory:n.\u0275fac}),n})(),cW=(()=>{class n extends sr{constructor(e){super(null,e)}add(e){super.updateSelection(e,this)}isValid(){return null!=this.selection&&this._isValidDateInstance(this.selection)}isComplete(){return null!=this.selection}clone(){const e=new n(this._adapter);return e.updateSelection(this.selection,this),e}}return n.\u0275fac=function(e){return new(e||n)(v(Ct))},n.\u0275prov=R({token:n,factory:n.\u0275fac}),n})();const TE={provide:sr,deps:[[new yn,new gi,sr],Ct],useFactory:function uW(n,t){return n||new cW(t)}},gu=new D("MAT_DATE_RANGE_SELECTION_STRATEGY");let ME=(()=>{class n{get activeDate(){return this._activeDate}set activeDate(e){const i=this._activeDate,r=this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(e))||this._dateAdapter.today();this._activeDate=this._dateAdapter.clampDate(r,this.minDate,this.maxDate),this._hasSameMonthAndYear(i,this._activeDate)||this._init()}get selected(){return this._selected}set selected(e){this._selected=e instanceof Wt?e:this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(e)),this._setRanges(this._selected)}get minDate(){return this._minDate}set minDate(e){this._minDate=this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(e))}get maxDate(){return this._maxDate}set maxDate(e){this._maxDate=this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(e))}constructor(e,i,r,o,s){this._changeDetectorRef=e,this._dateFormats=i,this._dateAdapter=r,this._dir=o,this._rangeStrategy=s,this._rerenderSubscription=ke.EMPTY,this.activeDrag=null,this.selectedChange=new O,this._userSelection=new O,this.dragStarted=new O,this.dragEnded=new O,this.activeDateChange=new O,this._activeDate=this._dateAdapter.today()}ngAfterContentInit(){this._rerenderSubscription=this._dateAdapter.localeChanges.pipe(xn(null)).subscribe(()=>this._init())}ngOnChanges(e){const i=e.comparisonStart||e.comparisonEnd;i&&!i.firstChange&&this._setRanges(this.selected),e.activeDrag&&!this.activeDrag&&this._clearPreview()}ngOnDestroy(){this._rerenderSubscription.unsubscribe()}_dateSelected(e){const i=e.value,r=this._getDateFromDayOfMonth(i);let o,s;this._selected instanceof Wt?(o=this._getDateInCurrentMonth(this._selected.start),s=this._getDateInCurrentMonth(this._selected.end)):o=s=this._getDateInCurrentMonth(this._selected),(o!==i||s!==i)&&this.selectedChange.emit(r),this._userSelection.emit({value:r,event:e.event}),this._clearPreview(),this._changeDetectorRef.markForCheck()}_updateActiveDate(e){const r=this._activeDate;this.activeDate=this._getDateFromDayOfMonth(e.value),this._dateAdapter.compareDate(r,this.activeDate)&&this.activeDateChange.emit(this._activeDate)}_handleCalendarBodyKeydown(e){const i=this._activeDate,r=this._isRtl();switch(e.keyCode){case 37:this.activeDate=this._dateAdapter.addCalendarDays(this._activeDate,r?1:-1);break;case 39:this.activeDate=this._dateAdapter.addCalendarDays(this._activeDate,r?-1:1);break;case 38:this.activeDate=this._dateAdapter.addCalendarDays(this._activeDate,-7);break;case 40:this.activeDate=this._dateAdapter.addCalendarDays(this._activeDate,7);break;case 36:this.activeDate=this._dateAdapter.addCalendarDays(this._activeDate,1-this._dateAdapter.getDate(this._activeDate));break;case 35:this.activeDate=this._dateAdapter.addCalendarDays(this._activeDate,this._dateAdapter.getNumDaysInMonth(this._activeDate)-this._dateAdapter.getDate(this._activeDate));break;case 33:this.activeDate=e.altKey?this._dateAdapter.addCalendarYears(this._activeDate,-1):this._dateAdapter.addCalendarMonths(this._activeDate,-1);break;case 34:this.activeDate=e.altKey?this._dateAdapter.addCalendarYears(this._activeDate,1):this._dateAdapter.addCalendarMonths(this._activeDate,1);break;case 13:case 32:return this._selectionKeyPressed=!0,void(this._canSelect(this._activeDate)&&e.preventDefault());case 27:return void(null!=this._previewEnd&&!Ht(e)&&(this._clearPreview(),this.activeDrag?this.dragEnded.emit({value:null,event:e}):(this.selectedChange.emit(null),this._userSelection.emit({value:null,event:e})),e.preventDefault(),e.stopPropagation()));default:return}this._dateAdapter.compareDate(i,this.activeDate)&&(this.activeDateChange.emit(this.activeDate),this._focusActiveCellAfterViewChecked()),e.preventDefault()}_handleCalendarBodyKeyup(e){(32===e.keyCode||13===e.keyCode)&&(this._selectionKeyPressed&&this._canSelect(this._activeDate)&&this._dateSelected({value:this._dateAdapter.getDate(this._activeDate),event:e}),this._selectionKeyPressed=!1)}_init(){this._setRanges(this.selected),this._todayDate=this._getCellCompareValue(this._dateAdapter.today()),this._monthLabel=this._dateFormats.display.monthLabel?this._dateAdapter.format(this.activeDate,this._dateFormats.display.monthLabel):this._dateAdapter.getMonthNames("short")[this._dateAdapter.getMonth(this.activeDate)].toLocaleUpperCase();let e=this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate),this._dateAdapter.getMonth(this.activeDate),1);this._firstWeekOffset=(7+this._dateAdapter.getDayOfWeek(e)-this._dateAdapter.getFirstDayOfWeek())%7,this._initWeekdays(),this._createWeekCells(),this._changeDetectorRef.markForCheck()}_focusActiveCell(e){this._matCalendarBody._focusActiveCell(e)}_focusActiveCellAfterViewChecked(){this._matCalendarBody._scheduleFocusActiveCellAfterViewChecked()}_previewChanged({event:e,value:i}){if(this._rangeStrategy){const r=i?i.rawValue:null,o=this._rangeStrategy.createPreview(r,this.selected,e);if(this._previewStart=this._getCellCompareValue(o.start),this._previewEnd=this._getCellCompareValue(o.end),this.activeDrag&&r){const s=this._rangeStrategy.createDrag?.(this.activeDrag.value,this.selected,r,e);s&&(this._previewStart=this._getCellCompareValue(s.start),this._previewEnd=this._getCellCompareValue(s.end))}this._changeDetectorRef.detectChanges()}}_dragEnded(e){if(this.activeDrag)if(e.value){const i=this._rangeStrategy?.createDrag?.(this.activeDrag.value,this.selected,e.value,e.event);this.dragEnded.emit({value:i??null,event:e.event})}else this.dragEnded.emit({value:null,event:e.event})}_getDateFromDayOfMonth(e){return this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate),this._dateAdapter.getMonth(this.activeDate),e)}_initWeekdays(){const e=this._dateAdapter.getFirstDayOfWeek(),i=this._dateAdapter.getDayOfWeekNames("narrow");let o=this._dateAdapter.getDayOfWeekNames("long").map((s,a)=>({long:s,narrow:i[a]}));this._weekdays=o.slice(e).concat(o.slice(0,e))}_createWeekCells(){const e=this._dateAdapter.getNumDaysInMonth(this.activeDate),i=this._dateAdapter.getDateNames();this._weeks=[[]];for(let r=0,o=this._firstWeekOffset;r<e;r++,o++){7==o&&(this._weeks.push([]),o=0);const s=this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate),this._dateAdapter.getMonth(this.activeDate),r+1),a=this._shouldEnableDate(s),l=this._dateAdapter.format(s,this._dateFormats.display.dateA11yLabel),c=this.dateClass?this.dateClass(s,"month"):void 0;this._weeks[this._weeks.length-1].push(new vg(r+1,i[r],l,a,c,this._getCellCompareValue(s),s))}}_shouldEnableDate(e){return!!e&&(!this.minDate||this._dateAdapter.compareDate(e,this.minDate)>=0)&&(!this.maxDate||this._dateAdapter.compareDate(e,this.maxDate)<=0)&&(!this.dateFilter||this.dateFilter(e))}_getDateInCurrentMonth(e){return e&&this._hasSameMonthAndYear(e,this.activeDate)?this._dateAdapter.getDate(e):null}_hasSameMonthAndYear(e,i){return!(!e||!i||this._dateAdapter.getMonth(e)!=this._dateAdapter.getMonth(i)||this._dateAdapter.getYear(e)!=this._dateAdapter.getYear(i))}_getCellCompareValue(e){if(e){const i=this._dateAdapter.getYear(e),r=this._dateAdapter.getMonth(e),o=this._dateAdapter.getDate(e);return new Date(i,r,o).getTime()}return null}_isRtl(){return this._dir&&"rtl"===this._dir.value}_setRanges(e){e instanceof Wt?(this._rangeStart=this._getCellCompareValue(e.start),this._rangeEnd=this._getCellCompareValue(e.end),this._isRange=!0):(this._rangeStart=this._rangeEnd=this._getCellCompareValue(e),this._isRange=!1),this._comparisonRangeStart=this._getCellCompareValue(this.comparisonStart),this._comparisonRangeEnd=this._getCellCompareValue(this.comparisonEnd)}_canSelect(e){return!this.dateFilter||this.dateFilter(e)}_clearPreview(){this._previewStart=this._previewEnd=null}}return n.\u0275fac=function(e){return new(e||n)(p(Xe),p(Jr,8),p(Ct,8),p(Lt,8),p(gu,8))},n.\u0275cmp=ee({type:n,selectors:[["mat-month-view"]],viewQuery:function(e,i){if(1&e&&je(bs,5),2&e){let r;oe(r=se())&&(i._matCalendarBody=r.first)}},inputs:{activeDate:"activeDate",selected:"selected",minDate:"minDate",maxDate:"maxDate",dateFilter:"dateFilter",dateClass:"dateClass",comparisonStart:"comparisonStart",comparisonEnd:"comparisonEnd",startDateAccessibleName:"startDateAccessibleName",endDateAccessibleName:"endDateAccessibleName",activeDrag:"activeDrag"},outputs:{selectedChange:"selectedChange",_userSelection:"_userSelection",dragStarted:"dragStarted",dragEnded:"dragEnded",activeDateChange:"activeDateChange"},exportAs:["matMonthView"],features:[ze],decls:7,vars:15,consts:[["role","grid",1,"mat-calendar-table"],[1,"mat-calendar-table-header"],["scope","col",4,"ngFor","ngForOf"],["aria-hidden","true","colspan","7",1,"mat-calendar-table-header-divider"],["mat-calendar-body","",3,"label","rows","todayValue","startValue","endValue","comparisonStart","comparisonEnd","previewStart","previewEnd","isRange","labelMinRequiredCells","activeCell","startDateAccessibleName","endDateAccessibleName","selectedValueChange","activeDateChange","previewChange","dragStarted","dragEnded","keyup","keydown"],["scope","col"],[1,"cdk-visually-hidden"],["aria-hidden","true"]],template:function(e,i){1&e&&(b(0,"table",0)(1,"thead",1)(2,"tr"),J(3,XJ,5,2,"th",2),y(),b(4,"tr"),q(5,"th",3),y()(),b(6,"tbody",4),H("selectedValueChange",function(o){return i._dateSelected(o)})("activeDateChange",function(o){return i._updateActiveDate(o)})("previewChange",function(o){return i._previewChanged(o)})("dragStarted",function(o){return i.dragStarted.emit(o)})("dragEnded",function(o){return i._dragEnded(o)})("keyup",function(o){return i._handleCalendarBodyKeyup(o)})("keydown",function(o){return i._handleCalendarBodyKeydown(o)}),y()()),2&e&&(w(3),I("ngForOf",i._weekdays),w(3),I("label",i._monthLabel)("rows",i._weeks)("todayValue",i._todayDate)("startValue",i._rangeStart)("endValue",i._rangeEnd)("comparisonStart",i._comparisonRangeStart)("comparisonEnd",i._comparisonRangeEnd)("previewStart",i._previewStart)("previewEnd",i._previewEnd)("isRange",i._isRange)("labelMinRequiredCells",3)("activeCell",i._dateAdapter.getDate(i.activeDate)-1)("startDateAccessibleName",i.startDateAccessibleName)("endDateAccessibleName",i.endDateAccessibleName))},dependencies:[Ur,bs],encapsulation:2,changeDetection:0}),n})(),OE=(()=>{class n{get activeDate(){return this._activeDate}set activeDate(e){let i=this._activeDate;const r=this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(e))||this._dateAdapter.today();this._activeDate=this._dateAdapter.clampDate(r,this.minDate,this.maxDate),FE(this._dateAdapter,i,this._activeDate,this.minDate,this.maxDate)||this._init()}get selected(){return this._selected}set selected(e){this._selected=e instanceof Wt?e:this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(e)),this._setSelectedYear(e)}get minDate(){return this._minDate}set minDate(e){this._minDate=this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(e))}get maxDate(){return this._maxDate}set maxDate(e){this._maxDate=this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(e))}constructor(e,i,r){this._changeDetectorRef=e,this._dateAdapter=i,this._dir=r,this._rerenderSubscription=ke.EMPTY,this.selectedChange=new O,this.yearSelected=new O,this.activeDateChange=new O,this._activeDate=this._dateAdapter.today()}ngAfterContentInit(){this._rerenderSubscription=this._dateAdapter.localeChanges.pipe(xn(null)).subscribe(()=>this._init())}ngOnDestroy(){this._rerenderSubscription.unsubscribe()}_init(){this._todayYear=this._dateAdapter.getYear(this._dateAdapter.today());const i=this._dateAdapter.getYear(this._activeDate)-Al(this._dateAdapter,this.activeDate,this.minDate,this.maxDate);this._years=[];for(let r=0,o=[];r<24;r++)o.push(i+r),4==o.length&&(this._years.push(o.map(s=>this._createCellForYear(s))),o=[]);this._changeDetectorRef.markForCheck()}_yearSelected(e){const i=e.value,r=this._dateAdapter.createDate(i,0,1),o=this._getDateFromYear(i);this.yearSelected.emit(r),this.selectedChange.emit(o)}_updateActiveDate(e){const r=this._activeDate;this.activeDate=this._getDateFromYear(e.value),this._dateAdapter.compareDate(r,this.activeDate)&&this.activeDateChange.emit(this.activeDate)}_handleCalendarBodyKeydown(e){const i=this._activeDate,r=this._isRtl();switch(e.keyCode){case 37:this.activeDate=this._dateAdapter.addCalendarYears(this._activeDate,r?1:-1);break;case 39:this.activeDate=this._dateAdapter.addCalendarYears(this._activeDate,r?-1:1);break;case 38:this.activeDate=this._dateAdapter.addCalendarYears(this._activeDate,-4);break;case 40:this.activeDate=this._dateAdapter.addCalendarYears(this._activeDate,4);break;case 36:this.activeDate=this._dateAdapter.addCalendarYears(this._activeDate,-Al(this._dateAdapter,this.activeDate,this.minDate,this.maxDate));break;case 35:this.activeDate=this._dateAdapter.addCalendarYears(this._activeDate,24-Al(this._dateAdapter,this.activeDate,this.minDate,this.maxDate)-1);break;case 33:this.activeDate=this._dateAdapter.addCalendarYears(this._activeDate,e.altKey?-240:-24);break;case 34:this.activeDate=this._dateAdapter.addCalendarYears(this._activeDate,e.altKey?240:24);break;case 13:case 32:this._selectionKeyPressed=!0;break;default:return}this._dateAdapter.compareDate(i,this.activeDate)&&this.activeDateChange.emit(this.activeDate),this._focusActiveCellAfterViewChecked(),e.preventDefault()}_handleCalendarBodyKeyup(e){(32===e.keyCode||13===e.keyCode)&&(this._selectionKeyPressed&&this._yearSelected({value:this._dateAdapter.getYear(this._activeDate),event:e}),this._selectionKeyPressed=!1)}_getActiveCell(){return Al(this._dateAdapter,this.activeDate,this.minDate,this.maxDate)}_focusActiveCell(){this._matCalendarBody._focusActiveCell()}_focusActiveCellAfterViewChecked(){this._matCalendarBody._scheduleFocusActiveCellAfterViewChecked()}_getDateFromYear(e){const i=this._dateAdapter.getMonth(this.activeDate),r=this._dateAdapter.getNumDaysInMonth(this._dateAdapter.createDate(e,i,1));return this._dateAdapter.createDate(e,i,Math.min(this._dateAdapter.getDate(this.activeDate),r))}_createCellForYear(e){const i=this._dateAdapter.createDate(e,0,1),r=this._dateAdapter.getYearName(i),o=this.dateClass?this.dateClass(i,"multi-year"):void 0;return new vg(e,r,r,this._shouldEnableYear(e),o)}_shouldEnableYear(e){if(null==e||this.maxDate&&e>this._dateAdapter.getYear(this.maxDate)||this.minDate&&e<this._dateAdapter.getYear(this.minDate))return!1;if(!this.dateFilter)return!0;for(let r=this._dateAdapter.createDate(e,0,1);this._dateAdapter.getYear(r)==e;r=this._dateAdapter.addCalendarDays(r,1))if(this.dateFilter(r))return!0;return!1}_isRtl(){return this._dir&&"rtl"===this._dir.value}_setSelectedYear(e){if(this._selectedYear=null,e instanceof Wt){const i=e.start||e.end;i&&(this._selectedYear=this._dateAdapter.getYear(i))}else e&&(this._selectedYear=this._dateAdapter.getYear(e))}}return n.\u0275fac=function(e){return new(e||n)(p(Xe),p(Ct,8),p(Lt,8))},n.\u0275cmp=ee({type:n,selectors:[["mat-multi-year-view"]],viewQuery:function(e,i){if(1&e&&je(bs,5),2&e){let r;oe(r=se())&&(i._matCalendarBody=r.first)}},inputs:{activeDate:"activeDate",selected:"selected",minDate:"minDate",maxDate:"maxDate",dateFilter:"dateFilter",dateClass:"dateClass"},outputs:{selectedChange:"selectedChange",yearSelected:"yearSelected",activeDateChange:"activeDateChange"},exportAs:["matMultiYearView"],decls:5,vars:7,consts:[["role","grid",1,"mat-calendar-table"],["aria-hidden","true",1,"mat-calendar-table-header"],["colspan","4",1,"mat-calendar-table-header-divider"],["mat-calendar-body","",3,"rows","todayValue","startValue","endValue","numCols","cellAspectRatio","activeCell","selectedValueChange","activeDateChange","keyup","keydown"]],template:function(e,i){1&e&&(b(0,"table",0)(1,"thead",1)(2,"tr"),q(3,"th",2),y()(),b(4,"tbody",3),H("selectedValueChange",function(o){return i._yearSelected(o)})("activeDateChange",function(o){return i._updateActiveDate(o)})("keyup",function(o){return i._handleCalendarBodyKeyup(o)})("keydown",function(o){return i._handleCalendarBodyKeydown(o)}),y()()),2&e&&(w(4),I("rows",i._years)("todayValue",i._todayYear)("startValue",i._selectedYear)("endValue",i._selectedYear)("numCols",4)("cellAspectRatio",4/7)("activeCell",i._getActiveCell()))},dependencies:[bs],encapsulation:2,changeDetection:0}),n})();function FE(n,t,e,i,r){const o=n.getYear(t),s=n.getYear(e),a=VE(n,i,r);return Math.floor((o-a)/24)===Math.floor((s-a)/24)}function Al(n,t,e,i){return function mW(n,t){return(n%t+t)%t}(n.getYear(t)-VE(n,e,i),24)}function VE(n,t,e){let i=0;return e?i=n.getYear(e)-24+1:t&&(i=n.getYear(t)),i}let UE=(()=>{class n{get activeDate(){return this._activeDate}set activeDate(e){let i=this._activeDate;const r=this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(e))||this._dateAdapter.today();this._activeDate=this._dateAdapter.clampDate(r,this.minDate,this.maxDate),this._dateAdapter.getYear(i)!==this._dateAdapter.getYear(this._activeDate)&&this._init()}get selected(){return this._selected}set selected(e){this._selected=e instanceof Wt?e:this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(e)),this._setSelectedMonth(e)}get minDate(){return this._minDate}set minDate(e){this._minDate=this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(e))}get maxDate(){return this._maxDate}set maxDate(e){this._maxDate=this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(e))}constructor(e,i,r,o){this._changeDetectorRef=e,this._dateFormats=i,this._dateAdapter=r,this._dir=o,this._rerenderSubscription=ke.EMPTY,this.selectedChange=new O,this.monthSelected=new O,this.activeDateChange=new O,this._activeDate=this._dateAdapter.today()}ngAfterContentInit(){this._rerenderSubscription=this._dateAdapter.localeChanges.pipe(xn(null)).subscribe(()=>this._init())}ngOnDestroy(){this._rerenderSubscription.unsubscribe()}_monthSelected(e){const i=e.value,r=this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate),i,1);this.monthSelected.emit(r);const o=this._getDateFromMonth(i);this.selectedChange.emit(o)}_updateActiveDate(e){const r=this._activeDate;this.activeDate=this._getDateFromMonth(e.value),this._dateAdapter.compareDate(r,this.activeDate)&&this.activeDateChange.emit(this.activeDate)}_handleCalendarBodyKeydown(e){const i=this._activeDate,r=this._isRtl();switch(e.keyCode){case 37:this.activeDate=this._dateAdapter.addCalendarMonths(this._activeDate,r?1:-1);break;case 39:this.activeDate=this._dateAdapter.addCalendarMonths(this._activeDate,r?-1:1);break;case 38:this.activeDate=this._dateAdapter.addCalendarMonths(this._activeDate,-4);break;case 40:this.activeDate=this._dateAdapter.addCalendarMonths(this._activeDate,4);break;case 36:this.activeDate=this._dateAdapter.addCalendarMonths(this._activeDate,-this._dateAdapter.getMonth(this._activeDate));break;case 35:this.activeDate=this._dateAdapter.addCalendarMonths(this._activeDate,11-this._dateAdapter.getMonth(this._activeDate));break;case 33:this.activeDate=this._dateAdapter.addCalendarYears(this._activeDate,e.altKey?-10:-1);break;case 34:this.activeDate=this._dateAdapter.addCalendarYears(this._activeDate,e.altKey?10:1);break;case 13:case 32:this._selectionKeyPressed=!0;break;default:return}this._dateAdapter.compareDate(i,this.activeDate)&&(this.activeDateChange.emit(this.activeDate),this._focusActiveCellAfterViewChecked()),e.preventDefault()}_handleCalendarBodyKeyup(e){(32===e.keyCode||13===e.keyCode)&&(this._selectionKeyPressed&&this._monthSelected({value:this._dateAdapter.getMonth(this._activeDate),event:e}),this._selectionKeyPressed=!1)}_init(){this._setSelectedMonth(this.selected),this._todayMonth=this._getMonthInCurrentYear(this._dateAdapter.today()),this._yearLabel=this._dateAdapter.getYearName(this.activeDate);let e=this._dateAdapter.getMonthNames("short");this._months=[[0,1,2,3],[4,5,6,7],[8,9,10,11]].map(i=>i.map(r=>this._createCellForMonth(r,e[r]))),this._changeDetectorRef.markForCheck()}_focusActiveCell(){this._matCalendarBody._focusActiveCell()}_focusActiveCellAfterViewChecked(){this._matCalendarBody._scheduleFocusActiveCellAfterViewChecked()}_getMonthInCurrentYear(e){return e&&this._dateAdapter.getYear(e)==this._dateAdapter.getYear(this.activeDate)?this._dateAdapter.getMonth(e):null}_getDateFromMonth(e){const i=this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate),e,1),r=this._dateAdapter.getNumDaysInMonth(i);return this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate),e,Math.min(this._dateAdapter.getDate(this.activeDate),r))}_createCellForMonth(e,i){const r=this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate),e,1),o=this._dateAdapter.format(r,this._dateFormats.display.monthYearA11yLabel),s=this.dateClass?this.dateClass(r,"year"):void 0;return new vg(e,i.toLocaleUpperCase(),o,this._shouldEnableMonth(e),s)}_shouldEnableMonth(e){const i=this._dateAdapter.getYear(this.activeDate);if(null==e||this._isYearAndMonthAfterMaxDate(i,e)||this._isYearAndMonthBeforeMinDate(i,e))return!1;if(!this.dateFilter)return!0;for(let o=this._dateAdapter.createDate(i,e,1);this._dateAdapter.getMonth(o)==e;o=this._dateAdapter.addCalendarDays(o,1))if(this.dateFilter(o))return!0;return!1}_isYearAndMonthAfterMaxDate(e,i){if(this.maxDate){const r=this._dateAdapter.getYear(this.maxDate),o=this._dateAdapter.getMonth(this.maxDate);return e>r||e===r&&i>o}return!1}_isYearAndMonthBeforeMinDate(e,i){if(this.minDate){const r=this._dateAdapter.getYear(this.minDate),o=this._dateAdapter.getMonth(this.minDate);return e<r||e===r&&i<o}return!1}_isRtl(){return this._dir&&"rtl"===this._dir.value}_setSelectedMonth(e){this._selectedMonth=e instanceof Wt?this._getMonthInCurrentYear(e.start)||this._getMonthInCurrentYear(e.end):this._getMonthInCurrentYear(e)}}return n.\u0275fac=function(e){return new(e||n)(p(Xe),p(Jr,8),p(Ct,8),p(Lt,8))},n.\u0275cmp=ee({type:n,selectors:[["mat-year-view"]],viewQuery:function(e,i){if(1&e&&je(bs,5),2&e){let r;oe(r=se())&&(i._matCalendarBody=r.first)}},inputs:{activeDate:"activeDate",selected:"selected",minDate:"minDate",maxDate:"maxDate",dateFilter:"dateFilter",dateClass:"dateClass"},outputs:{selectedChange:"selectedChange",monthSelected:"monthSelected",activeDateChange:"activeDateChange"},exportAs:["matYearView"],decls:5,vars:9,consts:[["role","grid",1,"mat-calendar-table"],["aria-hidden","true",1,"mat-calendar-table-header"],["colspan","4",1,"mat-calendar-table-header-divider"],["mat-calendar-body","",3,"label","rows","todayValue","startValue","endValue","labelMinRequiredCells","numCols","cellAspectRatio","activeCell","selectedValueChange","activeDateChange","keyup","keydown"]],template:function(e,i){1&e&&(b(0,"table",0)(1,"thead",1)(2,"tr"),q(3,"th",2),y()(),b(4,"tbody",3),H("selectedValueChange",function(o){return i._monthSelected(o)})("activeDateChange",function(o){return i._updateActiveDate(o)})("keyup",function(o){return i._handleCalendarBodyKeyup(o)})("keydown",function(o){return i._handleCalendarBodyKeydown(o)}),y()()),2&e&&(w(4),I("label",i._yearLabel)("rows",i._months)("todayValue",i._todayMonth)("startValue",i._selectedMonth)("endValue",i._selectedMonth)("labelMinRequiredCells",2)("numCols",4)("cellAspectRatio",4/7)("activeCell",i._dateAdapter.getMonth(i.activeDate)))},dependencies:[bs],encapsulation:2,changeDetection:0}),n})(),gW=1,bW=(()=>{class n{constructor(e,i,r,o,s){this._intl=e,this.calendar=i,this._dateAdapter=r,this._dateFormats=o,this._id="mat-calendar-header-"+gW++,this._periodButtonLabelId=`${this._id}-period-label`,this.calendar.stateChanges.subscribe(()=>s.markForCheck())}get periodButtonText(){return"month"==this.calendar.currentView?this._dateAdapter.format(this.calendar.activeDate,this._dateFormats.display.monthYearLabel).toLocaleUpperCase():"year"==this.calendar.currentView?this._dateAdapter.getYearName(this.calendar.activeDate):this._intl.formatYearRange(...this._formatMinAndMaxYearLabels())}get periodButtonDescription(){return"month"==this.calendar.currentView?this._dateAdapter.format(this.calendar.activeDate,this._dateFormats.display.monthYearLabel).toLocaleUpperCase():"year"==this.calendar.currentView?this._dateAdapter.getYearName(this.calendar.activeDate):this._intl.formatYearRangeLabel(...this._formatMinAndMaxYearLabels())}get periodButtonLabel(){return"month"==this.calendar.currentView?this._intl.switchToMultiYearViewLabel:this._intl.switchToMonthViewLabel}get prevButtonLabel(){return{month:this._intl.prevMonthLabel,year:this._intl.prevYearLabel,"multi-year":this._intl.prevMultiYearLabel}[this.calendar.currentView]}get nextButtonLabel(){return{month:this._intl.nextMonthLabel,year:this._intl.nextYearLabel,"multi-year":this._intl.nextMultiYearLabel}[this.calendar.currentView]}currentPeriodClicked(){this.calendar.currentView="month"==this.calendar.currentView?"multi-year":"month"}previousClicked(){this.calendar.activeDate="month"==this.calendar.currentView?this._dateAdapter.addCalendarMonths(this.calendar.activeDate,-1):this._dateAdapter.addCalendarYears(this.calendar.activeDate,"year"==this.calendar.currentView?-1:-24)}nextClicked(){this.calendar.activeDate="month"==this.calendar.currentView?this._dateAdapter.addCalendarMonths(this.calendar.activeDate,1):this._dateAdapter.addCalendarYears(this.calendar.activeDate,"year"==this.calendar.currentView?1:24)}previousEnabled(){return!this.calendar.minDate||!this.calendar.minDate||!this._isSameView(this.calendar.activeDate,this.calendar.minDate)}nextEnabled(){return!this.calendar.maxDate||!this._isSameView(this.calendar.activeDate,this.calendar.maxDate)}_isSameView(e,i){return"month"==this.calendar.currentView?this._dateAdapter.getYear(e)==this._dateAdapter.getYear(i)&&this._dateAdapter.getMonth(e)==this._dateAdapter.getMonth(i):"year"==this.calendar.currentView?this._dateAdapter.getYear(e)==this._dateAdapter.getYear(i):FE(this._dateAdapter,e,i,this.calendar.minDate,this.calendar.maxDate)}_formatMinAndMaxYearLabels(){const i=this._dateAdapter.getYear(this.calendar.activeDate)-Al(this._dateAdapter,this.calendar.activeDate,this.calendar.minDate,this.calendar.maxDate),r=i+24-1;return[this._dateAdapter.getYearName(this._dateAdapter.createDate(i,0,1)),this._dateAdapter.getYearName(this._dateAdapter.createDate(r,0,1))]}}return n.\u0275fac=function(e){return new(e||n)(p(vl),p(De(()=>Eg)),p(Ct,8),p(Jr,8),p(Xe))},n.\u0275cmp=ee({type:n,selectors:[["mat-calendar-header"]],exportAs:["matCalendarHeader"],ngContentSelectors:ZJ,decls:13,vars:11,consts:[[1,"mat-calendar-header"],[1,"mat-calendar-controls"],["mat-button","","type","button","aria-live","polite",1,"mat-calendar-period-button",3,"click"],["aria-hidden","true"],["viewBox","0 0 10 5","focusable","false","aria-hidden","true",1,"mat-calendar-arrow"],["points","0,0 5,5 10,0"],[1,"mat-calendar-spacer"],["mat-icon-button","","type","button",1,"mat-calendar-previous-button",3,"disabled","click"],["mat-icon-button","","type","button",1,"mat-calendar-next-button",3,"disabled","click"],[1,"mat-calendar-hidden-label",3,"id"]],template:function(e,i){1&e&&(Tt(),b(0,"div",0)(1,"div",1)(2,"button",2),H("click",function(){return i.currentPeriodClicked()}),b(3,"span",3),E(4),y(),Ns(),b(5,"svg",4),q(6,"polygon",5),y()(),ph(),q(7,"div",6),Ie(8),b(9,"button",7),H("click",function(){return i.previousClicked()}),y(),b(10,"button",8),H("click",function(){return i.nextClicked()}),y()()(),b(11,"label",9),E(12),y()),2&e&&(w(2),pe("aria-label",i.periodButtonLabel)("aria-describedby",i._periodButtonLabelId),w(2),gt(i.periodButtonText),w(1),me("mat-calendar-invert","month"!==i.calendar.currentView),w(4),I("disabled",!i.previousEnabled()),pe("aria-label",i.prevButtonLabel),w(1),I("disabled",!i.nextEnabled()),pe("aria-label",i.nextButtonLabel),w(1),I("id",i._periodButtonLabelId),w(1),gt(i.periodButtonDescription))},dependencies:[Fi,Um],encapsulation:2,changeDetection:0}),n})(),Eg=(()=>{class n{get startAt(){return this._startAt}set startAt(e){this._startAt=this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(e))}get selected(){return this._selected}set selected(e){this._selected=e instanceof Wt?e:this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(e))}get minDate(){return this._minDate}set minDate(e){this._minDate=this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(e))}get maxDate(){return this._maxDate}set maxDate(e){this._maxDate=this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(e))}get activeDate(){return this._clampedActiveDate}set activeDate(e){this._clampedActiveDate=this._dateAdapter.clampDate(e,this.minDate,this.maxDate),this.stateChanges.next(),this._changeDetectorRef.markForCheck()}get currentView(){return this._currentView}set currentView(e){const i=this._currentView!==e?e:null;this._currentView=e,this._moveFocusOnNextTick=!0,this._changeDetectorRef.markForCheck(),i&&this.viewChanged.emit(i)}constructor(e,i,r,o){this._dateAdapter=i,this._dateFormats=r,this._changeDetectorRef=o,this._moveFocusOnNextTick=!1,this.startView="month",this.selectedChange=new O,this.yearSelected=new O,this.monthSelected=new O,this.viewChanged=new O(!0),this._userSelection=new O,this._userDragDrop=new O,this._activeDrag=null,this.stateChanges=new P,this._intlChanges=e.changes.subscribe(()=>{o.markForCheck(),this.stateChanges.next()})}ngAfterContentInit(){this._calendarHeaderPortal=new gs(this.headerComponent||bW),this.activeDate=this.startAt||this._dateAdapter.today(),this._currentView=this.startView}ngAfterViewChecked(){this._moveFocusOnNextTick&&(this._moveFocusOnNextTick=!1,this.focusActiveCell())}ngOnDestroy(){this._intlChanges.unsubscribe(),this.stateChanges.complete()}ngOnChanges(e){const i=e.minDate&&!this._dateAdapter.sameDate(e.minDate.previousValue,e.minDate.currentValue)?e.minDate:void 0,r=e.maxDate&&!this._dateAdapter.sameDate(e.maxDate.previousValue,e.maxDate.currentValue)?e.maxDate:void 0,o=i||r||e.dateFilter;if(o&&!o.firstChange){const s=this._getCurrentViewComponent();s&&(this._changeDetectorRef.detectChanges(),s._init())}this.stateChanges.next()}focusActiveCell(){this._getCurrentViewComponent()._focusActiveCell(!1)}updateTodaysDate(){this._getCurrentViewComponent()._init()}_dateSelected(e){const i=e.value;(this.selected instanceof Wt||i&&!this._dateAdapter.sameDate(i,this.selected))&&this.selectedChange.emit(i),this._userSelection.emit(e)}_yearSelectedInMultiYearView(e){this.yearSelected.emit(e)}_monthSelectedInYearView(e){this.monthSelected.emit(e)}_goToDateInView(e,i){this.activeDate=e,this.currentView=i}_dragStarted(e){this._activeDrag=e}_dragEnded(e){this._activeDrag&&(e.value&&this._userDragDrop.emit(e),this._activeDrag=null)}_getCurrentViewComponent(){return this.monthView||this.yearView||this.multiYearView}}return n.\u0275fac=function(e){return new(e||n)(p(vl),p(Ct,8),p(Jr,8),p(Xe))},n.\u0275cmp=ee({type:n,selectors:[["mat-calendar"]],viewQuery:function(e,i){if(1&e&&(je(ME,5),je(UE,5),je(OE,5)),2&e){let r;oe(r=se())&&(i.monthView=r.first),oe(r=se())&&(i.yearView=r.first),oe(r=se())&&(i.multiYearView=r.first)}},hostAttrs:[1,"mat-calendar"],inputs:{headerComponent:"headerComponent",startAt:"startAt",startView:"startView",selected:"selected",minDate:"minDate",maxDate:"maxDate",dateFilter:"dateFilter",dateClass:"dateClass",comparisonStart:"comparisonStart",comparisonEnd:"comparisonEnd",startDateAccessibleName:"startDateAccessibleName",endDateAccessibleName:"endDateAccessibleName"},outputs:{selectedChange:"selectedChange",yearSelected:"yearSelected",monthSelected:"monthSelected",viewChanged:"viewChanged",_userSelection:"_userSelection",_userDragDrop:"_userDragDrop"},exportAs:["matCalendar"],features:[ve([TE]),ze],decls:5,vars:5,consts:[[3,"cdkPortalOutlet"],["cdkMonitorSubtreeFocus","","tabindex","-1",1,"mat-calendar-content",3,"ngSwitch"],[3,"activeDate","selected","dateFilter","maxDate","minDate","dateClass","comparisonStart","comparisonEnd","startDateAccessibleName","endDateAccessibleName","activeDrag","activeDateChange","_userSelection","dragStarted","dragEnded",4,"ngSwitchCase"],[3,"activeDate","selected","dateFilter","maxDate","minDate","dateClass","activeDateChange","monthSelected","selectedChange",4,"ngSwitchCase"],[3,"activeDate","selected","dateFilter","maxDate","minDate","dateClass","activeDateChange","yearSelected","selectedChange",4,"ngSwitchCase"],[3,"activeDate","selected","dateFilter","maxDate","minDate","dateClass","comparisonStart","comparisonEnd","startDateAccessibleName","endDateAccessibleName","activeDrag","activeDateChange","_userSelection","dragStarted","dragEnded"],[3,"activeDate","selected","dateFilter","maxDate","minDate","dateClass","activeDateChange","monthSelected","selectedChange"],[3,"activeDate","selected","dateFilter","maxDate","minDate","dateClass","activeDateChange","yearSelected","selectedChange"]],template:function(e,i){1&e&&(J(0,$J,0,0,"ng-template",0),b(1,"div",1),J(2,eW,1,11,"mat-month-view",2),J(3,tW,1,6,"mat-year-view",3),J(4,nW,1,6,"mat-multi-year-view",4),y()),2&e&&(I("cdkPortalOutlet",i._calendarHeaderPortal),w(1),I("ngSwitch",i.currentView),w(1),I("ngSwitchCase","month"),w(1),I("ngSwitchCase","year"),w(1),I("ngSwitchCase","multi-year"))},dependencies:[Wo,rd,Nq,hl,ME,UE,OE],styles:['.mat-calendar{display:block}.mat-calendar-header{padding:8px 8px 0 8px}.mat-calendar-content{padding:0 8px 8px 8px;outline:none}.mat-calendar-controls{display:flex;align-items:center;margin:5% calc(4.7142857143% - 16px)}.mat-calendar-spacer{flex:1 1 auto}.mat-calendar-period-button{min-width:0;margin:0 8px}.mat-calendar-arrow{display:inline-block;width:10px;height:5px;margin:0 0 0 5px;vertical-align:middle}.mat-calendar-arrow.mat-calendar-invert{transform:rotate(180deg)}[dir=rtl] .mat-calendar-arrow{margin:0 5px 0 0}.cdk-high-contrast-active .mat-calendar-arrow{fill:CanvasText}.mat-calendar-previous-button,.mat-calendar-next-button{position:relative}.mat-calendar-previous-button::after,.mat-calendar-next-button::after{top:0;left:0;right:0;bottom:0;position:absolute;content:"";margin:15.5px;border:0 solid currentColor;border-top-width:2px}[dir=rtl] .mat-calendar-previous-button,[dir=rtl] .mat-calendar-next-button{transform:rotate(180deg)}.mat-calendar-previous-button::after{border-left-width:2px;transform:translateX(2px) rotate(-45deg)}.mat-calendar-next-button::after{border-right-width:2px;transform:translateX(-2px) rotate(45deg)}.mat-calendar-table{border-spacing:0;border-collapse:collapse;width:100%}.mat-calendar-table-header th{text-align:center;padding:0 0 8px 0}.mat-calendar-table-header-divider{position:relative;height:1px}.mat-calendar-table-header-divider::after{content:"";position:absolute;top:0;left:-8px;right:-8px;height:1px}.mat-calendar-body-cell-content::before{margin:calc(calc(var(--mat-focus-indicator-border-width, 3px) + 3px) * -1)}.mat-calendar-body-cell:focus .mat-focus-indicator::before{content:""}.mat-calendar-hidden-label{display:none}'],encapsulation:2,changeDetection:0}),n})();const NE={transformPanel:ir("transformPanel",[Zt("void => enter-dropdown",cn("120ms cubic-bezier(0, 0, 0.2, 1)",DD([$e({opacity:0,transform:"scale(1, 0.8)"}),$e({opacity:1,transform:"scale(1, 1)"})]))),Zt("void => enter-dialog",cn("150ms cubic-bezier(0, 0, 0.2, 1)",DD([$e({opacity:0,transform:"scale(0.7)"}),$e({transform:"none",opacity:1})]))),Zt("* => void",cn("100ms linear",$e({opacity:0})))]),fadeInCalendar:ir("fadeInCalendar",[si("void",$e({opacity:0})),si("enter",$e({opacity:1})),Zt("void => *",cn("120ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)"))])};let yW=0;const PE=new D("mat-datepicker-scroll-strategy"),AW={provide:PE,deps:[En],useFactory:function vW(n){return()=>n.scrollStrategies.reposition()}},SW=Qa(class{constructor(n){this._elementRef=n}});let CW=(()=>{class n extends SW{constructor(e,i,r,o,s,a){super(e),this._changeDetectorRef=i,this._globalModel=r,this._dateAdapter=o,this._rangeSelectionStrategy=s,this._subscriptions=new ke,this._animationDone=new P,this._isAnimating=!1,this._actionsPortal=null,this._closeButtonText=a.closeCalendarLabel}ngOnInit(){this._animationState=this.datepicker.touchUi?"enter-dialog":"enter-dropdown"}ngAfterViewInit(){this._subscriptions.add(this.datepicker.stateChanges.subscribe(()=>{this._changeDetectorRef.markForCheck()})),this._calendar.focusActiveCell()}ngOnDestroy(){this._subscriptions.unsubscribe(),this._animationDone.complete()}_handleUserSelection(e){const i=this._model.selection,r=e.value,o=i instanceof Wt;if(o&&this._rangeSelectionStrategy){const s=this._rangeSelectionStrategy.selectionFinished(r,i,e.event);this._model.updateSelection(s,this)}else r&&(o||!this._dateAdapter.sameDate(r,i))&&this._model.add(r);(!this._model||this._model.isComplete())&&!this._actionsPortal&&this.datepicker.close()}_handleUserDragDrop(e){this._model.updateSelection(e.value,this)}_startExitAnimation(){this._animationState="void",this._changeDetectorRef.markForCheck()}_handleAnimationEvent(e){this._isAnimating="start"===e.phaseName,this._isAnimating||this._animationDone.next()}_getSelected(){return this._model.selection}_applyPendingSelection(){this._model!==this._globalModel&&this._globalModel.updateSelection(this._model.selection,this)}_assignActions(e,i){this._model=e?this._globalModel.clone():this._globalModel,this._actionsPortal=e,i&&this._changeDetectorRef.detectChanges()}}return n.\u0275fac=function(e){return new(e||n)(p(z),p(Xe),p(sr),p(Ct),p(gu,8),p(vl))},n.\u0275cmp=ee({type:n,selectors:[["mat-datepicker-content"]],viewQuery:function(e,i){if(1&e&&je(Eg,5),2&e){let r;oe(r=se())&&(i._calendar=r.first)}},hostAttrs:[1,"mat-datepicker-content"],hostVars:3,hostBindings:function(e,i){1&e&&Tc("@transformPanel.start",function(o){return i._handleAnimationEvent(o)})("@transformPanel.done",function(o){return i._handleAnimationEvent(o)}),2&e&&(Fc("@transformPanel",i._animationState),me("mat-datepicker-content-touch",i.datepicker.touchUi))},inputs:{color:"color"},exportAs:["matDatepickerContent"],features:[K],decls:5,vars:26,consts:[["cdkTrapFocus","","role","dialog",1,"mat-datepicker-content-container"],[3,"id","ngClass","startAt","startView","minDate","maxDate","dateFilter","headerComponent","selected","dateClass","comparisonStart","comparisonEnd","startDateAccessibleName","endDateAccessibleName","yearSelected","monthSelected","viewChanged","_userSelection","_userDragDrop"],[3,"cdkPortalOutlet"],["type","button","mat-raised-button","",1,"mat-datepicker-close-button",3,"color","focus","blur","click"]],template:function(e,i){if(1&e&&(b(0,"div",0)(1,"mat-calendar",1),H("yearSelected",function(o){return i.datepicker._selectYear(o)})("monthSelected",function(o){return i.datepicker._selectMonth(o)})("viewChanged",function(o){return i.datepicker._viewChanged(o)})("_userSelection",function(o){return i._handleUserSelection(o)})("_userDragDrop",function(o){return i._handleUserDragDrop(o)}),y(),J(2,iW,0,0,"ng-template",2),b(3,"button",3),H("focus",function(){return i._closeButtonFocused=!0})("blur",function(){return i._closeButtonFocused=!1})("click",function(){return i.datepicker.close()}),E(4),y()()),2&e){let r;me("mat-datepicker-content-container-with-custom-header",i.datepicker.calendarHeaderComponent)("mat-datepicker-content-container-with-actions",i._actionsPortal),pe("aria-modal",!0)("aria-labelledby",null!==(r=i._dialogLabelId)&&void 0!==r?r:void 0),w(1),I("id",i.datepicker.id)("ngClass",i.datepicker.panelClass)("startAt",i.datepicker.startAt)("startView",i.datepicker.startView)("minDate",i.datepicker._getMinDate())("maxDate",i.datepicker._getMaxDate())("dateFilter",i.datepicker._getDateFilter())("headerComponent",i.datepicker.calendarHeaderComponent)("selected",i._getSelected())("dateClass",i.datepicker.dateClass)("comparisonStart",i.comparisonStart)("comparisonEnd",i.comparisonEnd)("@fadeInCalendar","enter")("startDateAccessibleName",i.startDateAccessibleName)("endDateAccessibleName",i.endDateAccessibleName),w(1),I("cdkPortalOutlet",i._actionsPortal),w(1),me("cdk-visually-hidden",!i._closeButtonFocused),I("color",i.color||"primary"),w(1),gt(i._closeButtonText)}},dependencies:[Vr,Fi,wq,hl,Eg],styles:[".mat-datepicker-content{display:block;border-radius:4px}.mat-datepicker-content .mat-calendar{width:296px;height:354px}.mat-datepicker-content .mat-datepicker-content-container-with-custom-header .mat-calendar{height:auto}.mat-datepicker-content .mat-datepicker-close-button{position:absolute;top:100%;left:0;margin-top:8px}.ng-animating .mat-datepicker-content .mat-datepicker-close-button{display:none}.mat-datepicker-content-container{display:flex;flex-direction:column;justify-content:space-between}.mat-datepicker-content-touch{display:block;max-height:80vh;position:relative;overflow:visible}.mat-datepicker-content-touch .mat-datepicker-content-container{min-height:312px;max-height:788px;min-width:250px;max-width:750px}.mat-datepicker-content-touch .mat-calendar{width:100%;height:auto}@media all and (orientation: landscape){.mat-datepicker-content-touch .mat-datepicker-content-container{width:64vh;height:80vh}}@media all and (orientation: portrait){.mat-datepicker-content-touch .mat-datepicker-content-container{width:80vw;height:100vw}.mat-datepicker-content-touch .mat-datepicker-content-container-with-actions{height:115vw}}"],encapsulation:2,data:{animation:[NE.transformPanel,NE.fadeInCalendar]},changeDetection:0}),n})(),_E=(()=>{class n{get startAt(){return this._startAt||(this.datepickerInput?this.datepickerInput.getStartValue():null)}set startAt(e){this._startAt=this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(e))}get color(){return this._color||(this.datepickerInput?this.datepickerInput.getThemePalette():void 0)}set color(e){this._color=e}get touchUi(){return this._touchUi}set touchUi(e){this._touchUi=ue(e)}get disabled(){return void 0===this._disabled&&this.datepickerInput?this.datepickerInput.disabled:!!this._disabled}set disabled(e){const i=ue(e);i!==this._disabled&&(this._disabled=i,this.stateChanges.next(void 0))}get restoreFocus(){return this._restoreFocus}set restoreFocus(e){this._restoreFocus=ue(e)}get panelClass(){return this._panelClass}set panelClass(e){this._panelClass=function iq(n,t=/\s+/){const e=[];if(null!=n){const i=Array.isArray(n)?n:`${n}`.split(t);for(const r of i){const o=`${r}`.trim();o&&e.push(o)}}return e}(e)}get opened(){return this._opened}set opened(e){ue(e)?this.open():this.close()}_getMinDate(){return this.datepickerInput&&this.datepickerInput.min}_getMaxDate(){return this.datepickerInput&&this.datepickerInput.max}_getDateFilter(){return this.datepickerInput&&this.datepickerInput.dateFilter}constructor(e,i,r,o,s,a,l){this._overlay=e,this._ngZone=i,this._viewContainerRef=r,this._dateAdapter=s,this._dir=a,this._model=l,this._inputStateChanges=ke.EMPTY,this._document=ie(Y),this.startView="month",this._touchUi=!1,this.xPosition="start",this.yPosition="below",this._restoreFocus=!0,this.yearSelected=new O,this.monthSelected=new O,this.viewChanged=new O(!0),this.openedStream=new O,this.closedStream=new O,this._opened=!1,this.id="mat-datepicker-"+yW++,this._focusedElementBeforeOpen=null,this._backdropHarnessClass=`${this.id}-backdrop`,this.stateChanges=new P,this._scrollStrategy=o}ngOnChanges(e){const i=e.xPosition||e.yPosition;if(i&&!i.firstChange&&this._overlayRef){const r=this._overlayRef.getConfig().positionStrategy;r instanceof nE&&(this._setConnectedPositions(r),this.opened&&this._overlayRef.updatePosition())}this.stateChanges.next(void 0)}ngOnDestroy(){this._destroyOverlay(),this.close(),this._inputStateChanges.unsubscribe(),this.stateChanges.complete()}select(e){this._model.add(e)}_selectYear(e){this.yearSelected.emit(e)}_selectMonth(e){this.monthSelected.emit(e)}_viewChanged(e){this.viewChanged.emit(e)}registerInput(e){return this._inputStateChanges.unsubscribe(),this.datepickerInput=e,this._inputStateChanges=e.stateChanges.subscribe(()=>this.stateChanges.next(void 0)),this._model}registerActions(e){this._actionsPortal=e,this._componentRef?.instance._assignActions(e,!0)}removeActions(e){e===this._actionsPortal&&(this._actionsPortal=null,this._componentRef?.instance._assignActions(null,!0))}open(){this._opened||this.disabled||this._componentRef?.instance._isAnimating||(this._focusedElementBeforeOpen=ja(),this._openOverlay(),this._opened=!0,this.openedStream.emit())}close(){if(!this._opened||this._componentRef?.instance._isAnimating)return;const e=this._restoreFocus&&this._focusedElementBeforeOpen&&"function"==typeof this._focusedElementBeforeOpen.focus,i=()=>{this._opened&&(this._opened=!1,this.closedStream.emit())};if(this._componentRef){const{instance:r,location:o}=this._componentRef;r._startExitAnimation(),r._animationDone.pipe(Ue(1)).subscribe(()=>{const s=this._document.activeElement;e&&(!s||s===this._document.activeElement||o.nativeElement.contains(s))&&this._focusedElementBeforeOpen.focus(),this._focusedElementBeforeOpen=null,this._destroyOverlay()})}e?setTimeout(i):i()}_applyPendingSelection(){this._componentRef?.instance?._applyPendingSelection()}_forwardContentValues(e){e.datepicker=this,e.color=this.color,e._dialogLabelId=this.datepickerInput.getOverlayLabelId(),e._assignActions(this._actionsPortal,!1)}_openOverlay(){this._destroyOverlay();const e=this.touchUi,i=new gs(CW,this._viewContainerRef),r=this._overlayRef=this._overlay.create(new hu({positionStrategy:e?this._getDialogStrategy():this._getDropdownStrategy(),hasBackdrop:!0,backdropClass:[e?"cdk-overlay-dark-backdrop":"mat-overlay-transparent-backdrop",this._backdropHarnessClass],direction:this._dir,scrollStrategy:e?this._overlay.scrollStrategies.block():this._scrollStrategy(),panelClass:"mat-datepicker-"+(e?"dialog":"popup")}));this._getCloseStream(r).subscribe(o=>{o&&o.preventDefault(),this.close()}),r.keydownEvents().subscribe(o=>{const s=o.keyCode;(38===s||40===s||37===s||39===s||33===s||34===s)&&o.preventDefault()}),this._componentRef=r.attach(i),this._forwardContentValues(this._componentRef.instance),e||this._ngZone.onStable.pipe(Ue(1)).subscribe(()=>r.updatePosition())}_destroyOverlay(){this._overlayRef&&(this._overlayRef.dispose(),this._overlayRef=this._componentRef=null)}_getDialogStrategy(){return this._overlay.position().global().centerHorizontally().centerVertically()}_getDropdownStrategy(){const e=this._overlay.position().flexibleConnectedTo(this.datepickerInput.getConnectedOverlayOrigin()).withTransformOriginOn(".mat-datepicker-content").withFlexibleDimensions(!1).withViewportMargin(8).withLockedPosition();return this._setConnectedPositions(e)}_setConnectedPositions(e){const i="end"===this.xPosition?"end":"start",r="start"===i?"end":"start",o="above"===this.yPosition?"bottom":"top",s="top"===o?"bottom":"top";return e.withPositions([{originX:i,originY:s,overlayX:i,overlayY:o},{originX:i,originY:o,overlayX:i,overlayY:s},{originX:r,originY:s,overlayX:r,overlayY:o},{originX:r,originY:o,overlayX:r,overlayY:s}])}_getCloseStream(e){const i=["ctrlKey","shiftKey","metaKey"];return $t(e.backdropClick(),e.detachments(),e.keydownEvents().pipe(Re(r=>27===r.keyCode&&!Ht(r)||this.datepickerInput&&Ht(r,"altKey")&&38===r.keyCode&&i.every(o=>!Ht(r,o)))))}}return n.\u0275fac=function(e){return new(e||n)(p(En),p(j),p(jt),p(PE),p(Ct,8),p(Lt,8),p(sr))},n.\u0275dir=M({type:n,inputs:{calendarHeaderComponent:"calendarHeaderComponent",startAt:"startAt",startView:"startView",color:"color",touchUi:"touchUi",disabled:"disabled",xPosition:"xPosition",yPosition:"yPosition",restoreFocus:"restoreFocus",dateClass:"dateClass",panelClass:"panelClass",opened:"opened"},outputs:{yearSelected:"yearSelected",monthSelected:"monthSelected",viewChanged:"viewChanged",openedStream:"opened",closedStream:"closed"},features:[ze]}),n})(),kW=(()=>{class n extends _E{}return n.\u0275fac=function(){let t;return function(i){return(t||(t=rt(n)))(i||n)}}(),n.\u0275cmp=ee({type:n,selectors:[["mat-datepicker"]],exportAs:["matDatepicker"],features:[ve([TE,{provide:_E,useExisting:n}]),K],decls:0,vars:0,template:function(e,i){},encapsulation:2,changeDetection:0}),n})();class bu{constructor(t,e){this.target=t,this.targetElement=e,this.value=this.target.value}}let xW=(()=>{class n{get value(){return this._model?this._getValueFromModel(this._model.selection):this._pendingValue}set value(e){this._assignValueProgrammatically(e)}get disabled(){return!!this._disabled||this._parentDisabled()}set disabled(e){const i=ue(e),r=this._elementRef.nativeElement;this._disabled!==i&&(this._disabled=i,this.stateChanges.next(void 0)),i&&this._isInitialized&&r.blur&&r.blur()}_getValidators(){return[this._parseValidator,this._minValidator,this._maxValidator,this._filterValidator]}_registerModel(e){this._model=e,this._valueChangesSubscription.unsubscribe(),this._pendingValue&&this._assignValue(this._pendingValue),this._valueChangesSubscription=this._model.selectionChanged.subscribe(i=>{if(this._shouldHandleChangeEvent(i)){const r=this._getValueFromModel(i.selection);this._lastValueValid=this._isValidValue(r),this._cvaOnChange(r),this._onTouched(),this._formatValue(r),this.dateInput.emit(new bu(this,this._elementRef.nativeElement)),this.dateChange.emit(new bu(this,this._elementRef.nativeElement))}})}constructor(e,i,r){this._elementRef=e,this._dateAdapter=i,this._dateFormats=r,this.dateChange=new O,this.dateInput=new O,this.stateChanges=new P,this._onTouched=()=>{},this._validatorOnChange=()=>{},this._cvaOnChange=()=>{},this._valueChangesSubscription=ke.EMPTY,this._localeSubscription=ke.EMPTY,this._parseValidator=()=>this._lastValueValid?null:{matDatepickerParse:{text:this._elementRef.nativeElement.value}},this._filterValidator=o=>{const s=this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(o.value));return!s||this._matchesFilter(s)?null:{matDatepickerFilter:!0}},this._minValidator=o=>{const s=this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(o.value)),a=this._getMinDate();return!a||!s||this._dateAdapter.compareDate(a,s)<=0?null:{matDatepickerMin:{min:a,actual:s}}},this._maxValidator=o=>{const s=this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(o.value)),a=this._getMaxDate();return!a||!s||this._dateAdapter.compareDate(a,s)>=0?null:{matDatepickerMax:{max:a,actual:s}}},this._lastValueValid=!1,this._localeSubscription=i.localeChanges.subscribe(()=>{this._assignValueProgrammatically(this.value)})}ngAfterViewInit(){this._isInitialized=!0}ngOnChanges(e){(function DW(n,t){const e=Object.keys(n);for(let i of e){const{previousValue:r,currentValue:o}=n[i];if(!t.isDateInstance(r)||!t.isDateInstance(o))return!0;if(!t.sameDate(r,o))return!0}return!1})(e,this._dateAdapter)&&this.stateChanges.next(void 0)}ngOnDestroy(){this._valueChangesSubscription.unsubscribe(),this._localeSubscription.unsubscribe(),this.stateChanges.complete()}registerOnValidatorChange(e){this._validatorOnChange=e}validate(e){return this._validator?this._validator(e):null}writeValue(e){this._assignValueProgrammatically(e)}registerOnChange(e){this._cvaOnChange=e}registerOnTouched(e){this._onTouched=e}setDisabledState(e){this.disabled=e}_onKeydown(e){Ht(e,"altKey")&&40===e.keyCode&&["ctrlKey","shiftKey","metaKey"].every(o=>!Ht(e,o))&&!this._elementRef.nativeElement.readOnly&&(this._openPopup(),e.preventDefault())}_onInput(e){const i=this._lastValueValid;let r=this._dateAdapter.parse(e,this._dateFormats.parse.dateInput);this._lastValueValid=this._isValidValue(r),r=this._dateAdapter.getValidDateOrNull(r);const o=!this._dateAdapter.sameDate(r,this.value);!r||o?this._cvaOnChange(r):(e&&!this.value&&this._cvaOnChange(r),i!==this._lastValueValid&&this._validatorOnChange()),o&&(this._assignValue(r),this.dateInput.emit(new bu(this,this._elementRef.nativeElement)))}_onChange(){this.dateChange.emit(new bu(this,this._elementRef.nativeElement))}_onBlur(){this.value&&this._formatValue(this.value),this._onTouched()}_formatValue(e){this._elementRef.nativeElement.value=null!=e?this._dateAdapter.format(e,this._dateFormats.display.dateInput):""}_assignValue(e){this._model?(this._assignValueToModel(e),this._pendingValue=null):this._pendingValue=e}_isValidValue(e){return!e||this._dateAdapter.isValid(e)}_parentDisabled(){return!1}_assignValueProgrammatically(e){e=this._dateAdapter.deserialize(e),this._lastValueValid=this._isValidValue(e),e=this._dateAdapter.getValidDateOrNull(e),this._assignValue(e),this._formatValue(e)}_matchesFilter(e){const i=this._getDateFilter();return!i||i(e)}}return n.\u0275fac=function(e){return new(e||n)(p(z),p(Ct,8),p(Jr,8))},n.\u0275dir=M({type:n,inputs:{value:"value",disabled:"disabled"},outputs:{dateChange:"dateChange",dateInput:"dateInput"},features:[ze]}),n})();const wW={provide:wn,useExisting:De(()=>Ig),multi:!0},EW={provide:xt,useExisting:De(()=>Ig),multi:!0};let Ig=(()=>{class n extends xW{set matDatepicker(e){e&&(this._datepicker=e,this._closedSubscription=e.closedStream.subscribe(()=>this._onTouched()),this._registerModel(e.registerInput(this)))}get min(){return this._min}set min(e){const i=this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(e));this._dateAdapter.sameDate(i,this._min)||(this._min=i,this._validatorOnChange())}get max(){return this._max}set max(e){const i=this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(e));this._dateAdapter.sameDate(i,this._max)||(this._max=i,this._validatorOnChange())}get dateFilter(){return this._dateFilter}set dateFilter(e){const i=this._matchesFilter(this.value);this._dateFilter=e,this._matchesFilter(this.value)!==i&&this._validatorOnChange()}constructor(e,i,r,o){super(e,i,r),this._formField=o,this._closedSubscription=ke.EMPTY,this._validator=Jm.compose(super._getValidators())}getConnectedOverlayOrigin(){return this._formField?this._formField.getConnectedOverlayOrigin():this._elementRef}getOverlayLabelId(){return this._formField?this._formField.getLabelId():this._elementRef.nativeElement.getAttribute("aria-labelledby")}getThemePalette(){return this._formField?this._formField.color:void 0}getStartValue(){return this.value}ngOnDestroy(){super.ngOnDestroy(),this._closedSubscription.unsubscribe()}_openPopup(){this._datepicker&&this._datepicker.open()}_getValueFromModel(e){return e}_assignValueToModel(e){this._model&&this._model.updateSelection(e,this)}_getMinDate(){return this._min}_getMaxDate(){return this._max}_getDateFilter(){return this._dateFilter}_shouldHandleChangeEvent(e){return e.source!==this}}return n.\u0275fac=function(e){return new(e||n)(p(z),p(Ct,8),p(Jr,8),p($d,8))},n.\u0275dir=M({type:n,selectors:[["input","matDatepicker",""]],hostAttrs:[1,"mat-datepicker-input"],hostVars:6,hostBindings:function(e,i){1&e&&H("input",function(o){return i._onInput(o.target.value)})("change",function(){return i._onChange()})("blur",function(){return i._onBlur()})("keydown",function(o){return i._onKeydown(o)}),2&e&&(Rr("disabled",i.disabled),pe("aria-haspopup",i._datepicker?"dialog":null)("aria-owns",(null==i._datepicker?null:i._datepicker.opened)&&i._datepicker.id||null)("min",i.min?i._dateAdapter.toIso8601(i.min):null)("max",i.max?i._dateAdapter.toIso8601(i.max):null)("data-mat-calendar",i._datepicker?i._datepicker.id:null))},inputs:{matDatepicker:"matDatepicker",min:"min",max:"max",dateFilter:["matDatepickerFilter","dateFilter"]},exportAs:["matDatepickerInput"],features:[ve([wW,EW,{provide:Gw,useExisting:n}]),K]}),n})(),IW=(()=>{class n{}return n.\u0275fac=function(e){return new(e||n)},n.\u0275dir=M({type:n,selectors:[["","matDatepickerToggleIcon",""]]}),n})(),RW=(()=>{class n{get disabled(){return void 0===this._disabled&&this.datepicker?this.datepicker.disabled:!!this._disabled}set disabled(e){this._disabled=ue(e)}constructor(e,i,r){this._intl=e,this._changeDetectorRef=i,this._stateChanges=ke.EMPTY;const o=Number(r);this.tabIndex=o||0===o?o:null}ngOnChanges(e){e.datepicker&&this._watchStateChanges()}ngOnDestroy(){this._stateChanges.unsubscribe()}ngAfterContentInit(){this._watchStateChanges()}_open(e){this.datepicker&&!this.disabled&&(this.datepicker.open(),e.stopPropagation())}_watchStateChanges(){const e=this.datepicker?this.datepicker.stateChanges:N(),i=this.datepicker&&this.datepicker.datepickerInput?this.datepicker.datepickerInput.stateChanges:N(),r=this.datepicker?$t(this.datepicker.openedStream,this.datepicker.closedStream):N();this._stateChanges.unsubscribe(),this._stateChanges=$t(this._intl.changes,e,i,r).subscribe(()=>this._changeDetectorRef.markForCheck())}}return n.\u0275fac=function(e){return new(e||n)(p(vl),p(Xe),Hi("tabindex"))},n.\u0275cmp=ee({type:n,selectors:[["mat-datepicker-toggle"]],contentQueries:function(e,i,r){if(1&e&&At(r,IW,5),2&e){let o;oe(o=se())&&(i._customIcon=o.first)}},viewQuery:function(e,i){if(1&e&&je(rW,5),2&e){let r;oe(r=se())&&(i._button=r.first)}},hostAttrs:[1,"mat-datepicker-toggle"],hostVars:8,hostBindings:function(e,i){1&e&&H("click",function(o){return i._open(o)}),2&e&&(pe("tabindex",null)("data-mat-calendar",i.datepicker?i.datepicker.id:null),me("mat-datepicker-toggle-active",i.datepicker&&i.datepicker.opened)("mat-accent",i.datepicker&&"accent"===i.datepicker.color)("mat-warn",i.datepicker&&"warn"===i.datepicker.color))},inputs:{datepicker:["for","datepicker"],tabIndex:"tabIndex",ariaLabel:["aria-label","ariaLabel"],disabled:"disabled",disableRipple:"disableRipple"},exportAs:["matDatepickerToggle"],features:[ze],ngContentSelectors:aW,decls:4,vars:6,consts:[["mat-icon-button","","type","button",3,"disabled","disableRipple"],["button",""],["class","mat-datepicker-toggle-default-icon","viewBox","0 0 24 24","width","24px","height","24px","fill","currentColor","focusable","false",4,"ngIf"],["viewBox","0 0 24 24","width","24px","height","24px","fill","currentColor","focusable","false",1,"mat-datepicker-toggle-default-icon"],["d","M19 3h-1V1h-2v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H5V8h14v11zM7 10h5v5H7z"]],template:function(e,i){1&e&&(Tt(sW),b(0,"button",0,1),J(2,oW,2,0,"svg",2),Ie(3),y()),2&e&&(I("disabled",i.disabled)("disableRipple",i.disableRipple),pe("aria-haspopup",i.datepicker?"dialog":null)("aria-label",i.ariaLabel||i._intl.openCalendarLabel)("tabindex",i.disabled?-1:i.tabIndex),w(2),I("ngIf",!i._customIcon))},dependencies:[wi,Um],styles:[".mat-datepicker-toggle{pointer-events:auto}.cdk-high-contrast-active .mat-datepicker-toggle-default-icon{color:CanvasText}"],encapsulation:2,changeDetection:0}),n})(),jE=(()=>{class n{}return n.\u0275fac=function(e){return new(e||n)},n.\u0275mod=he({type:n}),n.\u0275inj=ce({providers:[vl,AW],imports:[Ei,Nm,ml,Dm,pl,Ne,Gr]}),n})();const OW=new D("MAT_PROGRESS_BAR_DEFAULT_OPTIONS"),VW=Qa(class{constructor(n){this._elementRef=n}},"primary");let UW=(()=>{class n extends VW{constructor(e,i,r,o,s){super(e),this._ngZone=i,this._changeDetectorRef=r,this._animationMode=o,this._isNoopAnimation=!1,this._value=0,this._bufferValue=0,this.animationEnd=new O,this._mode="determinate",this._transitionendHandler=a=>{0===this.animationEnd.observers.length||!a.target||!a.target.classList.contains("mdc-linear-progress__primary-bar")||("determinate"===this.mode||"buffer"===this.mode)&&this._ngZone.run(()=>this.animationEnd.next({value:this.value}))},this._isNoopAnimation="NoopAnimations"===o,s&&(s.color&&(this.color=this.defaultColor=s.color),this.mode=s.mode||this.mode)}get value(){return this._value}set value(e){this._value=qE(oi(e)),this._changeDetectorRef.markForCheck()}get bufferValue(){return this._bufferValue||0}set bufferValue(e){this._bufferValue=qE(oi(e)),this._changeDetectorRef.markForCheck()}get mode(){return this._mode}set mode(e){this._mode=e,this._changeDetectorRef.markForCheck()}ngAfterViewInit(){this._ngZone.runOutsideAngular(()=>{this._elementRef.nativeElement.addEventListener("transitionend",this._transitionendHandler)})}ngOnDestroy(){this._elementRef.nativeElement.removeEventListener("transitionend",this._transitionendHandler)}_getPrimaryBarTransform(){return`scaleX(${this._isIndeterminate()?1:this.value/100})`}_getBufferBarFlexBasis(){return`${"buffer"===this.mode?this.bufferValue:100}%`}_isIndeterminate(){return"indeterminate"===this.mode||"query"===this.mode}}return n.\u0275fac=function(e){return new(e||n)(p(z),p(j),p(Xe),p(Kt,8),p(OW,8))},n.\u0275cmp=ee({type:n,selectors:[["mat-progress-bar"]],hostAttrs:["role","progressbar","aria-valuemin","0","aria-valuemax","100","tabindex","-1",1,"mat-mdc-progress-bar","mdc-linear-progress"],hostVars:8,hostBindings:function(e,i){2&e&&(pe("aria-valuenow",i._isIndeterminate()?null:i.value)("mode",i.mode),me("_mat-animation-noopable",i._isNoopAnimation)("mdc-linear-progress--animation-ready",!i._isNoopAnimation)("mdc-linear-progress--indeterminate",i._isIndeterminate()))},inputs:{color:"color",value:"value",bufferValue:"bufferValue",mode:"mode"},outputs:{animationEnd:"animationEnd"},exportAs:["matProgressBar"],features:[K],decls:7,vars:4,consts:[["aria-hidden","true",1,"mdc-linear-progress__buffer"],[1,"mdc-linear-progress__buffer-bar"],[1,"mdc-linear-progress__buffer-dots"],["aria-hidden","true",1,"mdc-linear-progress__bar","mdc-linear-progress__primary-bar"],[1,"mdc-linear-progress__bar-inner"],["aria-hidden","true",1,"mdc-linear-progress__bar","mdc-linear-progress__secondary-bar"]],template:function(e,i){1&e&&(b(0,"div",0),q(1,"div",1)(2,"div",2),y(),b(3,"div",3),q(4,"span",4),y(),b(5,"div",5),q(6,"span",4),y()),2&e&&(w(1),_n("flex-basis",i._getBufferBarFlexBasis()),w(2),_n("transform",i._getPrimaryBarTransform()))},styles:["@keyframes mdc-linear-progress-primary-indeterminate-translate{0%{transform:translateX(0)}20%{animation-timing-function:cubic-bezier(0.5, 0, 0.701732, 0.495819);transform:translateX(0)}59.15%{animation-timing-function:cubic-bezier(0.302435, 0.381352, 0.55, 0.956352);transform:translateX(var(--mdc-linear-progress-primary-half, 83.67142%))}100%{transform:translateX(var(--mdc-linear-progress-primary-full, 200.611057%))}}@keyframes mdc-linear-progress-primary-indeterminate-scale{0%{transform:scaleX(0.08)}36.65%{animation-timing-function:cubic-bezier(0.334731, 0.12482, 0.785844, 1);transform:scaleX(0.08)}69.15%{animation-timing-function:cubic-bezier(0.06, 0.11, 0.6, 1);transform:scaleX(0.661479)}100%{transform:scaleX(0.08)}}@keyframes mdc-linear-progress-secondary-indeterminate-translate{0%{animation-timing-function:cubic-bezier(0.15, 0, 0.515058, 0.409685);transform:translateX(0)}25%{animation-timing-function:cubic-bezier(0.31033, 0.284058, 0.8, 0.733712);transform:translateX(var(--mdc-linear-progress-secondary-quarter, 37.651913%))}48.35%{animation-timing-function:cubic-bezier(0.4, 0.627035, 0.6, 0.902026);transform:translateX(var(--mdc-linear-progress-secondary-half, 84.386165%))}100%{transform:translateX(var(--mdc-linear-progress-secondary-full, 160.277782%))}}@keyframes mdc-linear-progress-secondary-indeterminate-scale{0%{animation-timing-function:cubic-bezier(0.205028, 0.057051, 0.57661, 0.453971);transform:scaleX(0.08)}19.15%{animation-timing-function:cubic-bezier(0.152313, 0.196432, 0.648374, 1.004315);transform:scaleX(0.457104)}44.15%{animation-timing-function:cubic-bezier(0.257759, -0.003163, 0.211762, 1.38179);transform:scaleX(0.72796)}100%{transform:scaleX(0.08)}}@keyframes mdc-linear-progress-buffering{from{transform:rotate(180deg) translateX(-10px)}}@keyframes mdc-linear-progress-primary-indeterminate-translate-reverse{0%{transform:translateX(0)}20%{animation-timing-function:cubic-bezier(0.5, 0, 0.701732, 0.495819);transform:translateX(0)}59.15%{animation-timing-function:cubic-bezier(0.302435, 0.381352, 0.55, 0.956352);transform:translateX(var(--mdc-linear-progress-primary-half-neg, -83.67142%))}100%{transform:translateX(var(--mdc-linear-progress-primary-full-neg, -200.611057%))}}@keyframes mdc-linear-progress-secondary-indeterminate-translate-reverse{0%{animation-timing-function:cubic-bezier(0.15, 0, 0.515058, 0.409685);transform:translateX(0)}25%{animation-timing-function:cubic-bezier(0.31033, 0.284058, 0.8, 0.733712);transform:translateX(var(--mdc-linear-progress-secondary-quarter-neg, -37.651913%))}48.35%{animation-timing-function:cubic-bezier(0.4, 0.627035, 0.6, 0.902026);transform:translateX(var(--mdc-linear-progress-secondary-half-neg, -84.386165%))}100%{transform:translateX(var(--mdc-linear-progress-secondary-full-neg, -160.277782%))}}@keyframes mdc-linear-progress-buffering-reverse{from{transform:translateX(-10px)}}.mdc-linear-progress{position:relative;width:100%;transform:translateZ(0);outline:1px solid rgba(0,0,0,0);overflow:hidden;transition:opacity 250ms 0ms cubic-bezier(0.4, 0, 0.6, 1)}@media screen and (forced-colors: active){.mdc-linear-progress{outline-color:CanvasText}}.mdc-linear-progress__bar{position:absolute;width:100%;height:100%;animation:none;transform-origin:top left;transition:transform 250ms 0ms cubic-bezier(0.4, 0, 0.6, 1)}.mdc-linear-progress__bar-inner{display:inline-block;position:absolute;width:100%;animation:none;border-top-style:solid}.mdc-linear-progress__buffer{display:flex;position:absolute;width:100%;height:100%}.mdc-linear-progress__buffer-dots{background-repeat:repeat-x;flex:auto;transform:rotate(180deg);animation:mdc-linear-progress-buffering 250ms infinite linear}.mdc-linear-progress__buffer-bar{flex:0 1 100%;transition:flex-basis 250ms 0ms cubic-bezier(0.4, 0, 0.6, 1)}.mdc-linear-progress__primary-bar{transform:scaleX(0)}.mdc-linear-progress__secondary-bar{display:none}.mdc-linear-progress--indeterminate .mdc-linear-progress__bar{transition:none}.mdc-linear-progress--indeterminate .mdc-linear-progress__primary-bar{left:-145.166611%}.mdc-linear-progress--indeterminate .mdc-linear-progress__secondary-bar{left:-54.888891%;display:block}.mdc-linear-progress--indeterminate.mdc-linear-progress--animation-ready .mdc-linear-progress__primary-bar{animation:mdc-linear-progress-primary-indeterminate-translate 2s infinite linear}.mdc-linear-progress--indeterminate.mdc-linear-progress--animation-ready .mdc-linear-progress__primary-bar>.mdc-linear-progress__bar-inner{animation:mdc-linear-progress-primary-indeterminate-scale 2s infinite linear}.mdc-linear-progress--indeterminate.mdc-linear-progress--animation-ready .mdc-linear-progress__secondary-bar{animation:mdc-linear-progress-secondary-indeterminate-translate 2s infinite linear}.mdc-linear-progress--indeterminate.mdc-linear-progress--animation-ready .mdc-linear-progress__secondary-bar>.mdc-linear-progress__bar-inner{animation:mdc-linear-progress-secondary-indeterminate-scale 2s infinite linear}[dir=rtl] .mdc-linear-progress:not([dir=ltr]) .mdc-linear-progress__bar,.mdc-linear-progress[dir=rtl]:not([dir=ltr]) .mdc-linear-progress__bar{right:0;-webkit-transform-origin:center right;transform-origin:center right}[dir=rtl] .mdc-linear-progress:not([dir=ltr]).mdc-linear-progress--animation-ready .mdc-linear-progress__primary-bar,.mdc-linear-progress[dir=rtl]:not([dir=ltr]).mdc-linear-progress--animation-ready .mdc-linear-progress__primary-bar{animation-name:mdc-linear-progress-primary-indeterminate-translate-reverse}[dir=rtl] .mdc-linear-progress:not([dir=ltr]).mdc-linear-progress--animation-ready .mdc-linear-progress__secondary-bar,.mdc-linear-progress[dir=rtl]:not([dir=ltr]).mdc-linear-progress--animation-ready .mdc-linear-progress__secondary-bar{animation-name:mdc-linear-progress-secondary-indeterminate-translate-reverse}[dir=rtl] .mdc-linear-progress:not([dir=ltr]) .mdc-linear-progress__buffer-dots,.mdc-linear-progress[dir=rtl]:not([dir=ltr]) .mdc-linear-progress__buffer-dots{animation:mdc-linear-progress-buffering-reverse 250ms infinite linear;transform:rotate(0)}[dir=rtl] .mdc-linear-progress:not([dir=ltr]).mdc-linear-progress--indeterminate .mdc-linear-progress__primary-bar,.mdc-linear-progress[dir=rtl]:not([dir=ltr]).mdc-linear-progress--indeterminate .mdc-linear-progress__primary-bar{right:-145.166611%;left:auto}[dir=rtl] .mdc-linear-progress:not([dir=ltr]).mdc-linear-progress--indeterminate .mdc-linear-progress__secondary-bar,.mdc-linear-progress[dir=rtl]:not([dir=ltr]).mdc-linear-progress--indeterminate .mdc-linear-progress__secondary-bar{right:-54.888891%;left:auto}.mdc-linear-progress--closed{opacity:0}.mdc-linear-progress--closed-animation-off .mdc-linear-progress__buffer-dots{animation:none}.mdc-linear-progress--closed-animation-off.mdc-linear-progress--indeterminate .mdc-linear-progress__bar,.mdc-linear-progress--closed-animation-off.mdc-linear-progress--indeterminate .mdc-linear-progress__bar .mdc-linear-progress__bar-inner{animation:none}.mdc-linear-progress__bar-inner{border-color:var(--mdc-linear-progress-active-indicator-color, #6200ee)}.mdc-linear-progress__buffer-dots{background-image:url(\"data:image/svg+xml,%3Csvg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px' enable-background='new 0 0 5 2' xml:space='preserve' viewBox='0 0 5 2' preserveAspectRatio='none slice'%3E%3Ccircle cx='1' cy='1' r='1' fill='%23e6e6e6'/%3E%3C/svg%3E\")}.mdc-linear-progress__buffer-bar{background-color:#e6e6e6}.mdc-linear-progress{height:var(--mdc-linear-progress-track-height, 4px)}.mdc-linear-progress__bar-inner{border-top-width:var(--mdc-linear-progress-track-height, 4px)}.mdc-linear-progress__buffer-dots{background-size:10px var(--mdc-linear-progress-track-height, 4px)}.mat-mdc-progress-bar{display:block}.mat-mdc-progress-bar[mode=query]{transform:scaleX(-1)}.mat-mdc-progress-bar._mat-animation-noopable .mdc-linear-progress__buffer-dots,.mat-mdc-progress-bar._mat-animation-noopable .mdc-linear-progress__primary-bar,.mat-mdc-progress-bar._mat-animation-noopable .mdc-linear-progress__secondary-bar,.mat-mdc-progress-bar._mat-animation-noopable .mdc-linear-progress__bar-inner.mdc-linear-progress__bar-inner{animation:none}.mat-mdc-progress-bar._mat-animation-noopable .mdc-linear-progress__primary-bar,.mat-mdc-progress-bar._mat-animation-noopable .mdc-linear-progress__buffer-bar{transition:transform 1ms}"],encapsulation:2,changeDetection:0}),n})();function qE(n,t=0,e=100){return Math.max(t,Math.min(e,n))}let KE=(()=>{class n{}return n.\u0275fac=function(e){return new(e||n)},n.\u0275mod=he({type:n}),n.\u0275inj=ce({imports:[Ne]}),n})();class ys{}function NW(n,t){if(1&n&&(b(0,"mat-option",18),E(1),y()),2&n){const e=t.$implicit;w(1),Fp(" ",e.code_3," ",e.dial_code," ")}}function PW(n,t){1&n&&(b(0,"div",28),q(1,"app-progress-bar"),y())}ys.\u0275fac=function(t){return new(t||ys)},ys.\u0275cmp=ee({type:ys,selectors:[["app-progress-bar"]],decls:3,vars:0,consts:[[2,"text-align","center"],["mode","indeterminate"]],template:function(t,e){1&t&&(b(0,"div",0),E(1," Guardando... "),q(2,"mat-progress-bar",1),y())},dependencies:[UW]});class Sl{constructor(t){this.processesService=t,this.pathPhoto="../../../assets/img/user-profile-blank.png",this.loading=!1,this.codes=DJ.h,this.changePhoto=e=>{let i=e.target.files[0];null!=i?this.convertToBase64(i):this.pathPhoto="../../../assets/img/user-profile-blank.png"}}ngOnInit(){this.processesService.setPath("Nuevo Miembro")}clickPhoto(){document.getElementById("inputPhoto").click()}clickInputCalendar(){document.getElementById("picker-toggle").click()}convertToBase64(t){new Me(i=>{this.readFile(t,i)}).subscribe(i=>{this.pathPhoto=i})}readFile(t,e){let i=new FileReader;i.readAsDataURL(t),i.onload=function(){e.next(i.result),e.complete()},i.onerror=function(r){console.log("Error: ",r)}}clickSave(){this.loading=!0,console.log("incia"),setTimeout(()=>{console.log("termina"),this.loading=!1},4e3)}}Sl.\u0275fac=function(t){return new(t||Sl)(p(ri))},Sl.\u0275cmp=ee({type:Sl,selectors:[["app-new-member"]],decls:70,vars:6,consts:[[1,"row"],[1,"col-md-12"],[1,"photo-user"],["id","userImage","alt","user-avatar",1,"img-blank",3,"src","click"],["type","file","id","inputPhoto","hidden","",3,"change"],[2,"display","flex","justify-content","center"],[2,"font-size","12px"],[1,"row",2,"margin-top","12px"],[1,"col-md-6"],["appearance","outline"],["type","text","matInput",""],["matPrefix",""],["type","email","matInput",""],[1,"col-md-4","col-5"],["value","1",4,"ngFor","ngForOf"],[1,"col-md-8","col-7"],["type","tel","matInput",""],[1,"col-md-12",2,"margin-bottom","8px"],["value","1"],["value","2"],["value","3"],["matInput","","readonly","readonly",3,"matDatepicker","click"],["id","picker-toggle","matPrefix","",3,"for"],["touchUi",""],["picker",""],["class","col-md-12","style","padding-bottom: 8px;",4,"ngIf"],[1,"col-md-12",2,"text-align","end"],["mat-raised-button","",1,"button-sgm-primary",3,"disabled","click"],[1,"col-md-12",2,"padding-bottom","8px"]],template:function(t,e){if(1&t&&(b(0,"div",0)(1,"div",1)(2,"section",2)(3,"img",3),H("click",function(){return e.clickPhoto()}),y(),b(4,"input",4),H("change",function(r){return e.changePhoto(r)}),y()(),b(5,"section",5)(6,"span",6),E(7,"Click en la imagen para cambiarla"),y()()()(),b(8,"div",7)(9,"div",8)(10,"mat-form-field",9)(11,"mat-label"),E(12,"Nombre"),y(),q(13,"input",10),b(14,"mat-icon",11),E(15,"account_circle"),y()()(),b(16,"div",8)(17,"mat-form-field",9)(18,"mat-label"),E(19,"Correo"),y(),q(20,"input",12),b(21,"mat-icon",11),E(22,"contact_mail"),y()()(),b(23,"div",13)(24,"mat-form-field",9)(25,"mat-label"),E(26,"Pa\xeds"),y(),b(27,"mat-select"),J(28,NW,2,2,"mat-option",14),y(),b(29,"mat-icon",11),E(30,"contact_phone"),y()()(),b(31,"div",15)(32,"mat-form-field",9)(33,"mat-label"),E(34,"Tel\xe9fono"),y(),q(35,"input",16),b(36,"mat-icon",11),E(37,"contact_phone"),y()()()(),q(38,"mat-divider"),b(39,"div",7)(40,"div",17),E(41,"Detalles del plan"),y(),b(42,"div",8)(43,"mat-form-field",9)(44,"mat-label"),E(45,"Seleccione un plan"),y(),b(46,"mat-select")(47,"mat-option",18),E(48," Quincenal "),y(),b(49,"mat-option",19),E(50," Mensual "),y(),b(51,"mat-option",20),E(52," Anual "),y()(),b(53,"mat-icon",11),E(54,"assignment"),y()()(),b(55,"div",8)(56,"mat-form-field",9)(57,"mat-label"),E(58,"Fecha de Inicio"),y(),b(59,"input",21),H("click",function(){return e.clickInputCalendar()}),y(),q(60,"mat-datepicker-toggle",22)(61,"mat-datepicker",23,24),y()()(),b(63,"div",0),J(64,PW,2,0,"div",25),b(65,"div",26)(66,"button",27),H("click",function(){return e.clickSave()}),b(67,"mat-icon"),E(68,"save"),y(),E(69," Guardar "),y()()()),2&t){const i=Er(62);w(3),I("src",e.pathPhoto,Gs),w(25),I("ngForOf",e.codes),w(31),I("matDatepicker",i),w(1),I("for",i),w(4),I("ngIf",e.loading),w(2),I("disabled",e.loading)}},dependencies:[Ur,wi,eu,fs,Xd,uu,hs,Fi,wJ,EE,Rm,kW,Ig,RW,ys],styles:[".photo-user[_ngcontent-%COMP%]{display:flex;justify-content:center}.img-blank[_ngcontent-%COMP%]{width:150px;height:150px;border-radius:25%;cursor:pointer}button.example-custom-date-class[_ngcontent-%COMP%]{background:orange;border-radius:100%}"]});const _W=["input"],BW=["*"];let HE=0;class LE{constructor(t,e){this.source=t,this.value=e}}const jW={provide:wn,useExisting:De(()=>WE),multi:!0},JE=new D("MatRadioGroup"),qW=new D("mat-radio-default-options",{providedIn:"root",factory:function KW(){return{color:"accent"}}});let HW=(()=>{class n{get name(){return this._name}set name(e){this._name=e,this._updateRadioButtonNames()}get labelPosition(){return this._labelPosition}set labelPosition(e){this._labelPosition="before"===e?"before":"after",this._markRadiosForCheck()}get value(){return this._value}set value(e){this._value!==e&&(this._value=e,this._updateSelectedRadioFromValue(),this._checkSelectedRadioButton())}_checkSelectedRadioButton(){this._selected&&!this._selected.checked&&(this._selected.checked=!0)}get selected(){return this._selected}set selected(e){this._selected=e,this.value=e?e.value:null,this._checkSelectedRadioButton()}get disabled(){return this._disabled}set disabled(e){this._disabled=ue(e),this._markRadiosForCheck()}get required(){return this._required}set required(e){this._required=ue(e),this._markRadiosForCheck()}constructor(e){this._changeDetector=e,this._value=null,this._name="mat-radio-group-"+HE++,this._selected=null,this._isInitialized=!1,this._labelPosition="after",this._disabled=!1,this._required=!1,this._controlValueAccessorChangeFn=()=>{},this.onTouched=()=>{},this.change=new O}ngAfterContentInit(){this._isInitialized=!0}_touch(){this.onTouched&&this.onTouched()}_updateRadioButtonNames(){this._radios&&this._radios.forEach(e=>{e.name=this.name,e._markForCheck()})}_updateSelectedRadioFromValue(){this._radios&&(null===this._selected||this._selected.value!==this._value)&&(this._selected=null,this._radios.forEach(i=>{i.checked=this.value===i.value,i.checked&&(this._selected=i)}))}_emitChangeEvent(){this._isInitialized&&this.change.emit(new LE(this._selected,this._value))}_markRadiosForCheck(){this._radios&&this._radios.forEach(e=>e._markForCheck())}writeValue(e){this.value=e,this._changeDetector.markForCheck()}registerOnChange(e){this._controlValueAccessorChangeFn=e}registerOnTouched(e){this.onTouched=e}setDisabledState(e){this.disabled=e,this._changeDetector.markForCheck()}}return n.\u0275fac=function(e){return new(e||n)(p(Xe))},n.\u0275dir=M({type:n,inputs:{color:"color",name:"name",labelPosition:"labelPosition",value:"value",selected:"selected",disabled:"disabled",required:"required"},outputs:{change:"change"}}),n})();class LW{constructor(t){this._elementRef=t}}const JW=wm(_x(LW));let WW=(()=>{class n extends JW{get checked(){return this._checked}set checked(e){const i=ue(e);this._checked!==i&&(this._checked=i,i&&this.radioGroup&&this.radioGroup.value!==this.value?this.radioGroup.selected=this:!i&&this.radioGroup&&this.radioGroup.value===this.value&&(this.radioGroup.selected=null),i&&this._radioDispatcher.notify(this.id,this.name),this._changeDetector.markForCheck())}get value(){return this._value}set value(e){this._value!==e&&(this._value=e,null!==this.radioGroup&&(this.checked||(this.checked=this.radioGroup.value===e),this.checked&&(this.radioGroup.selected=this)))}get labelPosition(){return this._labelPosition||this.radioGroup&&this.radioGroup.labelPosition||"after"}set labelPosition(e){this._labelPosition=e}get disabled(){return this._disabled||null!==this.radioGroup&&this.radioGroup.disabled}set disabled(e){this._setDisabled(ue(e))}get required(){return this._required||this.radioGroup&&this.radioGroup.required}set required(e){this._required=ue(e)}get color(){return this._color||this.radioGroup&&this.radioGroup.color||this._providerOverride&&this._providerOverride.color||"accent"}set color(e){this._color=e}get inputId(){return`${this.id||this._uniqueId}-input`}constructor(e,i,r,o,s,a,l,c){super(i),this._changeDetector=r,this._focusMonitor=o,this._radioDispatcher=s,this._providerOverride=l,this._uniqueId="mat-radio-"+ ++HE,this.id=this._uniqueId,this.change=new O,this._checked=!1,this._value=null,this._removeUniqueSelectionListener=()=>{},this.radioGroup=e,this._noopAnimations="NoopAnimations"===a,c&&(this.tabIndex=oi(c,0))}focus(e,i){i?this._focusMonitor.focusVia(this._inputElement,i,e):this._inputElement.nativeElement.focus(e)}_markForCheck(){this._changeDetector.markForCheck()}ngOnInit(){this.radioGroup&&(this.checked=this.radioGroup.value===this._value,this.checked&&(this.radioGroup.selected=this),this.name=this.radioGroup.name),this._removeUniqueSelectionListener=this._radioDispatcher.listen((e,i)=>{e!==this.id&&i===this.name&&(this.checked=!1)})}ngDoCheck(){this._updateTabIndex()}ngAfterViewInit(){this._updateTabIndex(),this._focusMonitor.monitor(this._elementRef,!0).subscribe(e=>{!e&&this.radioGroup&&this.radioGroup._touch()})}ngOnDestroy(){this._focusMonitor.stopMonitoring(this._elementRef),this._removeUniqueSelectionListener()}_emitChangeEvent(){this.change.emit(new LE(this,this._value))}_isRippleDisabled(){return this.disableRipple||this.disabled}_onInputClick(e){e.stopPropagation()}_onInputInteraction(e){if(e.stopPropagation(),!this.checked&&!this.disabled){const i=this.radioGroup&&this.value!==this.radioGroup.value;this.checked=!0,this._emitChangeEvent(),this.radioGroup&&(this.radioGroup._controlValueAccessorChangeFn(this.value),i&&this.radioGroup._emitChangeEvent())}}_setDisabled(e){this._disabled!==e&&(this._disabled=e,this._changeDetector.markForCheck())}_updateTabIndex(){const e=this.radioGroup;let i;if(i=e&&e.selected&&!this.disabled?e.selected===this?this.tabIndex:-1:this.tabIndex,i!==this._previousTabIndex){const r=this._inputElement?.nativeElement;r&&(r.setAttribute("tabindex",i+""),this._previousTabIndex=i)}}}return n.\u0275fac=function(e){Li()},n.\u0275dir=M({type:n,viewQuery:function(e,i){if(1&e&&je(_W,5),2&e){let r;oe(r=se())&&(i._inputElement=r.first)}},inputs:{id:"id",name:"name",ariaLabel:["aria-label","ariaLabel"],ariaLabelledby:["aria-labelledby","ariaLabelledby"],ariaDescribedby:["aria-describedby","ariaDescribedby"],checked:"checked",value:"value",labelPosition:"labelPosition",disabled:"disabled",required:"required",color:"color"},outputs:{change:"change"},features:[K]}),n})(),WE=(()=>{class n extends HW{}return n.\u0275fac=function(){let t;return function(i){return(t||(t=rt(n)))(i||n)}}(),n.\u0275dir=M({type:n,selectors:[["mat-radio-group"]],contentQueries:function(e,i,r){if(1&e&&At(r,QE,5),2&e){let o;oe(o=se())&&(i._radios=o)}},hostAttrs:["role","radiogroup",1,"mat-mdc-radio-group"],exportAs:["matRadioGroup"],features:[ve([jW,{provide:JE,useExisting:n}]),K]}),n})(),QE=(()=>{class n extends WW{constructor(e,i,r,o,s,a,l,c){super(e,i,r,o,s,a,l,c)}}return n.\u0275fac=function(e){return new(e||n)(p(JE,8),p(z),p(Xe),p(er),p(IJ),p(Kt,8),p(qW,8),Hi("tabindex"))},n.\u0275cmp=ee({type:n,selectors:[["mat-radio-button"]],hostAttrs:[1,"mat-mdc-radio-button"],hostVars:15,hostBindings:function(e,i){1&e&&H("focus",function(){return i._inputElement.nativeElement.focus()}),2&e&&(pe("id",i.id)("tabindex",null)("aria-label",null)("aria-labelledby",null)("aria-describedby",null),me("mat-primary","primary"===i.color)("mat-accent","accent"===i.color)("mat-warn","warn"===i.color)("mat-mdc-radio-checked",i.checked)("_mat-animation-noopable",i._noopAnimations))},inputs:{disableRipple:"disableRipple",tabIndex:"tabIndex"},exportAs:["matRadioButton"],features:[K],ngContentSelectors:BW,decls:13,vars:17,consts:[[1,"mdc-form-field"],["formField",""],[1,"mdc-radio"],[1,"mat-mdc-radio-touch-target",3,"click"],["type","radio",1,"mdc-radio__native-control",3,"id","checked","disabled","required","change"],["input",""],[1,"mdc-radio__background"],[1,"mdc-radio__outer-circle"],[1,"mdc-radio__inner-circle"],["mat-ripple","",1,"mat-radio-ripple","mat-mdc-focus-indicator",3,"matRippleTrigger","matRippleDisabled","matRippleCentered"],[1,"mat-ripple-element","mat-radio-persistent-ripple"],[3,"for"]],template:function(e,i){if(1&e&&(Tt(),b(0,"div",0,1)(2,"div",2)(3,"div",3),H("click",function(o){return i._onInputInteraction(o)}),y(),b(4,"input",4,5),H("change",function(o){return i._onInputInteraction(o)}),y(),b(6,"div",6),q(7,"div",7)(8,"div",8),y(),b(9,"div",9),q(10,"div",10),y()(),b(11,"label",11),Ie(12),y()()),2&e){const r=Er(1);me("mdc-form-field--align-end","before"==i.labelPosition),w(2),me("mdc-radio--disabled",i.disabled),w(2),I("id",i.inputId)("checked",i.checked)("disabled",i.disabled)("required",i.required),pe("name",i.name)("value",i.value)("aria-label",i.ariaLabel)("aria-labelledby",i.ariaLabelledby)("aria-describedby",i.ariaDescribedby),w(5),I("matRippleTrigger",r)("matRippleDisabled",i._isRippleDisabled())("matRippleCentered",!0),w(2),I("for",i.inputId)}},dependencies:[Ya],styles:['.mdc-radio{display:inline-block;position:relative;flex:0 0 auto;box-sizing:content-box;width:20px;height:20px;cursor:pointer;will-change:opacity,transform,border-color,color}.mdc-radio[hidden]{display:none}.mdc-radio__background{display:inline-block;position:relative;box-sizing:border-box;width:20px;height:20px}.mdc-radio__background::before{position:absolute;transform:scale(0, 0);border-radius:50%;opacity:0;pointer-events:none;content:"";transition:opacity 120ms 0ms cubic-bezier(0.4, 0, 0.6, 1),transform 120ms 0ms cubic-bezier(0.4, 0, 0.6, 1)}.mdc-radio__outer-circle{position:absolute;top:0;left:0;box-sizing:border-box;width:100%;height:100%;border-width:2px;border-style:solid;border-radius:50%;transition:border-color 120ms 0ms cubic-bezier(0.4, 0, 0.6, 1)}.mdc-radio__inner-circle{position:absolute;top:0;left:0;box-sizing:border-box;width:100%;height:100%;transform:scale(0, 0);border-width:10px;border-style:solid;border-radius:50%;transition:transform 120ms 0ms cubic-bezier(0.4, 0, 0.6, 1),border-color 120ms 0ms cubic-bezier(0.4, 0, 0.6, 1)}.mdc-radio__native-control{position:absolute;margin:0;padding:0;opacity:0;cursor:inherit;z-index:1}.mdc-radio--touch{margin-top:4px;margin-bottom:4px;margin-right:4px;margin-left:4px}.mdc-radio--touch .mdc-radio__native-control{top:calc((40px - 48px) / 2);right:calc((40px - 48px) / 2);left:calc((40px - 48px) / 2);width:48px;height:48px}.mdc-radio.mdc-ripple-upgraded--background-focused .mdc-radio__focus-ring,.mdc-radio:not(.mdc-ripple-upgraded):focus .mdc-radio__focus-ring{pointer-events:none;border:2px solid rgba(0,0,0,0);border-radius:6px;box-sizing:content-box;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);height:100%;width:100%}@media screen and (forced-colors: active){.mdc-radio.mdc-ripple-upgraded--background-focused .mdc-radio__focus-ring,.mdc-radio:not(.mdc-ripple-upgraded):focus .mdc-radio__focus-ring{border-color:CanvasText}}.mdc-radio.mdc-ripple-upgraded--background-focused .mdc-radio__focus-ring::after,.mdc-radio:not(.mdc-ripple-upgraded):focus .mdc-radio__focus-ring::after{content:"";border:2px solid rgba(0,0,0,0);border-radius:8px;display:block;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);height:calc(100% + 4px);width:calc(100% + 4px)}@media screen and (forced-colors: active){.mdc-radio.mdc-ripple-upgraded--background-focused .mdc-radio__focus-ring::after,.mdc-radio:not(.mdc-ripple-upgraded):focus .mdc-radio__focus-ring::after{border-color:CanvasText}}.mdc-radio__native-control:checked+.mdc-radio__background,.mdc-radio__native-control:disabled+.mdc-radio__background{transition:opacity 120ms 0ms cubic-bezier(0, 0, 0.2, 1),transform 120ms 0ms cubic-bezier(0, 0, 0.2, 1)}.mdc-radio__native-control:checked+.mdc-radio__background .mdc-radio__outer-circle,.mdc-radio__native-control:disabled+.mdc-radio__background .mdc-radio__outer-circle{transition:border-color 120ms 0ms cubic-bezier(0, 0, 0.2, 1)}.mdc-radio__native-control:checked+.mdc-radio__background .mdc-radio__inner-circle,.mdc-radio__native-control:disabled+.mdc-radio__background .mdc-radio__inner-circle{transition:transform 120ms 0ms cubic-bezier(0, 0, 0.2, 1),border-color 120ms 0ms cubic-bezier(0, 0, 0.2, 1)}.mdc-radio--disabled{cursor:default;pointer-events:none}.mdc-radio__native-control:checked+.mdc-radio__background .mdc-radio__inner-circle{transform:scale(0.5);transition:transform 120ms 0ms cubic-bezier(0, 0, 0.2, 1),border-color 120ms 0ms cubic-bezier(0, 0, 0.2, 1)}.mdc-radio__native-control:disabled+.mdc-radio__background,[aria-disabled=true] .mdc-radio__native-control+.mdc-radio__background{cursor:default}.mdc-radio__native-control:focus+.mdc-radio__background::before{transform:scale(1);opacity:.12;transition:opacity 120ms 0ms cubic-bezier(0, 0, 0.2, 1),transform 120ms 0ms cubic-bezier(0, 0, 0.2, 1)}.mdc-form-field{display:inline-flex;align-items:center;vertical-align:middle}.mdc-form-field[hidden]{display:none}.mdc-form-field>label{margin-left:0;margin-right:auto;padding-left:4px;padding-right:0;order:0}[dir=rtl] .mdc-form-field>label,.mdc-form-field>label[dir=rtl]{margin-left:auto;margin-right:0}[dir=rtl] .mdc-form-field>label,.mdc-form-field>label[dir=rtl]{padding-left:0;padding-right:4px}.mdc-form-field--nowrap>label{text-overflow:ellipsis;overflow:hidden;white-space:nowrap}.mdc-form-field--align-end>label{margin-left:auto;margin-right:0;padding-left:0;padding-right:4px;order:-1}[dir=rtl] .mdc-form-field--align-end>label,.mdc-form-field--align-end>label[dir=rtl]{margin-left:0;margin-right:auto}[dir=rtl] .mdc-form-field--align-end>label,.mdc-form-field--align-end>label[dir=rtl]{padding-left:4px;padding-right:0}.mdc-form-field--space-between{justify-content:space-between}.mdc-form-field--space-between>label{margin:0}[dir=rtl] .mdc-form-field--space-between>label,.mdc-form-field--space-between>label[dir=rtl]{margin:0}.mat-mdc-radio-button{-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-radio-button .mdc-radio{padding:calc((var(--mdc-radio-state-layer-size, 40px) - 20px) / 2)}.mat-mdc-radio-button .mdc-radio [aria-disabled=true] .mdc-radio__native-control:checked+.mdc-radio__background .mdc-radio__outer-circle,.mat-mdc-radio-button .mdc-radio .mdc-radio__native-control:disabled:checked+.mdc-radio__background .mdc-radio__outer-circle{border-color:var(--mdc-radio-disabled-selected-icon-color, #000)}.mat-mdc-radio-button .mdc-radio [aria-disabled=true] .mdc-radio__native-control+.mdc-radio__background .mdc-radio__inner-circle,.mat-mdc-radio-button .mdc-radio .mdc-radio__native-control:disabled+.mdc-radio__background .mdc-radio__inner-circle{border-color:var(--mdc-radio-disabled-selected-icon-color, #000)}.mat-mdc-radio-button .mdc-radio [aria-disabled=true] .mdc-radio__native-control:checked+.mdc-radio__background .mdc-radio__outer-circle,.mat-mdc-radio-button .mdc-radio .mdc-radio__native-control:disabled:checked+.mdc-radio__background .mdc-radio__outer-circle{opacity:var(--mdc-radio-disabled-selected-icon-opacity, 0.38)}.mat-mdc-radio-button .mdc-radio [aria-disabled=true] .mdc-radio__native-control+.mdc-radio__background .mdc-radio__inner-circle,.mat-mdc-radio-button .mdc-radio .mdc-radio__native-control:disabled+.mdc-radio__background .mdc-radio__inner-circle{opacity:var(--mdc-radio-disabled-selected-icon-opacity, 0.38)}.mat-mdc-radio-button .mdc-radio [aria-disabled=true] .mdc-radio__native-control:not(:checked)+.mdc-radio__background .mdc-radio__outer-circle,.mat-mdc-radio-button .mdc-radio .mdc-radio__native-control:disabled:not(:checked)+.mdc-radio__background .mdc-radio__outer-circle{border-color:var(--mdc-radio-disabled-unselected-icon-color, #000)}.mat-mdc-radio-button .mdc-radio [aria-disabled=true] .mdc-radio__native-control:not(:checked)+.mdc-radio__background .mdc-radio__outer-circle,.mat-mdc-radio-button .mdc-radio .mdc-radio__native-control:disabled:not(:checked)+.mdc-radio__background .mdc-radio__outer-circle{opacity:var(--mdc-radio-disabled-unselected-icon-opacity, 0.38)}.mat-mdc-radio-button .mdc-radio.mdc-ripple-upgraded--background-focused .mdc-radio__native-control:enabled:checked+.mdc-radio__background .mdc-radio__outer-circle,.mat-mdc-radio-button .mdc-radio:not(.mdc-ripple-upgraded):focus .mdc-radio__native-control:enabled:checked+.mdc-radio__background .mdc-radio__outer-circle{border-color:var(--mdc-radio-selected-focus-icon-color, #6200ee)}.mat-mdc-radio-button .mdc-radio.mdc-ripple-upgraded--background-focused .mdc-radio__native-control:enabled+.mdc-radio__background .mdc-radio__inner-circle,.mat-mdc-radio-button .mdc-radio:not(.mdc-ripple-upgraded):focus .mdc-radio__native-control:enabled+.mdc-radio__background .mdc-radio__inner-circle{border-color:var(--mdc-radio-selected-focus-icon-color, #6200ee)}.mat-mdc-radio-button .mdc-radio:hover .mdc-radio__native-control:enabled:checked+.mdc-radio__background .mdc-radio__outer-circle{border-color:var(--mdc-radio-selected-hover-icon-color, #6200ee)}.mat-mdc-radio-button .mdc-radio:hover .mdc-radio__native-control:enabled+.mdc-radio__background .mdc-radio__inner-circle{border-color:var(--mdc-radio-selected-hover-icon-color, #6200ee)}.mat-mdc-radio-button .mdc-radio .mdc-radio__native-control:enabled:checked+.mdc-radio__background .mdc-radio__outer-circle{border-color:var(--mdc-radio-selected-icon-color, #6200ee)}.mat-mdc-radio-button .mdc-radio .mdc-radio__native-control:enabled+.mdc-radio__background .mdc-radio__inner-circle{border-color:var(--mdc-radio-selected-icon-color, #6200ee)}.mat-mdc-radio-button .mdc-radio:not(:disabled):active .mdc-radio__native-control:enabled:checked+.mdc-radio__background .mdc-radio__outer-circle{border-color:var(--mdc-radio-selected-pressed-icon-color, #6200ee)}.mat-mdc-radio-button .mdc-radio:not(:disabled):active .mdc-radio__native-control:enabled+.mdc-radio__background .mdc-radio__inner-circle{border-color:var(--mdc-radio-selected-pressed-icon-color, #6200ee)}.mat-mdc-radio-button .mdc-radio:hover .mdc-radio__native-control:enabled:not(:checked)+.mdc-radio__background .mdc-radio__outer-circle{border-color:var(--mdc-radio-unselected-hover-icon-color, #000)}.mat-mdc-radio-button .mdc-radio .mdc-radio__native-control:enabled:not(:checked)+.mdc-radio__background .mdc-radio__outer-circle{border-color:var(--mdc-radio-unselected-icon-color, #000)}.mat-mdc-radio-button .mdc-radio:not(:disabled):active .mdc-radio__native-control:enabled:not(:checked)+.mdc-radio__background .mdc-radio__outer-circle{border-color:var(--mdc-radio-unselected-pressed-icon-color, #000)}.mat-mdc-radio-button .mdc-radio .mdc-radio__background::before{top:calc(-1 * (var(--mdc-radio-state-layer-size, 40px) - 20px) / 2);left:calc(-1 * (var(--mdc-radio-state-layer-size, 40px) - 20px) / 2);width:var(--mdc-radio-state-layer-size, 40px);height:var(--mdc-radio-state-layer-size, 40px)}.mat-mdc-radio-button .mdc-radio .mdc-radio__native-control{top:calc((var(--mdc-radio-state-layer-size, 40px) - var(--mdc-radio-state-layer-size, 40px)) / 2);right:calc((var(--mdc-radio-state-layer-size, 40px) - var(--mdc-radio-state-layer-size, 40px)) / 2);left:calc((var(--mdc-radio-state-layer-size, 40px) - var(--mdc-radio-state-layer-size, 40px)) / 2);width:var(--mdc-radio-state-layer-size, 40px);height:var(--mdc-radio-state-layer-size, 40px)}.mat-mdc-radio-button .mdc-radio .mdc-radio__background::before{background-color:var(--mat-mdc-radio-ripple-color, transparent)}.mat-mdc-radio-button .mdc-radio:hover .mdc-radio__native-control:not([disabled]):not(:focus)~.mdc-radio__background::before{opacity:.04;transform:scale(1)}.mat-mdc-radio-button.mat-mdc-radio-checked .mdc-radio__background::before{background-color:var(--mat-mdc-radio-checked-ripple-color, transparent)}.mat-mdc-radio-button.mat-mdc-radio-checked .mat-ripple-element{background-color:var(--mat-mdc-radio-checked-ripple-color, transparent)}.mat-mdc-radio-button .mat-radio-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:50%}.mat-mdc-radio-button .mat-radio-ripple .mat-ripple-element{opacity:.14}.mat-mdc-radio-button .mat-radio-ripple::before{border-radius:50%}.mat-mdc-radio-button._mat-animation-noopable .mdc-radio__background::before,.mat-mdc-radio-button._mat-animation-noopable .mdc-radio__outer-circle,.mat-mdc-radio-button._mat-animation-noopable .mdc-radio__inner-circle{transition:none !important}.mat-mdc-radio-button .mdc-radio .mdc-radio__native-control:focus:enabled:not(:checked)~.mdc-radio__background .mdc-radio__outer-circle{border-color:var(--mdc-radio-unselected-focus-icon-color, black)}.mat-mdc-radio-button.cdk-focused .mat-mdc-focus-indicator::before{content:""}.mat-mdc-radio-touch-target{position:absolute;top:50%;height:48px;left:50%;width:48px;transform:translate(-50%, -50%)}[dir=rtl] .mat-mdc-radio-touch-target{left:0;right:50%;transform:translate(50%, -50%)}'],encapsulation:2,changeDetection:0}),n})(),GE=(()=>{class n{}return n.\u0275fac=function(e){return new(e||n)},n.\u0275mod=he({type:n}),n.\u0275inj=ce({imports:[Ne,Ei,Im,Ne]}),n})();function QW(n,t){if(1&n&&(b(0,"mat-radio-button",14),E(1),y()),2&n){const e=t.$implicit;I("value",e.planTypeId)("checked",e.selected),w(1),An(" ",e.description," ")}}function GW(n,t){if(1&n&&(b(0,"mat-option",16),E(1),y()),2&n){const e=t.$implicit;I("value",e.key),w(1),An(" ",e.value," ")}}function zW(n,t){if(1&n&&(b(0,"div",1)(1,"mat-form-field",2)(2,"mat-label"),E(3,"Seleccione una opci\xf3n"),y(),b(4,"mat-select"),J(5,GW,2,2,"mat-option",15),y(),b(6,"mat-icon",4),E(7,"calendar_today"),y()()()),2&n){const e=re();w(5),I("ngForOf",e.listOptionsMonth)}}function YW(n,t){1&n&&(b(0,"div",1)(1,"mat-form-field",2)(2,"mat-label"),E(3,"D\xedas"),y(),q(4,"input",5),b(5,"mat-icon",4),E(6,"today"),y()()())}function XW(n,t){1&n&&(b(0,"div",17),q(1,"app-progress-bar"),y())}class Cl{constructor(t){this.processesService=t,this.listOptionsMonth=[{key:"1",value:"1 Mes"},{key:"2",value:"2 Meses"},{key:"4",value:"4 Meses"},{key:"5",value:"5 Meses"},{key:"6",value:"6 Meses"},{key:"7",value:"7 Meses"},{key:"8",value:"8 Meses"},{key:"9",value:"9 Meses"},{key:"10",value:"10 Meses"},{key:"11",value:"11 Meses"},{key:"12",value:"12 Meses"}],this.plansType=[{planTypeId:1,description:"D\xeda",selected:!1},{planTypeId:2,description:"Mes",selected:!0}],this.loading=!1,this.planTypeSelected=2}ngOnInit(){this.processesService.setPath("Agregar Plan")}clickSave(){this.loading=!0,console.log("incia"),setTimeout(()=>{console.log("termina"),this.loading=!1},4e3)}changePlanType(t){this.planTypeSelected=t.value}}Cl.\u0275fac=function(t){return new(t||Cl)(p(ri))},Cl.\u0275cmp=ee({type:Cl,selectors:[["app-new-plan"]],decls:30,vars:5,consts:[[1,"row",2,"margin-top","12px"],[1,"col-md-6"],["appearance","outline"],["type","text","matInput",""],["matPrefix",""],["type","number","matInput",""],[2,"font-weight","bold"],["aria-label","Select an option",3,"change"],[3,"value","checked",4,"ngFor","ngForOf"],["class","col-md-6",4,"ngIf"],[1,"row"],["class","col-md-12","style","padding-bottom: 8px;",4,"ngIf"],[1,"col-md-12",2,"text-align","end"],["mat-raised-button","",1,"button-sgm-primary",3,"disabled","click"],[3,"value","checked"],[3,"value",4,"ngFor","ngForOf"],[3,"value"],[1,"col-md-12",2,"padding-bottom","8px"]],template:function(t,e){1&t&&(b(0,"div",0)(1,"div",1)(2,"mat-form-field",2)(3,"mat-label"),E(4,"Nombre del Plan"),y(),q(5,"input",3),b(6,"mat-icon",4),E(7,"assignment"),y()()(),b(8,"div",1)(9,"mat-form-field",2)(10,"mat-label"),E(11,"Monto a Pagar"),y(),q(12,"input",5),b(13,"mat-icon",4),E(14,"money"),y()()(),b(15,"div",1)(16,"mat-label",6),E(17,"Tipo de Plan"),y(),q(18,"br"),b(19,"mat-radio-group",7),H("change",function(r){return e.changePlanType(r)}),J(20,QW,2,3,"mat-radio-button",8),y()(),J(21,zW,8,1,"div",9),J(22,YW,7,0,"div",9),y(),b(23,"div",10),J(24,XW,2,0,"div",11),b(25,"div",12)(26,"button",13),H("click",function(){return e.clickSave()}),b(27,"mat-icon"),E(28,"save"),y(),E(29," Guardar "),y()()()),2&t&&(w(20),I("ngForOf",e.plansType),w(1),I("ngIf",2==e.planTypeSelected),w(1),I("ngIf",1==e.planTypeSelected),w(2),I("ngIf",e.loading),w(2),I("disabled",e.loading))},dependencies:[Ur,wi,eu,fs,Xd,uu,hs,Fi,EE,Rm,WE,QE,ys],styles:[".mat-mdc-radio-button.mat-accent[_ngcontent-%COMP%]{--mdc-radio-disabled-selected-icon-color: #000 !important;--mdc-radio-disabled-unselected-icon-color: #000 !important;--mdc-radio-unselected-focus-icon-color: #212121 !important;--mdc-radio-unselected-hover-icon-color: #212121 !important;--mdc-radio-unselected-icon-color: rgba(0, 0, 0, .54) !important;--mdc-radio-unselected-pressed-icon-color: rgba(0, 0, 0, .54) !important;--mdc-radio-selected-focus-icon-color: #02071a !important;--mdc-radio-selected-hover-icon-color: #02071a !important;--mdc-radio-selected-icon-color: #02071a !important;--mdc-radio-selected-pressed-icon-color: #02071a !important;--mat-mdc-radio-ripple-color: #000 !important;--mat-mdc-radio-checked-ripple-color: #02071a !important}"]});class kl{}function ZW(n,t){1&n&&q(0,"app-card-plan",5),2&n&&I("plan",t.$implicit)}kl.\u0275fac=function(t){return new(t||kl)},kl.\u0275cmp=ee({type:kl,selectors:[["app-card-plan"]],inputs:{plan:"plan"},decls:19,vars:4,consts:[[1,"card-plan"],[1,"uno"],[1,"name-plan"],[1,"dos"],[1,"info-label"],[1,"info-data"],[1,"tres"],[1,"cuatro"]],template:function(t,e){1&t&&(b(0,"div",0)(1,"div",1)(2,"span",2),E(3),y()(),b(4,"div",3)(5,"span",4),E(6,"Monto a Pagar: "),y(),b(7,"span",5),E(8),y()(),b(9,"div",6)(10,"span",4),E(11,"Tipo de Plan: "),y(),b(12,"span",5),E(13),y()(),b(14,"div",7)(15,"span",4),E(16,"Duraci\xf3n: "),y(),b(17,"span",5),E(18),y()()()),2&t&&(w(3),gt(e.plan.planName),w(5),An("$",e.plan.amountPay,""),w(5),gt(e.plan.planType),w(5),gt(e.plan.duration))},styles:[".card-plan[_ngcontent-%COMP%]{display:grid;grid-template-columns:repeat(1,1fr);gap:0px;width:250px;padding:8px;border-radius:10px;border-top:solid;border-color:#4168ff;border-width:8px;box-shadow:1px 0 8px 4px #0000003b;-webkit-box-shadow:1px 0px 8px 4px rgba(0,0,0,.23);-moz-box-shadow:1px 0px 8px 4px rgba(0,0,0,.23)}.name-plan[_ngcontent-%COMP%]{font-size:16px;font-weight:700;color:#02071a}.info-label[_ngcontent-%COMP%]{color:#4168ff;font-size:small}.info-data[_ngcontent-%COMP%]{font-size:small}.uno[_ngcontent-%COMP%]{grid-column:1;grid-row:1;display:flex;justify-content:center}.dos[_ngcontent-%COMP%]{grid-column:1;grid-row:2}.tres[_ngcontent-%COMP%]{grid-column:1;grid-row:3}.cuatro[_ngcontent-%COMP%]{grid-column:1;grid-row:4}"]});class xl{constructor(t){this.processesService=t,this.listPlans=[{planId:1,planName:"D\xeda",planType:"D\xedas",duration:1,amountPay:30},{planId:2,planName:"Quincenal",planType:"D\xedas",duration:15,amountPay:200},{planId:3,planName:"Mensual",planType:"Mes",duration:1,amountPay:4503551}]}ngOnInit(){this.processesService.setPath("Planes")}}xl.\u0275fac=function(t){return new(t||xl)(p(ri))},xl.\u0275cmp=ee({type:xl,selectors:[["app-plans"]],decls:8,vars:1,consts:[[1,"row"],[1,"col-md-12",2,"text-align","end"],["mat-raised-button","","routerLink","/new-plan",1,"button-sgm-primary"],[1,"container-cards-plan"],[3,"plan",4,"ngFor","ngForOf"],[3,"plan"]],template:function(t,e){1&t&&(b(0,"div",0)(1,"div",1)(2,"button",2)(3,"mat-icon"),E(4,"add_box"),y(),E(5," Agregar Plan "),y()()(),b(6,"div",3),J(7,ZW,1,1,"app-card-plan",4),y()),2&t&&(w(7),I("ngForOf",e.listPlans))},dependencies:[Ur,ns,hs,Fi,kl],styles:[".container-cards-plan[_ngcontent-%COMP%]{margin-top:8px;display:flex;gap:8px;flex-wrap:wrap;justify-content:center}"]});class Dl{}Dl.\u0275fac=function(t){return new(t||Dl)},Dl.\u0275cmp=ee({type:Dl,selectors:[["app-register"]],decls:34,vars:0,consts:[[1,"container-custom"],[1,"container-form-group"],[2,"text-align","center","font-size","24px","margin-top","0px"],[2,"text-align","center"],["appearance","outline"],["type","email","matInput",""],["matPrefix",""],["type","text","matInput",""],["type","password","matInput",""],[1,"container-actions-buttons"],["mat-raised-button","","color","primary","disabled","false",2,"width","100%"],[2,"text-align","end"],[2,"color","#3f51b5"],["routerLink","/login",1,"link-register"]],template:function(t,e){1&t&&(b(0,"div",0)(1,"div",1)(2,"div")(3,"p",2),E(4,"Simple Gym Manager"),y(),b(5,"p",3),E(6,"Registrarse"),y(),b(7,"mat-form-field",4)(8,"mat-label"),E(9,"Correo"),y(),q(10,"input",5),b(11,"mat-icon",6),E(12,"email"),y()(),b(13,"mat-form-field",4)(14,"mat-label"),E(15,"Usuario"),y(),q(16,"input",7),b(17,"mat-icon",6),E(18,"person_pin"),y()(),b(19,"mat-form-field",4)(20,"mat-label"),E(21,"Contrase\xf1a"),y(),q(22,"input",8),b(23,"mat-icon",6),E(24,"lock"),y()()(),b(25,"div",9)(26,"button",10),E(27," Iniciar Sesi\xf3n "),y()(),b(28,"div",11)(29,"p",12)(30,"span"),E(31,"\xbfYa tienes cuenta?"),y(),b(32,"span",13),E(33,"\xa1Inicia Sesi\xf3n Aqu\xed!"),y()()()()())},dependencies:[ns,eu,fs,Xd,uu,hs,Fi],styles:[".container-custom[_ngcontent-%COMP%]{background-image:url(fondo1.f2758bbdf2fc713a.jpg);background-position:center center;background-repeat:no-repeat;background-attachment:fixed;background-size:cover;background-color:#464646;height:100%;display:flex;align-items:center;justify-content:center;opacity:.9}.container-form-group[_ngcontent-%COMP%]{background-color:#fff;padding:20px;border-radius:10px;margin-left:12px;margin-right:12px;opacity:.85;max-width:500px}.container-actions-buttons[_ngcontent-%COMP%]{display:flex;justify-content:center;gap:8px}.link-register[_ngcontent-%COMP%]{margin-left:8px;font-weight:700;font-size:20px;cursor:pointer}"]});const $W=[{path:"",component:il,children:[{path:"members",component:yl},{path:"new-member",component:Sl},{path:"plans",component:xl},{path:"new-plan",component:Cl},{path:"**",redirectTo:"members",pathMatch:"full"}]},{path:"login",component:ul},{path:"register",component:Dl},{path:"**",redirectTo:"login",pathMatch:"full"}];class vs{}vs.\u0275fac=function(t){return new(t||vs)},vs.\u0275mod=he({type:vs}),vs.\u0275inj=ce({imports:[hx.forRoot($W,{useHash:!0}),hx]});class wl{constructor(){this.title="Simple Gym Manager"}}wl.\u0275fac=function(t){return new(t||wl)},wl.\u0275cmp=ee({type:wl,selectors:[["app-root"]],decls:1,vars:0,template:function(t,e){1&t&&q(0,"router-outlet")},dependencies:[xd]});const ar=new Me(xs),t5={connector:()=>new P};function zE(n,t=t5){const{connector:e}=t;return Le((i,r)=>{const o=e();Vt(n(function e5(n){return new Me(t=>n.subscribe(t))}(o))).subscribe(r),r.add(i.subscribe(o))})}function YE(n,t){return t?e=>Qo(t.pipe(Ue(1),function o5(){return Le((n,t)=>{n.subscribe(Ke(t,xs))})}()),e.pipe(YE(n))):lt((e,i)=>n(e,i).pipe(Ue(1),hd(e)))}const El="Service workers are disabled or not supported by this browser";class yu{constructor(t){if(this.serviceWorker=t,t){const i=Qr(t,"controllerchange").pipe(B(()=>t.controller)),o=Qo(Nr(()=>N(t.controller)),i);this.worker=o.pipe(Re(d=>!!d)),this.registration=this.worker.pipe(Mt(()=>t.getRegistration()));const c=Qr(t,"message").pipe(B(d=>d.data)).pipe(Re(d=>d&&d.type)).pipe(function r5(n){return n?t=>zE(n)(t):t=>function n5(n,t){const e=ye(n)?n:()=>n;return ye(t)?zE(t,{connector:e}):i=>new Lf(i,e)}(new P)(t)}());c.connect(),this.events=c}else this.worker=this.events=this.registration=function a5(n){return Nr(()=>Pr(new Error(n)))}(El)}postMessage(t,e){return this.worker.pipe(Ue(1),nt(i=>{i.postMessage({action:t,...e})})).toPromise().then(()=>{})}postMessageWithOperation(t,e,i){const r=this.waitForOperationCompleted(i),o=this.postMessage(t,e);return Promise.all([o,r]).then(([,s])=>s)}generateNonce(){return Math.round(1e7*Math.random())}eventsOfType(t){let e;return e="string"==typeof t?i=>i.type===t:i=>t.includes(i.type),this.events.pipe(Re(e))}nextEventOfType(t){return this.eventsOfType(t).pipe(Ue(1))}waitForOperationCompleted(t){return this.eventsOfType("OPERATION_COMPLETED").pipe(Re(e=>e.nonce===t),Ue(1),B(e=>{if(void 0!==e.result)return e.result;throw new Error(e.error)})).toPromise()}get isEnabled(){return!!this.serviceWorker}}let l5=(()=>{class n{get isEnabled(){return this.sw.isEnabled}constructor(e){if(this.sw=e,this.subscriptionChanges=new P,!e.isEnabled)return this.messages=ar,this.notificationClicks=ar,void(this.subscription=ar);this.messages=this.sw.eventsOfType("PUSH").pipe(B(r=>r.data)),this.notificationClicks=this.sw.eventsOfType("NOTIFICATION_CLICK").pipe(B(r=>r.data)),this.pushManager=this.sw.registration.pipe(B(r=>r.pushManager));const i=this.pushManager.pipe(Mt(r=>r.getSubscription()));this.subscription=$t(i,this.subscriptionChanges)}requestSubscription(e){if(!this.sw.isEnabled)return Promise.reject(new Error(El));const i={userVisibleOnly:!0};let r=this.decodeBase64(e.serverPublicKey.replace(/_/g,"/").replace(/-/g,"+")),o=new Uint8Array(new ArrayBuffer(r.length));for(let s=0;s<r.length;s++)o[s]=r.charCodeAt(s);return i.applicationServerKey=o,this.pushManager.pipe(Mt(s=>s.subscribe(i)),Ue(1)).toPromise().then(s=>(this.subscriptionChanges.next(s),s))}unsubscribe(){return this.sw.isEnabled?this.subscription.pipe(Ue(1),Mt(i=>{if(null===i)throw new Error("Not subscribed to push notifications.");return i.unsubscribe().then(r=>{if(!r)throw new Error("Unsubscribe failed!");this.subscriptionChanges.next(null)})})).toPromise():Promise.reject(new Error(El))}decodeBase64(e){return atob(e)}}return n.\u0275fac=function(e){return new(e||n)(v(yu))},n.\u0275prov=R({token:n,factory:n.\u0275fac}),n})(),c5=(()=>{class n{get isEnabled(){return this.sw.isEnabled}constructor(e){if(this.sw=e,!e.isEnabled)return this.versionUpdates=ar,this.available=ar,this.activated=ar,void(this.unrecoverable=ar);this.versionUpdates=this.sw.eventsOfType(["VERSION_DETECTED","VERSION_INSTALLATION_FAILED","VERSION_READY","NO_NEW_VERSION_DETECTED"]),this.available=this.versionUpdates.pipe(Re(i=>"VERSION_READY"===i.type),B(i=>({type:"UPDATE_AVAILABLE",current:i.currentVersion,available:i.latestVersion}))),this.activated=this.sw.eventsOfType("UPDATE_ACTIVATED"),this.unrecoverable=this.sw.eventsOfType("UNRECOVERABLE_STATE")}checkForUpdate(){if(!this.sw.isEnabled)return Promise.reject(new Error(El));const e=this.sw.generateNonce();return this.sw.postMessageWithOperation("CHECK_FOR_UPDATES",{nonce:e},e)}activateUpdate(){if(!this.sw.isEnabled)return Promise.reject(new Error(El));const e=this.sw.generateNonce();return this.sw.postMessageWithOperation("ACTIVATE_UPDATE",{nonce:e},e)}}return n.\u0275fac=function(e){return new(e||n)(v(yu))},n.\u0275prov=R({token:n,factory:n.\u0275fac}),n})();class Tg{}const XE=new D("NGSW_REGISTER_SCRIPT");function d5(n,t,e,i){return()=>{if(!Tf(i)||!("serviceWorker"in navigator)||!1===e.enabled)return;let r;if(navigator.serviceWorker.addEventListener("controllerchange",()=>{null!==navigator.serviceWorker.controller&&navigator.serviceWorker.controller.postMessage({action:"INITIALIZE"})}),"function"==typeof e.registrationStrategy)r=e.registrationStrategy();else{const[s,...a]=(e.registrationStrategy||"registerWhenStable:30000").split(":");switch(s){case"registerImmediately":r=N(null);break;case"registerWithDelay":r=ZE(+a[0]||0);break;case"registerWhenStable":r=a[0]?$t($E(n),ZE(+a[0])):$E(n);break;default:throw new Error(`Unknown ServiceWorker registration strategy: ${e.registrationStrategy}`)}}n.get(j).runOutsideAngular(()=>r.pipe(Ue(1)).subscribe(()=>navigator.serviceWorker.register(t,{scope:e.scope}).catch(s=>console.error("Service worker registration failed with:",s))))}}function ZE(n){return N(null).pipe(function s5(n,t=_d){const e=vD(n,t);return YE(()=>e)}(n))}function $E(n){return n.get(Mr).isStable.pipe(Re(e=>e))}function u5(n,t){return new yu(Tf(t)&&!1!==n.enabled?navigator.serviceWorker:void 0)}let h5=(()=>{class n{static register(e,i={}){return{ngModule:n,providers:[{provide:XE,useValue:e},{provide:Tg,useValue:i},{provide:yu,useFactory:u5,deps:[Tg,fa]},{provide:pa,useFactory:d5,deps:[ht,XE,Tg,fa],multi:!0}]}}}return n.\u0275fac=function(e){return new(e||n)},n.\u0275mod=he({type:n}),n.\u0275inj=ce({providers:[l5,c5]}),n})();function eI(n){return new C(3e3,!1)}function Q5(){return typeof window<"u"&&typeof window.document<"u"}function Mg(){return typeof process<"u"&&"[object process]"==={}.toString.call(process)}function lr(n){switch(n.length){case 0:return new nl;case 1:return n[0];default:return new ED(n)}}function tI(n,t,e,i,r=new Map,o=new Map){const s=[],a=[];let l=-1,c=null;if(i.forEach(d=>{const u=d.get("offset"),h=u==l,f=h&&c||new Map;d.forEach((m,g)=>{let A=g,k=m;if("offset"!==g)switch(A=t.normalizePropertyName(A,s),k){case"!":k=r.get(g);break;case Vi:k=o.get(g);break;default:k=t.normalizeStyleValue(g,A,k,s)}f.set(A,k)}),h||a.push(f),c=f,l=u}),s.length)throw function U5(n){return new C(3502,!1)}();return a}function Og(n,t,e,i){switch(t){case"start":n.onStart(()=>i(e&&Fg(e,"start",n)));break;case"done":n.onDone(()=>i(e&&Fg(e,"done",n)));break;case"destroy":n.onDestroy(()=>i(e&&Fg(e,"destroy",n)))}}function Fg(n,t,e){const o=Vg(n.element,n.triggerName,n.fromState,n.toState,t||n.phaseName,e.totalTime??n.totalTime,!!e.disabled),s=n._data;return null!=s&&(o._data=s),o}function Vg(n,t,e,i,r="",o=0,s){return{element:n,triggerName:t,fromState:e,toState:i,phaseName:r,totalTime:o,disabled:!!s}}function un(n,t,e){let i=n.get(t);return i||n.set(t,i=e),i}function nI(n){const t=n.indexOf(":");return[n.substring(1,t),n.slice(t+1)]}let Ug=(n,t)=>!1,iI=(n,t,e)=>[],rI=null;function Ng(n){const t=n.parentNode||n.host;return t===rI?null:t}(Mg()||typeof Element<"u")&&(Q5()?(rI=(()=>document.documentElement)(),Ug=(n,t)=>{for(;t;){if(t===n)return!0;t=Ng(t)}return!1}):Ug=(n,t)=>n.contains(t),iI=(n,t,e)=>{if(e)return Array.from(n.querySelectorAll(t));const i=n.querySelector(t);return i?[i]:[]});let Zr=null,oI=!1;const sI=Ug,aI=iI;let lI=(()=>{class n{validateStyleProperty(e){return function z5(n){Zr||(Zr=function Y5(){return typeof document<"u"?document.body:null}()||{},oI=!!Zr.style&&"WebkitAppearance"in Zr.style);let t=!0;return Zr.style&&!function G5(n){return"ebkit"==n.substring(1,6)}(n)&&(t=n in Zr.style,!t&&oI&&(t="Webkit"+n.charAt(0).toUpperCase()+n.slice(1)in Zr.style)),t}(e)}matchesElement(e,i){return!1}containsElement(e,i){return sI(e,i)}getParentElement(e){return Ng(e)}query(e,i,r){return aI(e,i,r)}computeStyle(e,i,r){return r||""}animate(e,i,r,o,s,a=[],l){return new nl(r,o)}}return n.\u0275fac=function(e){return new(e||n)},n.\u0275prov=R({token:n,factory:n.\u0275fac}),n})(),Pg=(()=>{class n{}return n.NOOP=new lI,n})();const _g="ng-enter",vu="ng-leave",Au="ng-trigger",Su=".ng-trigger",dI="ng-animating",Bg=".ng-animating";function Ui(n){if("number"==typeof n)return n;const t=n.match(/^(-?[\.\d]+)(m?s)/);return!t||t.length<2?0:jg(parseFloat(t[1]),t[2])}function jg(n,t){return"s"===t?1e3*n:n}function Cu(n,t,e){return n.hasOwnProperty("duration")?n:function $5(n,t,e){let r,o=0,s="";if("string"==typeof n){const a=n.match(/^(-?[\.\d]+)(m?s)(?:\s+(-?[\.\d]+)(m?s))?(?:\s+([-a-z]+(?:\(.+?\))?))?$/i);if(null===a)return t.push(eI()),{duration:0,delay:0,easing:""};r=jg(parseFloat(a[1]),a[2]);const l=a[3];null!=l&&(o=jg(parseFloat(l),a[4]));const c=a[5];c&&(s=c)}else r=n;if(!e){let a=!1,l=t.length;r<0&&(t.push(function p5(){return new C(3100,!1)}()),a=!0),o<0&&(t.push(function f5(){return new C(3101,!1)}()),a=!0),a&&t.splice(l,0,eI())}return{duration:r,delay:o,easing:s}}(n,t,e)}function Il(n,t={}){return Object.keys(n).forEach(e=>{t[e]=n[e]}),t}function uI(n){const t=new Map;return Object.keys(n).forEach(e=>{t.set(e,n[e])}),t}function cr(n,t=new Map,e){if(e)for(let[i,r]of e)t.set(i,r);for(let[i,r]of n)t.set(i,r);return t}function pI(n,t,e){return e?t+":"+e+";":""}function fI(n){let t="";for(let e=0;e<n.style.length;e++){const i=n.style.item(e);t+=pI(0,i,n.style.getPropertyValue(i))}for(const e in n.style)n.style.hasOwnProperty(e)&&!e.startsWith("_")&&(t+=pI(0,i8(e),n.style[e]));n.setAttribute("style",t)}function li(n,t,e){n.style&&(t.forEach((i,r)=>{const o=Kg(r);e&&!e.has(r)&&e.set(r,n.style[o]),n.style[o]=i}),Mg()&&fI(n))}function $r(n,t){n.style&&(t.forEach((e,i)=>{const r=Kg(i);n.style[r]=""}),Mg()&&fI(n))}function Rl(n){return Array.isArray(n)?1==n.length?n[0]:xD(n):n}const qg=new RegExp("{{\\s*(.+?)\\s*}}","g");function mI(n){let t=[];if("string"==typeof n){let e;for(;e=qg.exec(n);)t.push(e[1]);qg.lastIndex=0}return t}function Tl(n,t,e){const i=n.toString(),r=i.replace(qg,(o,s)=>{let a=t[s];return null==a&&(e.push(function g5(n){return new C(3003,!1)}()),a=""),a.toString()});return r==i?n:r}function ku(n){const t=[];let e=n.next();for(;!e.done;)t.push(e.value),e=n.next();return t}const n8=/-+([a-z0-9])/g;function Kg(n){return n.replace(n8,(...t)=>t[1].toUpperCase())}function i8(n){return n.replace(/([a-z])([A-Z])/g,"$1-$2").toLowerCase()}function hn(n,t,e){switch(t.type){case 7:return n.visitTrigger(t,e);case 0:return n.visitState(t,e);case 1:return n.visitTransition(t,e);case 2:return n.visitSequence(t,e);case 3:return n.visitGroup(t,e);case 4:return n.visitAnimate(t,e);case 5:return n.visitKeyframes(t,e);case 6:return n.visitStyle(t,e);case 8:return n.visitReference(t,e);case 9:return n.visitAnimateChild(t,e);case 10:return n.visitAnimateRef(t,e);case 11:return n.visitQuery(t,e);case 12:return n.visitStagger(t,e);default:throw function b5(n){return new C(3004,!1)}()}}function gI(n,t){return window.getComputedStyle(n)[t]}function c8(n,t){const e=[];return"string"==typeof n?n.split(/\s*,\s*/).forEach(i=>function d8(n,t,e){if(":"==n[0]){const l=function u8(n,t){switch(n){case":enter":return"void => *";case":leave":return"* => void";case":increment":return(e,i)=>parseFloat(i)>parseFloat(e);case":decrement":return(e,i)=>parseFloat(i)<parseFloat(e);default:return t.push(function M5(n){return new C(3016,!1)}()),"* => *"}}(n,e);if("function"==typeof l)return void t.push(l);n=l}const i=n.match(/^(\*|[-\w]+)\s*(<?[=-]>)\s*(\*|[-\w]+)$/);if(null==i||i.length<4)return e.push(function T5(n){return new C(3015,!1)}()),t;const r=i[1],o=i[2],s=i[3];t.push(bI(r,s));"<"==o[0]&&!("*"==r&&"*"==s)&&t.push(bI(s,r))}(i,e,t)):e.push(n),e}const Eu=new Set(["true","1"]),Iu=new Set(["false","0"]);function bI(n,t){const e=Eu.has(n)||Iu.has(n),i=Eu.has(t)||Iu.has(t);return(r,o)=>{let s="*"==n||n==r,a="*"==t||t==o;return!s&&e&&"boolean"==typeof r&&(s=r?Eu.has(n):Iu.has(n)),!a&&i&&"boolean"==typeof o&&(a=o?Eu.has(t):Iu.has(t)),s&&a}}const h8=new RegExp("s*:selfs*,?","g");function Hg(n,t,e,i){return new p8(n).build(t,e,i)}class p8{constructor(t){this._driver=t}build(t,e,i){const r=new g8(e);return this._resetContextStyleTimingState(r),hn(this,Rl(t),r)}_resetContextStyleTimingState(t){t.currentQuerySelector="",t.collectedStyles=new Map,t.collectedStyles.set("",new Map),t.currentTime=0}visitTrigger(t,e){let i=e.queryCount=0,r=e.depCount=0;const o=[],s=[];return"@"==t.name.charAt(0)&&e.errors.push(function v5(){return new C(3006,!1)}()),t.definitions.forEach(a=>{if(this._resetContextStyleTimingState(e),0==a.type){const l=a,c=l.name;c.toString().split(/\s*,\s*/).forEach(d=>{l.name=d,o.push(this.visitState(l,e))}),l.name=c}else if(1==a.type){const l=this.visitTransition(a,e);i+=l.queryCount,r+=l.depCount,s.push(l)}else e.errors.push(function A5(){return new C(3007,!1)}())}),{type:7,name:t.name,states:o,transitions:s,queryCount:i,depCount:r,options:null}}visitState(t,e){const i=this.visitStyle(t.styles,e),r=t.options&&t.options.params||null;if(i.containsDynamicStyles){const o=new Set,s=r||{};i.styles.forEach(a=>{a instanceof Map&&a.forEach(l=>{mI(l).forEach(c=>{s.hasOwnProperty(c)||o.add(c)})})}),o.size&&(ku(o.values()),e.errors.push(function S5(n,t){return new C(3008,!1)}()))}return{type:0,name:t.name,style:i,options:r?{params:r}:null}}visitTransition(t,e){e.queryCount=0,e.depCount=0;const i=hn(this,Rl(t.animation),e);return{type:1,matchers:c8(t.expr,e.errors),animation:i,queryCount:e.queryCount,depCount:e.depCount,options:eo(t.options)}}visitSequence(t,e){return{type:2,steps:t.steps.map(i=>hn(this,i,e)),options:eo(t.options)}}visitGroup(t,e){const i=e.currentTime;let r=0;const o=t.steps.map(s=>{e.currentTime=i;const a=hn(this,s,e);return r=Math.max(r,e.currentTime),a});return e.currentTime=r,{type:3,steps:o,options:eo(t.options)}}visitAnimate(t,e){const i=function y8(n,t){if(n.hasOwnProperty("duration"))return n;if("number"==typeof n)return Lg(Cu(n,t).duration,0,"");const e=n;if(e.split(/\s+/).some(o=>"{"==o.charAt(0)&&"{"==o.charAt(1))){const o=Lg(0,0,"");return o.dynamic=!0,o.strValue=e,o}const r=Cu(e,t);return Lg(r.duration,r.delay,r.easing)}(t.timings,e.errors);e.currentAnimateTimings=i;let r,o=t.styles?t.styles:$e({});if(5==o.type)r=this.visitKeyframes(o,e);else{let s=t.styles,a=!1;if(!s){a=!0;const c={};i.easing&&(c.easing=i.easing),s=$e(c)}e.currentTime+=i.duration+i.delay;const l=this.visitStyle(s,e);l.isEmptyStep=a,r=l}return e.currentAnimateTimings=null,{type:4,timings:i,style:r,options:null}}visitStyle(t,e){const i=this._makeStyleAst(t,e);return this._validateStyleAst(i,e),i}_makeStyleAst(t,e){const i=[],r=Array.isArray(t.styles)?t.styles:[t.styles];for(let a of r)"string"==typeof a?a===Vi?i.push(a):e.errors.push(new C(3002,!1)):i.push(uI(a));let o=!1,s=null;return i.forEach(a=>{if(a instanceof Map&&(a.has("easing")&&(s=a.get("easing"),a.delete("easing")),!o))for(let l of a.values())if(l.toString().indexOf("{{")>=0){o=!0;break}}),{type:6,styles:i,easing:s,offset:t.offset,containsDynamicStyles:o,options:null}}_validateStyleAst(t,e){const i=e.currentAnimateTimings;let r=e.currentTime,o=e.currentTime;i&&o>0&&(o-=i.duration+i.delay),t.styles.forEach(s=>{"string"!=typeof s&&s.forEach((a,l)=>{const c=e.collectedStyles.get(e.currentQuerySelector),d=c.get(l);let u=!0;d&&(o!=r&&o>=d.startTime&&r<=d.endTime&&(e.errors.push(function k5(n,t,e,i,r){return new C(3010,!1)}()),u=!1),o=d.startTime),u&&c.set(l,{startTime:o,endTime:r}),e.options&&function t8(n,t,e){const i=t.params||{},r=mI(n);r.length&&r.forEach(o=>{i.hasOwnProperty(o)||e.push(function m5(n){return new C(3001,!1)}())})}(a,e.options,e.errors)})})}visitKeyframes(t,e){const i={type:5,styles:[],options:null};if(!e.currentAnimateTimings)return e.errors.push(function x5(){return new C(3011,!1)}()),i;let o=0;const s=[];let a=!1,l=!1,c=0;const d=t.steps.map(k=>{const T=this._makeStyleAst(k,e);let S=null!=T.offset?T.offset:function b8(n){if("string"==typeof n)return null;let t=null;if(Array.isArray(n))n.forEach(e=>{if(e instanceof Map&&e.has("offset")){const i=e;t=parseFloat(i.get("offset")),i.delete("offset")}});else if(n instanceof Map&&n.has("offset")){const e=n;t=parseFloat(e.get("offset")),e.delete("offset")}return t}(T.styles),U=0;return null!=S&&(o++,U=T.offset=S),l=l||U<0||U>1,a=a||U<c,c=U,s.push(U),T});l&&e.errors.push(function D5(){return new C(3012,!1)}()),a&&e.errors.push(function w5(){return new C(3200,!1)}());const u=t.steps.length;let h=0;o>0&&o<u?e.errors.push(function E5(){return new C(3202,!1)}()):0==o&&(h=1/(u-1));const f=u-1,m=e.currentTime,g=e.currentAnimateTimings,A=g.duration;return d.forEach((k,T)=>{const S=h>0?T==f?1:h*T:s[T],U=S*A;e.currentTime=m+g.delay+U,g.duration=U,this._validateStyleAst(k,e),k.offset=S,i.styles.push(k)}),i}visitReference(t,e){return{type:8,animation:hn(this,Rl(t.animation),e),options:eo(t.options)}}visitAnimateChild(t,e){return e.depCount++,{type:9,options:eo(t.options)}}visitAnimateRef(t,e){return{type:10,animation:this.visitReference(t.animation,e),options:eo(t.options)}}visitQuery(t,e){const i=e.currentQuerySelector,r=t.options||{};e.queryCount++,e.currentQuery=t;const[o,s]=function f8(n){const t=!!n.split(/\s*,\s*/).find(e=>":self"==e);return t&&(n=n.replace(h8,"")),n=n.replace(/@\*/g,Su).replace(/@\w+/g,e=>Su+"-"+e.slice(1)).replace(/:animating/g,Bg),[n,t]}(t.selector);e.currentQuerySelector=i.length?i+" "+o:o,un(e.collectedStyles,e.currentQuerySelector,new Map);const a=hn(this,Rl(t.animation),e);return e.currentQuery=null,e.currentQuerySelector=i,{type:11,selector:o,limit:r.limit||0,optional:!!r.optional,includeSelf:s,animation:a,originalSelector:t.selector,options:eo(t.options)}}visitStagger(t,e){e.currentQuery||e.errors.push(function I5(){return new C(3013,!1)}());const i="full"===t.timings?{duration:0,delay:0,easing:"full"}:Cu(t.timings,e.errors,!0);return{type:12,animation:hn(this,Rl(t.animation),e),timings:i,options:null}}}class g8{constructor(t){this.errors=t,this.queryCount=0,this.depCount=0,this.currentTransition=null,this.currentQuery=null,this.currentQuerySelector=null,this.currentAnimateTimings=null,this.currentTime=0,this.collectedStyles=new Map,this.options=null,this.unsupportedCSSPropertiesFound=new Set}}function eo(n){return n?(n=Il(n)).params&&(n.params=function m8(n){return n?Il(n):null}(n.params)):n={},n}function Lg(n,t,e){return{duration:n,delay:t,easing:e}}function Jg(n,t,e,i,r,o,s=null,a=!1){return{type:1,element:n,keyframes:t,preStyleProps:e,postStyleProps:i,duration:r,delay:o,totalTime:r+o,easing:s,subTimeline:a}}class Ru{constructor(){this._map=new Map}get(t){return this._map.get(t)||[]}append(t,e){let i=this._map.get(t);i||this._map.set(t,i=[]),i.push(...e)}has(t){return this._map.has(t)}clear(){this._map.clear()}}const S8=new RegExp(":enter","g"),k8=new RegExp(":leave","g");function Wg(n,t,e,i,r,o=new Map,s=new Map,a,l,c=[]){return(new x8).buildKeyframes(n,t,e,i,r,o,s,a,l,c)}class x8{buildKeyframes(t,e,i,r,o,s,a,l,c,d=[]){c=c||new Ru;const u=new Qg(t,e,c,r,o,d,[]);u.options=l;const h=l.delay?Ui(l.delay):0;u.currentTimeline.delayNextStep(h),u.currentTimeline.setStyles([s],null,u.errors,l),hn(this,i,u);const f=u.timelines.filter(m=>m.containsAnimation());if(f.length&&a.size){let m;for(let g=f.length-1;g>=0;g--){const A=f[g];if(A.element===e){m=A;break}}m&&!m.allowOnlyTimelineStyles()&&m.setStyles([a],null,u.errors,l)}return f.length?f.map(m=>m.buildKeyframes()):[Jg(e,[],[],[],0,h,"",!1)]}visitTrigger(t,e){}visitState(t,e){}visitTransition(t,e){}visitAnimateChild(t,e){const i=e.subInstructions.get(e.element);if(i){const r=e.createSubContext(t.options),o=e.currentTimeline.currentTime,s=this._visitSubInstructions(i,r,r.options);o!=s&&e.transformIntoNewTimeline(s)}e.previousNode=t}visitAnimateRef(t,e){const i=e.createSubContext(t.options);i.transformIntoNewTimeline(),this._applyAnimationRefDelays([t.options,t.animation.options],e,i),this.visitReference(t.animation,i),e.transformIntoNewTimeline(i.currentTimeline.currentTime),e.previousNode=t}_applyAnimationRefDelays(t,e,i){for(const r of t){const o=r?.delay;if(o){const s="number"==typeof o?o:Ui(Tl(o,r?.params??{},e.errors));i.delayNextStep(s)}}}_visitSubInstructions(t,e,i){let o=e.currentTimeline.currentTime;const s=null!=i.duration?Ui(i.duration):null,a=null!=i.delay?Ui(i.delay):null;return 0!==s&&t.forEach(l=>{const c=e.appendInstructionToTimeline(l,s,a);o=Math.max(o,c.duration+c.delay)}),o}visitReference(t,e){e.updateOptions(t.options,!0),hn(this,t.animation,e),e.previousNode=t}visitSequence(t,e){const i=e.subContextCount;let r=e;const o=t.options;if(o&&(o.params||o.delay)&&(r=e.createSubContext(o),r.transformIntoNewTimeline(),null!=o.delay)){6==r.previousNode.type&&(r.currentTimeline.snapshotCurrentStyles(),r.previousNode=Tu);const s=Ui(o.delay);r.delayNextStep(s)}t.steps.length&&(t.steps.forEach(s=>hn(this,s,r)),r.currentTimeline.applyStylesToKeyframe(),r.subContextCount>i&&r.transformIntoNewTimeline()),e.previousNode=t}visitGroup(t,e){const i=[];let r=e.currentTimeline.currentTime;const o=t.options&&t.options.delay?Ui(t.options.delay):0;t.steps.forEach(s=>{const a=e.createSubContext(t.options);o&&a.delayNextStep(o),hn(this,s,a),r=Math.max(r,a.currentTimeline.currentTime),i.push(a.currentTimeline)}),i.forEach(s=>e.currentTimeline.mergeTimelineCollectedStyles(s)),e.transformIntoNewTimeline(r),e.previousNode=t}_visitTiming(t,e){if(t.dynamic){const i=t.strValue;return Cu(e.params?Tl(i,e.params,e.errors):i,e.errors)}return{duration:t.duration,delay:t.delay,easing:t.easing}}visitAnimate(t,e){const i=e.currentAnimateTimings=this._visitTiming(t.timings,e),r=e.currentTimeline;i.delay&&(e.incrementTime(i.delay),r.snapshotCurrentStyles());const o=t.style;5==o.type?this.visitKeyframes(o,e):(e.incrementTime(i.duration),this.visitStyle(o,e),r.applyStylesToKeyframe()),e.currentAnimateTimings=null,e.previousNode=t}visitStyle(t,e){const i=e.currentTimeline,r=e.currentAnimateTimings;!r&&i.hasCurrentStyleProperties()&&i.forwardFrame();const o=r&&r.easing||t.easing;t.isEmptyStep?i.applyEmptyStep(o):i.setStyles(t.styles,o,e.errors,e.options),e.previousNode=t}visitKeyframes(t,e){const i=e.currentAnimateTimings,r=e.currentTimeline.duration,o=i.duration,a=e.createSubContext().currentTimeline;a.easing=i.easing,t.styles.forEach(l=>{a.forwardTime((l.offset||0)*o),a.setStyles(l.styles,l.easing,e.errors,e.options),a.applyStylesToKeyframe()}),e.currentTimeline.mergeTimelineCollectedStyles(a),e.transformIntoNewTimeline(r+o),e.previousNode=t}visitQuery(t,e){const i=e.currentTimeline.currentTime,r=t.options||{},o=r.delay?Ui(r.delay):0;o&&(6===e.previousNode.type||0==i&&e.currentTimeline.hasCurrentStyleProperties())&&(e.currentTimeline.snapshotCurrentStyles(),e.previousNode=Tu);let s=i;const a=e.invokeQuery(t.selector,t.originalSelector,t.limit,t.includeSelf,!!r.optional,e.errors);e.currentQueryTotal=a.length;let l=null;a.forEach((c,d)=>{e.currentQueryIndex=d;const u=e.createSubContext(t.options,c);o&&u.delayNextStep(o),c===e.element&&(l=u.currentTimeline),hn(this,t.animation,u),u.currentTimeline.applyStylesToKeyframe(),s=Math.max(s,u.currentTimeline.currentTime)}),e.currentQueryIndex=0,e.currentQueryTotal=0,e.transformIntoNewTimeline(s),l&&(e.currentTimeline.mergeTimelineCollectedStyles(l),e.currentTimeline.snapshotCurrentStyles()),e.previousNode=t}visitStagger(t,e){const i=e.parentContext,r=e.currentTimeline,o=t.timings,s=Math.abs(o.duration),a=s*(e.currentQueryTotal-1);let l=s*e.currentQueryIndex;switch(o.duration<0?"reverse":o.easing){case"reverse":l=a-l;break;case"full":l=i.currentStaggerTime}const d=e.currentTimeline;l&&d.delayNextStep(l);const u=d.currentTime;hn(this,t.animation,e),e.previousNode=t,i.currentStaggerTime=r.currentTime-u+(r.startTime-i.currentTimeline.startTime)}}const Tu={};class Qg{constructor(t,e,i,r,o,s,a,l){this._driver=t,this.element=e,this.subInstructions=i,this._enterClassName=r,this._leaveClassName=o,this.errors=s,this.timelines=a,this.parentContext=null,this.currentAnimateTimings=null,this.previousNode=Tu,this.subContextCount=0,this.options={},this.currentQueryIndex=0,this.currentQueryTotal=0,this.currentStaggerTime=0,this.currentTimeline=l||new Mu(this._driver,e,0),a.push(this.currentTimeline)}get params(){return this.options.params}updateOptions(t,e){if(!t)return;const i=t;let r=this.options;null!=i.duration&&(r.duration=Ui(i.duration)),null!=i.delay&&(r.delay=Ui(i.delay));const o=i.params;if(o){let s=r.params;s||(s=this.options.params={}),Object.keys(o).forEach(a=>{(!e||!s.hasOwnProperty(a))&&(s[a]=Tl(o[a],s,this.errors))})}}_copyOptions(){const t={};if(this.options){const e=this.options.params;if(e){const i=t.params={};Object.keys(e).forEach(r=>{i[r]=e[r]})}}return t}createSubContext(t=null,e,i){const r=e||this.element,o=new Qg(this._driver,r,this.subInstructions,this._enterClassName,this._leaveClassName,this.errors,this.timelines,this.currentTimeline.fork(r,i||0));return o.previousNode=this.previousNode,o.currentAnimateTimings=this.currentAnimateTimings,o.options=this._copyOptions(),o.updateOptions(t),o.currentQueryIndex=this.currentQueryIndex,o.currentQueryTotal=this.currentQueryTotal,o.parentContext=this,this.subContextCount++,o}transformIntoNewTimeline(t){return this.previousNode=Tu,this.currentTimeline=this.currentTimeline.fork(this.element,t),this.timelines.push(this.currentTimeline),this.currentTimeline}appendInstructionToTimeline(t,e,i){const r={duration:e??t.duration,delay:this.currentTimeline.currentTime+(i??0)+t.delay,easing:""},o=new D8(this._driver,t.element,t.keyframes,t.preStyleProps,t.postStyleProps,r,t.stretchStartingKeyframe);return this.timelines.push(o),r}incrementTime(t){this.currentTimeline.forwardTime(this.currentTimeline.duration+t)}delayNextStep(t){t>0&&this.currentTimeline.delayNextStep(t)}invokeQuery(t,e,i,r,o,s){let a=[];if(r&&a.push(this.element),t.length>0){t=(t=t.replace(S8,"."+this._enterClassName)).replace(k8,"."+this._leaveClassName);let c=this._driver.query(this.element,t,1!=i);0!==i&&(c=i<0?c.slice(c.length+i,c.length):c.slice(0,i)),a.push(...c)}return!o&&0==a.length&&s.push(function R5(n){return new C(3014,!1)}()),a}}class Mu{constructor(t,e,i,r){this._driver=t,this.element=e,this.startTime=i,this._elementTimelineStylesLookup=r,this.duration=0,this._previousKeyframe=new Map,this._currentKeyframe=new Map,this._keyframes=new Map,this._styleSummary=new Map,this._localTimelineStyles=new Map,this._pendingStyles=new Map,this._backFill=new Map,this._currentEmptyStepKeyframe=null,this._elementTimelineStylesLookup||(this._elementTimelineStylesLookup=new Map),this._globalTimelineStyles=this._elementTimelineStylesLookup.get(e),this._globalTimelineStyles||(this._globalTimelineStyles=this._localTimelineStyles,this._elementTimelineStylesLookup.set(e,this._localTimelineStyles)),this._loadKeyframe()}containsAnimation(){switch(this._keyframes.size){case 0:return!1;case 1:return this.hasCurrentStyleProperties();default:return!0}}hasCurrentStyleProperties(){return this._currentKeyframe.size>0}get currentTime(){return this.startTime+this.duration}delayNextStep(t){const e=1===this._keyframes.size&&this._pendingStyles.size;this.duration||e?(this.forwardTime(this.currentTime+t),e&&this.snapshotCurrentStyles()):this.startTime+=t}fork(t,e){return this.applyStylesToKeyframe(),new Mu(this._driver,t,e||this.currentTime,this._elementTimelineStylesLookup)}_loadKeyframe(){this._currentKeyframe&&(this._previousKeyframe=this._currentKeyframe),this._currentKeyframe=this._keyframes.get(this.duration),this._currentKeyframe||(this._currentKeyframe=new Map,this._keyframes.set(this.duration,this._currentKeyframe))}forwardFrame(){this.duration+=1,this._loadKeyframe()}forwardTime(t){this.applyStylesToKeyframe(),this.duration=t,this._loadKeyframe()}_updateStyle(t,e){this._localTimelineStyles.set(t,e),this._globalTimelineStyles.set(t,e),this._styleSummary.set(t,{time:this.currentTime,value:e})}allowOnlyTimelineStyles(){return this._currentEmptyStepKeyframe!==this._currentKeyframe}applyEmptyStep(t){t&&this._previousKeyframe.set("easing",t);for(let[e,i]of this._globalTimelineStyles)this._backFill.set(e,i||Vi),this._currentKeyframe.set(e,Vi);this._currentEmptyStepKeyframe=this._currentKeyframe}setStyles(t,e,i,r){e&&this._previousKeyframe.set("easing",e);const o=r&&r.params||{},s=function w8(n,t){const e=new Map;let i;return n.forEach(r=>{if("*"===r){i=i||t.keys();for(let o of i)e.set(o,Vi)}else cr(r,e)}),e}(t,this._globalTimelineStyles);for(let[a,l]of s){const c=Tl(l,o,i);this._pendingStyles.set(a,c),this._localTimelineStyles.has(a)||this._backFill.set(a,this._globalTimelineStyles.get(a)??Vi),this._updateStyle(a,c)}}applyStylesToKeyframe(){0!=this._pendingStyles.size&&(this._pendingStyles.forEach((t,e)=>{this._currentKeyframe.set(e,t)}),this._pendingStyles.clear(),this._localTimelineStyles.forEach((t,e)=>{this._currentKeyframe.has(e)||this._currentKeyframe.set(e,t)}))}snapshotCurrentStyles(){for(let[t,e]of this._localTimelineStyles)this._pendingStyles.set(t,e),this._updateStyle(t,e)}getFinalKeyframe(){return this._keyframes.get(this.duration)}get properties(){const t=[];for(let e in this._currentKeyframe)t.push(e);return t}mergeTimelineCollectedStyles(t){t._styleSummary.forEach((e,i)=>{const r=this._styleSummary.get(i);(!r||e.time>r.time)&&this._updateStyle(i,e.value)})}buildKeyframes(){this.applyStylesToKeyframe();const t=new Set,e=new Set,i=1===this._keyframes.size&&0===this.duration;let r=[];this._keyframes.forEach((a,l)=>{const c=cr(a,new Map,this._backFill);c.forEach((d,u)=>{"!"===d?t.add(u):d===Vi&&e.add(u)}),i||c.set("offset",l/this.duration),r.push(c)});const o=t.size?ku(t.values()):[],s=e.size?ku(e.values()):[];if(i){const a=r[0],l=new Map(a);a.set("offset",0),l.set("offset",1),r=[a,l]}return Jg(this.element,r,o,s,this.duration,this.startTime,this.easing,!1)}}class D8 extends Mu{constructor(t,e,i,r,o,s,a=!1){super(t,e,s.delay),this.keyframes=i,this.preStyleProps=r,this.postStyleProps=o,this._stretchStartingKeyframe=a,this.timings={duration:s.duration,delay:s.delay,easing:s.easing}}containsAnimation(){return this.keyframes.length>1}buildKeyframes(){let t=this.keyframes,{delay:e,duration:i,easing:r}=this.timings;if(this._stretchStartingKeyframe&&e){const o=[],s=i+e,a=e/s,l=cr(t[0]);l.set("offset",0),o.push(l);const c=cr(t[0]);c.set("offset",AI(a)),o.push(c);const d=t.length-1;for(let u=1;u<=d;u++){let h=cr(t[u]);const f=h.get("offset");h.set("offset",AI((e+f*i)/s)),o.push(h)}i=s,e=0,r="",t=o}return Jg(this.element,t,this.preStyleProps,this.postStyleProps,i,e,r,!0)}}function AI(n,t=3){const e=Math.pow(10,t-1);return Math.round(n*e)/e}class Gg{}const E8=new Set(["width","height","minWidth","minHeight","maxWidth","maxHeight","left","top","bottom","right","fontSize","outlineWidth","outlineOffset","paddingTop","paddingLeft","paddingBottom","paddingRight","marginTop","marginLeft","marginBottom","marginRight","borderRadius","borderWidth","borderTopWidth","borderLeftWidth","borderRightWidth","borderBottomWidth","textIndent","perspective"]);class I8 extends Gg{normalizePropertyName(t,e){return Kg(t)}normalizeStyleValue(t,e,i,r){let o="";const s=i.toString().trim();if(E8.has(e)&&0!==i&&"0"!==i)if("number"==typeof i)o="px";else{const a=i.match(/^[+-]?[\d\.]+([a-z]*)$/);a&&0==a[1].length&&r.push(function y5(n,t){return new C(3005,!1)}())}return s+o}}function SI(n,t,e,i,r,o,s,a,l,c,d,u,h){return{type:0,element:n,triggerName:t,isRemovalTransition:r,fromState:e,fromStyles:o,toState:i,toStyles:s,timelines:a,queriedElements:l,preStyleProps:c,postStyleProps:d,totalTime:u,errors:h}}const zg={};class CI{constructor(t,e,i){this._triggerName=t,this.ast=e,this._stateStyles=i}match(t,e,i,r){return function R8(n,t,e,i,r){return n.some(o=>o(t,e,i,r))}(this.ast.matchers,t,e,i,r)}buildStyles(t,e,i){let r=this._stateStyles.get("*");return void 0!==t&&(r=this._stateStyles.get(t?.toString())||r),r?r.buildStyles(e,i):new Map}build(t,e,i,r,o,s,a,l,c,d){const u=[],h=this.ast.options&&this.ast.options.params||zg,m=this.buildStyles(i,a&&a.params||zg,u),g=l&&l.params||zg,A=this.buildStyles(r,g,u),k=new Set,T=new Map,S=new Map,U="void"===r,Se={params:T8(g,h),delay:this.ast.options?.delay},xe=d?[]:Wg(t,e,this.ast.animation,o,s,m,A,Se,c,u);let Ot=0;if(xe.forEach(Pi=>{Ot=Math.max(Pi.duration+Pi.delay,Ot)}),u.length)return SI(e,this._triggerName,i,r,U,m,A,[],[],T,S,Ot,u);xe.forEach(Pi=>{const _i=Pi.element,PI=un(T,_i,new Set);Pi.preStyleProps.forEach(to=>PI.add(to));const Ol=un(S,_i,new Set);Pi.postStyleProps.forEach(to=>Ol.add(to)),_i!==e&&k.add(_i)});const Ni=ku(k.values());return SI(e,this._triggerName,i,r,U,m,A,xe,Ni,T,S,Ot)}}function T8(n,t){const e=Il(t);for(const i in n)n.hasOwnProperty(i)&&null!=n[i]&&(e[i]=n[i]);return e}class M8{constructor(t,e,i){this.styles=t,this.defaultParams=e,this.normalizer=i}buildStyles(t,e){const i=new Map,r=Il(this.defaultParams);return Object.keys(t).forEach(o=>{const s=t[o];null!==s&&(r[o]=s)}),this.styles.styles.forEach(o=>{"string"!=typeof o&&o.forEach((s,a)=>{s&&(s=Tl(s,r,e));const l=this.normalizer.normalizePropertyName(a,e);s=this.normalizer.normalizeStyleValue(a,l,s,e),i.set(a,s)})}),i}}class F8{constructor(t,e,i){this.name=t,this.ast=e,this._normalizer=i,this.transitionFactories=[],this.states=new Map,e.states.forEach(r=>{this.states.set(r.name,new M8(r.style,r.options&&r.options.params||{},i))}),kI(this.states,"true","1"),kI(this.states,"false","0"),e.transitions.forEach(r=>{this.transitionFactories.push(new CI(t,r,this.states))}),this.fallbackTransition=function V8(n,t,e){return new CI(n,{type:1,animation:{type:2,steps:[],options:null},matchers:[(s,a)=>!0],options:null,queryCount:0,depCount:0},t)}(t,this.states)}get containsQueries(){return this.ast.queryCount>0}matchTransition(t,e,i,r){return this.transitionFactories.find(s=>s.match(t,e,i,r))||null}matchStyles(t,e,i){return this.fallbackTransition.buildStyles(t,e,i)}}function kI(n,t,e){n.has(t)?n.has(e)||n.set(e,n.get(t)):n.has(e)&&n.set(t,n.get(e))}const U8=new Ru;class N8{constructor(t,e,i){this.bodyNode=t,this._driver=e,this._normalizer=i,this._animations=new Map,this._playersById=new Map,this.players=[]}register(t,e){const i=[],o=Hg(this._driver,e,i,[]);if(i.length)throw function N5(n){return new C(3503,!1)}();this._animations.set(t,o)}_buildPlayer(t,e,i){const r=t.element,o=tI(0,this._normalizer,0,t.keyframes,e,i);return this._driver.animate(r,o,t.duration,t.delay,t.easing,[],!0)}create(t,e,i={}){const r=[],o=this._animations.get(t);let s;const a=new Map;if(o?(s=Wg(this._driver,e,o,_g,vu,new Map,new Map,i,U8,r),s.forEach(d=>{const u=un(a,d.element,new Map);d.postStyleProps.forEach(h=>u.set(h,null))})):(r.push(function P5(){return new C(3300,!1)}()),s=[]),r.length)throw function _5(n){return new C(3504,!1)}();a.forEach((d,u)=>{d.forEach((h,f)=>{d.set(f,this._driver.computeStyle(u,f,Vi))})});const c=lr(s.map(d=>{const u=a.get(d.element);return this._buildPlayer(d,new Map,u)}));return this._playersById.set(t,c),c.onDestroy(()=>this.destroy(t)),this.players.push(c),c}destroy(t){const e=this._getPlayer(t);e.destroy(),this._playersById.delete(t);const i=this.players.indexOf(e);i>=0&&this.players.splice(i,1)}_getPlayer(t){const e=this._playersById.get(t);if(!e)throw function B5(n){return new C(3301,!1)}();return e}listen(t,e,i,r){const o=Vg(e,"","","");return Og(this._getPlayer(t),i,o,r),()=>{}}command(t,e,i,r){if("register"==i)return void this.register(t,r[0]);if("create"==i)return void this.create(t,e,r[0]||{});const o=this._getPlayer(t);switch(i){case"play":o.play();break;case"pause":o.pause();break;case"reset":o.reset();break;case"restart":o.restart();break;case"finish":o.finish();break;case"init":o.init();break;case"setPosition":o.setPosition(parseFloat(r[0]));break;case"destroy":this.destroy(t)}}}const xI="ng-animate-queued",Yg="ng-animate-disabled",q8=[],DI={namespaceId:"",setForRemoval:!1,setForMove:!1,hasAnimation:!1,removedBeforeQueried:!1},K8={namespaceId:"",setForMove:!1,setForRemoval:!1,hasAnimation:!1,removedBeforeQueried:!0},In="__ng_removed";class Xg{get params(){return this.options.params}constructor(t,e=""){this.namespaceId=e;const i=t&&t.hasOwnProperty("value");if(this.value=function W8(n){return n??null}(i?t.value:t),i){const o=Il(t);delete o.value,this.options=o}else this.options={};this.options.params||(this.options.params={})}absorbOptions(t){const e=t.params;if(e){const i=this.options.params;Object.keys(e).forEach(r=>{null==i[r]&&(i[r]=e[r])})}}}const Ml="void",Zg=new Xg(Ml);class H8{constructor(t,e,i){this.id=t,this.hostElement=e,this._engine=i,this.players=[],this._triggers=new Map,this._queue=[],this._elementListeners=new Map,this._hostClassName="ng-tns-"+t,Rn(e,this._hostClassName)}listen(t,e,i,r){if(!this._triggers.has(e))throw function j5(n,t){return new C(3302,!1)}();if(null==i||0==i.length)throw function q5(n){return new C(3303,!1)}();if(!function Q8(n){return"start"==n||"done"==n}(i))throw function K5(n,t){return new C(3400,!1)}();const o=un(this._elementListeners,t,[]),s={name:e,phase:i,callback:r};o.push(s);const a=un(this._engine.statesByElement,t,new Map);return a.has(e)||(Rn(t,Au),Rn(t,Au+"-"+e),a.set(e,Zg)),()=>{this._engine.afterFlush(()=>{const l=o.indexOf(s);l>=0&&o.splice(l,1),this._triggers.has(e)||a.delete(e)})}}register(t,e){return!this._triggers.has(t)&&(this._triggers.set(t,e),!0)}_getTrigger(t){const e=this._triggers.get(t);if(!e)throw function H5(n){return new C(3401,!1)}();return e}trigger(t,e,i,r=!0){const o=this._getTrigger(e),s=new $g(this.id,e,t);let a=this._engine.statesByElement.get(t);a||(Rn(t,Au),Rn(t,Au+"-"+e),this._engine.statesByElement.set(t,a=new Map));let l=a.get(e);const c=new Xg(i,this.id);if(!(i&&i.hasOwnProperty("value"))&&l&&c.absorbOptions(l.options),a.set(e,c),l||(l=Zg),c.value!==Ml&&l.value===c.value){if(!function Y8(n,t){const e=Object.keys(n),i=Object.keys(t);if(e.length!=i.length)return!1;for(let r=0;r<e.length;r++){const o=e[r];if(!t.hasOwnProperty(o)||n[o]!==t[o])return!1}return!0}(l.params,c.params)){const g=[],A=o.matchStyles(l.value,l.params,g),k=o.matchStyles(c.value,c.params,g);g.length?this._engine.reportError(g):this._engine.afterFlush(()=>{$r(t,A),li(t,k)})}return}const h=un(this._engine.playersByElement,t,[]);h.forEach(g=>{g.namespaceId==this.id&&g.triggerName==e&&g.queued&&g.destroy()});let f=o.matchTransition(l.value,c.value,t,c.params),m=!1;if(!f){if(!r)return;f=o.fallbackTransition,m=!0}return this._engine.totalQueuedPlayers++,this._queue.push({element:t,triggerName:e,transition:f,fromState:l,toState:c,player:s,isFallbackTransition:m}),m||(Rn(t,xI),s.onStart(()=>{As(t,xI)})),s.onDone(()=>{let g=this.players.indexOf(s);g>=0&&this.players.splice(g,1);const A=this._engine.playersByElement.get(t);if(A){let k=A.indexOf(s);k>=0&&A.splice(k,1)}}),this.players.push(s),h.push(s),s}deregister(t){this._triggers.delete(t),this._engine.statesByElement.forEach(e=>e.delete(t)),this._elementListeners.forEach((e,i)=>{this._elementListeners.set(i,e.filter(r=>r.name!=t))})}clearElementCache(t){this._engine.statesByElement.delete(t),this._elementListeners.delete(t);const e=this._engine.playersByElement.get(t);e&&(e.forEach(i=>i.destroy()),this._engine.playersByElement.delete(t))}_signalRemovalForInnerTriggers(t,e){const i=this._engine.driver.query(t,Su,!0);i.forEach(r=>{if(r[In])return;const o=this._engine.fetchNamespacesByElement(r);o.size?o.forEach(s=>s.triggerLeaveAnimation(r,e,!1,!0)):this.clearElementCache(r)}),this._engine.afterFlushAnimationsDone(()=>i.forEach(r=>this.clearElementCache(r)))}triggerLeaveAnimation(t,e,i,r){const o=this._engine.statesByElement.get(t),s=new Map;if(o){const a=[];if(o.forEach((l,c)=>{if(s.set(c,l.value),this._triggers.has(c)){const d=this.trigger(t,c,Ml,r);d&&a.push(d)}}),a.length)return this._engine.markElementAsRemoved(this.id,t,!0,e,s),i&&lr(a).onDone(()=>this._engine.processLeaveNode(t)),!0}return!1}prepareLeaveAnimationListeners(t){const e=this._elementListeners.get(t),i=this._engine.statesByElement.get(t);if(e&&i){const r=new Set;e.forEach(o=>{const s=o.name;if(r.has(s))return;r.add(s);const l=this._triggers.get(s).fallbackTransition,c=i.get(s)||Zg,d=new Xg(Ml),u=new $g(this.id,s,t);this._engine.totalQueuedPlayers++,this._queue.push({element:t,triggerName:s,transition:l,fromState:c,toState:d,player:u,isFallbackTransition:!0})})}}removeNode(t,e){const i=this._engine;if(t.childElementCount&&this._signalRemovalForInnerTriggers(t,e),this.triggerLeaveAnimation(t,e,!0))return;let r=!1;if(i.totalAnimations){const o=i.players.length?i.playersByQueriedElement.get(t):[];if(o&&o.length)r=!0;else{let s=t;for(;s=s.parentNode;)if(i.statesByElement.get(s)){r=!0;break}}}if(this.prepareLeaveAnimationListeners(t),r)i.markElementAsRemoved(this.id,t,!1,e);else{const o=t[In];(!o||o===DI)&&(i.afterFlush(()=>this.clearElementCache(t)),i.destroyInnerAnimations(t),i._onRemovalComplete(t,e))}}insertNode(t,e){Rn(t,this._hostClassName)}drainQueuedTransitions(t){const e=[];return this._queue.forEach(i=>{const r=i.player;if(r.destroyed)return;const o=i.element,s=this._elementListeners.get(o);s&&s.forEach(a=>{if(a.name==i.triggerName){const l=Vg(o,i.triggerName,i.fromState.value,i.toState.value);l._data=t,Og(i.player,a.phase,l,a.callback)}}),r.markedForDestroy?this._engine.afterFlush(()=>{r.destroy()}):e.push(i)}),this._queue=[],e.sort((i,r)=>{const o=i.transition.ast.depCount,s=r.transition.ast.depCount;return 0==o||0==s?o-s:this._engine.driver.containsElement(i.element,r.element)?1:-1})}destroy(t){this.players.forEach(e=>e.destroy()),this._signalRemovalForInnerTriggers(this.hostElement,t)}elementContainsData(t){let e=!1;return this._elementListeners.has(t)&&(e=!0),e=!!this._queue.find(i=>i.element===t)||e,e}}class L8{_onRemovalComplete(t,e){this.onRemovalComplete(t,e)}constructor(t,e,i){this.bodyNode=t,this.driver=e,this._normalizer=i,this.players=[],this.newHostElements=new Map,this.playersByElement=new Map,this.playersByQueriedElement=new Map,this.statesByElement=new Map,this.disabledNodes=new Set,this.totalAnimations=0,this.totalQueuedPlayers=0,this._namespaceLookup={},this._namespaceList=[],this._flushFns=[],this._whenQuietFns=[],this.namespacesByHostElement=new Map,this.collectedEnterElements=[],this.collectedLeaveElements=[],this.onRemovalComplete=(r,o)=>{}}get queuedPlayers(){const t=[];return this._namespaceList.forEach(e=>{e.players.forEach(i=>{i.queued&&t.push(i)})}),t}createNamespace(t,e){const i=new H8(t,e,this);return this.bodyNode&&this.driver.containsElement(this.bodyNode,e)?this._balanceNamespaceList(i,e):(this.newHostElements.set(e,i),this.collectEnterElement(e)),this._namespaceLookup[t]=i}_balanceNamespaceList(t,e){const i=this._namespaceList,r=this.namespacesByHostElement;if(i.length-1>=0){let s=!1,a=this.driver.getParentElement(e);for(;a;){const l=r.get(a);if(l){const c=i.indexOf(l);i.splice(c+1,0,t),s=!0;break}a=this.driver.getParentElement(a)}s||i.unshift(t)}else i.push(t);return r.set(e,t),t}register(t,e){let i=this._namespaceLookup[t];return i||(i=this.createNamespace(t,e)),i}registerTrigger(t,e,i){let r=this._namespaceLookup[t];r&&r.register(e,i)&&this.totalAnimations++}destroy(t,e){if(!t)return;const i=this._fetchNamespace(t);this.afterFlush(()=>{this.namespacesByHostElement.delete(i.hostElement),delete this._namespaceLookup[t];const r=this._namespaceList.indexOf(i);r>=0&&this._namespaceList.splice(r,1)}),this.afterFlushAnimationsDone(()=>i.destroy(e))}_fetchNamespace(t){return this._namespaceLookup[t]}fetchNamespacesByElement(t){const e=new Set,i=this.statesByElement.get(t);if(i)for(let r of i.values())if(r.namespaceId){const o=this._fetchNamespace(r.namespaceId);o&&e.add(o)}return e}trigger(t,e,i,r){if(Ou(e)){const o=this._fetchNamespace(t);if(o)return o.trigger(e,i,r),!0}return!1}insertNode(t,e,i,r){if(!Ou(e))return;const o=e[In];if(o&&o.setForRemoval){o.setForRemoval=!1,o.setForMove=!0;const s=this.collectedLeaveElements.indexOf(e);s>=0&&this.collectedLeaveElements.splice(s,1)}if(t){const s=this._fetchNamespace(t);s&&s.insertNode(e,i)}r&&this.collectEnterElement(e)}collectEnterElement(t){this.collectedEnterElements.push(t)}markElementAsDisabled(t,e){e?this.disabledNodes.has(t)||(this.disabledNodes.add(t),Rn(t,Yg)):this.disabledNodes.has(t)&&(this.disabledNodes.delete(t),As(t,Yg))}removeNode(t,e,i,r){if(Ou(e)){const o=t?this._fetchNamespace(t):null;if(o?o.removeNode(e,r):this.markElementAsRemoved(t,e,!1,r),i){const s=this.namespacesByHostElement.get(e);s&&s.id!==t&&s.removeNode(e,r)}}else this._onRemovalComplete(e,r)}markElementAsRemoved(t,e,i,r,o){this.collectedLeaveElements.push(e),e[In]={namespaceId:t,setForRemoval:r,hasAnimation:i,removedBeforeQueried:!1,previousTriggersValues:o}}listen(t,e,i,r,o){return Ou(e)?this._fetchNamespace(t).listen(e,i,r,o):()=>{}}_buildInstruction(t,e,i,r,o){return t.transition.build(this.driver,t.element,t.fromState.value,t.toState.value,i,r,t.fromState.options,t.toState.options,e,o)}destroyInnerAnimations(t){let e=this.driver.query(t,Su,!0);e.forEach(i=>this.destroyActiveAnimationsForElement(i)),0!=this.playersByQueriedElement.size&&(e=this.driver.query(t,Bg,!0),e.forEach(i=>this.finishActiveQueriedAnimationOnElement(i)))}destroyActiveAnimationsForElement(t){const e=this.playersByElement.get(t);e&&e.forEach(i=>{i.queued?i.markedForDestroy=!0:i.destroy()})}finishActiveQueriedAnimationOnElement(t){const e=this.playersByQueriedElement.get(t);e&&e.forEach(i=>i.finish())}whenRenderingDone(){return new Promise(t=>{if(this.players.length)return lr(this.players).onDone(()=>t());t()})}processLeaveNode(t){const e=t[In];if(e&&e.setForRemoval){if(t[In]=DI,e.namespaceId){this.destroyInnerAnimations(t);const i=this._fetchNamespace(e.namespaceId);i&&i.clearElementCache(t)}this._onRemovalComplete(t,e.setForRemoval)}t.classList?.contains(Yg)&&this.markElementAsDisabled(t,!1),this.driver.query(t,".ng-animate-disabled",!0).forEach(i=>{this.markElementAsDisabled(i,!1)})}flush(t=-1){let e=[];if(this.newHostElements.size&&(this.newHostElements.forEach((i,r)=>this._balanceNamespaceList(i,r)),this.newHostElements.clear()),this.totalAnimations&&this.collectedEnterElements.length)for(let i=0;i<this.collectedEnterElements.length;i++)Rn(this.collectedEnterElements[i],"ng-star-inserted");if(this._namespaceList.length&&(this.totalQueuedPlayers||this.collectedLeaveElements.length)){const i=[];try{e=this._flushAnimations(i,t)}finally{for(let r=0;r<i.length;r++)i[r]()}}else for(let i=0;i<this.collectedLeaveElements.length;i++)this.processLeaveNode(this.collectedLeaveElements[i]);if(this.totalQueuedPlayers=0,this.collectedEnterElements.length=0,this.collectedLeaveElements.length=0,this._flushFns.forEach(i=>i()),this._flushFns=[],this._whenQuietFns.length){const i=this._whenQuietFns;this._whenQuietFns=[],e.length?lr(e).onDone(()=>{i.forEach(r=>r())}):i.forEach(r=>r())}}reportError(t){throw function L5(n){return new C(3402,!1)}()}_flushAnimations(t,e){const i=new Ru,r=[],o=new Map,s=[],a=new Map,l=new Map,c=new Map,d=new Set;this.disabledNodes.forEach(_=>{d.add(_);const L=this.driver.query(_,".ng-animate-queued",!0);for(let Z=0;Z<L.length;Z++)d.add(L[Z])});const u=this.bodyNode,h=Array.from(this.statesByElement.keys()),f=II(h,this.collectedEnterElements),m=new Map;let g=0;f.forEach((_,L)=>{const Z=_g+g++;m.set(L,Z),_.forEach(Ce=>Rn(Ce,Z))});const A=[],k=new Set,T=new Set;for(let _=0;_<this.collectedLeaveElements.length;_++){const L=this.collectedLeaveElements[_],Z=L[In];Z&&Z.setForRemoval&&(A.push(L),k.add(L),Z.hasAnimation?this.driver.query(L,".ng-star-inserted",!0).forEach(Ce=>k.add(Ce)):T.add(L))}const S=new Map,U=II(h,Array.from(k));U.forEach((_,L)=>{const Z=vu+g++;S.set(L,Z),_.forEach(Ce=>Rn(Ce,Z))}),t.push(()=>{f.forEach((_,L)=>{const Z=m.get(L);_.forEach(Ce=>As(Ce,Z))}),U.forEach((_,L)=>{const Z=S.get(L);_.forEach(Ce=>As(Ce,Z))}),A.forEach(_=>{this.processLeaveNode(_)})});const Se=[],xe=[];for(let _=this._namespaceList.length-1;_>=0;_--)this._namespaceList[_].drainQueuedTransitions(e).forEach(Z=>{const Ce=Z.player,bt=Z.element;if(Se.push(Ce),this.collectedEnterElements.length){const Ft=bt[In];if(Ft&&Ft.setForMove){if(Ft.previousTriggersValues&&Ft.previousTriggersValues.has(Z.triggerName)){const no=Ft.previousTriggersValues.get(Z.triggerName),Tn=this.statesByElement.get(Z.element);if(Tn&&Tn.has(Z.triggerName)){const Uu=Tn.get(Z.triggerName);Uu.value=no,Tn.set(Z.triggerName,Uu)}}return void Ce.destroy()}}const ci=!u||!this.driver.containsElement(u,bt),pn=S.get(bt),dr=m.get(bt),Qe=this._buildInstruction(Z,i,dr,pn,ci);if(Qe.errors&&Qe.errors.length)return void xe.push(Qe);if(ci)return Ce.onStart(()=>$r(bt,Qe.fromStyles)),Ce.onDestroy(()=>li(bt,Qe.toStyles)),void r.push(Ce);if(Z.isFallbackTransition)return Ce.onStart(()=>$r(bt,Qe.fromStyles)),Ce.onDestroy(()=>li(bt,Qe.toStyles)),void r.push(Ce);const jI=[];Qe.timelines.forEach(Ft=>{Ft.stretchStartingKeyframe=!0,this.disabledNodes.has(Ft.element)||jI.push(Ft)}),Qe.timelines=jI,i.append(bt,Qe.timelines),s.push({instruction:Qe,player:Ce,element:bt}),Qe.queriedElements.forEach(Ft=>un(a,Ft,[]).push(Ce)),Qe.preStyleProps.forEach((Ft,no)=>{if(Ft.size){let Tn=l.get(no);Tn||l.set(no,Tn=new Set),Ft.forEach((Uu,nb)=>Tn.add(nb))}}),Qe.postStyleProps.forEach((Ft,no)=>{let Tn=c.get(no);Tn||c.set(no,Tn=new Set),Ft.forEach((Uu,nb)=>Tn.add(nb))})});if(xe.length){const _=[];xe.forEach(L=>{_.push(function J5(n,t){return new C(3505,!1)}())}),Se.forEach(L=>L.destroy()),this.reportError(_)}const Ot=new Map,Ni=new Map;s.forEach(_=>{const L=_.element;i.has(L)&&(Ni.set(L,L),this._beforeAnimationBuild(_.player.namespaceId,_.instruction,Ot))}),r.forEach(_=>{const L=_.element;this._getPreviousPlayers(L,!1,_.namespaceId,_.triggerName,null).forEach(Ce=>{un(Ot,L,[]).push(Ce),Ce.destroy()})});const Pi=A.filter(_=>TI(_,l,c)),_i=new Map;EI(_i,this.driver,T,c,Vi).forEach(_=>{TI(_,l,c)&&Pi.push(_)});const Ol=new Map;f.forEach((_,L)=>{EI(Ol,this.driver,new Set(_),l,"!")}),Pi.forEach(_=>{const L=_i.get(_),Z=Ol.get(_);_i.set(_,new Map([...Array.from(L?.entries()??[]),...Array.from(Z?.entries()??[])]))});const to=[],_I=[],BI={};s.forEach(_=>{const{element:L,player:Z,instruction:Ce}=_;if(i.has(L)){if(d.has(L))return Z.onDestroy(()=>li(L,Ce.toStyles)),Z.disabled=!0,Z.overrideTotalTime(Ce.totalTime),void r.push(Z);let bt=BI;if(Ni.size>1){let pn=L;const dr=[];for(;pn=pn.parentNode;){const Qe=Ni.get(pn);if(Qe){bt=Qe;break}dr.push(pn)}dr.forEach(Qe=>Ni.set(Qe,bt))}const ci=this._buildAnimation(Z.namespaceId,Ce,Ot,o,Ol,_i);if(Z.setRealPlayer(ci),bt===BI)to.push(Z);else{const pn=this.playersByElement.get(bt);pn&&pn.length&&(Z.parentPlayer=lr(pn)),r.push(Z)}}else $r(L,Ce.fromStyles),Z.onDestroy(()=>li(L,Ce.toStyles)),_I.push(Z),d.has(L)&&r.push(Z)}),_I.forEach(_=>{const L=o.get(_.element);if(L&&L.length){const Z=lr(L);_.setRealPlayer(Z)}}),r.forEach(_=>{_.parentPlayer?_.syncPlayerEvents(_.parentPlayer):_.destroy()});for(let _=0;_<A.length;_++){const L=A[_],Z=L[In];if(As(L,vu),Z&&Z.hasAnimation)continue;let Ce=[];if(a.size){let ci=a.get(L);ci&&ci.length&&Ce.push(...ci);let pn=this.driver.query(L,Bg,!0);for(let dr=0;dr<pn.length;dr++){let Qe=a.get(pn[dr]);Qe&&Qe.length&&Ce.push(...Qe)}}const bt=Ce.filter(ci=>!ci.destroyed);bt.length?G8(this,L,bt):this.processLeaveNode(L)}return A.length=0,to.forEach(_=>{this.players.push(_),_.onDone(()=>{_.destroy();const L=this.players.indexOf(_);this.players.splice(L,1)}),_.play()}),to}elementContainsData(t,e){let i=!1;const r=e[In];return r&&r.setForRemoval&&(i=!0),this.playersByElement.has(e)&&(i=!0),this.playersByQueriedElement.has(e)&&(i=!0),this.statesByElement.has(e)&&(i=!0),this._fetchNamespace(t).elementContainsData(e)||i}afterFlush(t){this._flushFns.push(t)}afterFlushAnimationsDone(t){this._whenQuietFns.push(t)}_getPreviousPlayers(t,e,i,r,o){let s=[];if(e){const a=this.playersByQueriedElement.get(t);a&&(s=a)}else{const a=this.playersByElement.get(t);if(a){const l=!o||o==Ml;a.forEach(c=>{c.queued||!l&&c.triggerName!=r||s.push(c)})}}return(i||r)&&(s=s.filter(a=>!(i&&i!=a.namespaceId||r&&r!=a.triggerName))),s}_beforeAnimationBuild(t,e,i){const o=e.element,s=e.isRemovalTransition?void 0:t,a=e.isRemovalTransition?void 0:e.triggerName;for(const l of e.timelines){const c=l.element,d=c!==o,u=un(i,c,[]);this._getPreviousPlayers(c,d,s,a,e.toState).forEach(f=>{const m=f.getRealPlayer();m.beforeDestroy&&m.beforeDestroy(),f.destroy(),u.push(f)})}$r(o,e.fromStyles)}_buildAnimation(t,e,i,r,o,s){const a=e.triggerName,l=e.element,c=[],d=new Set,u=new Set,h=e.timelines.map(m=>{const g=m.element;d.add(g);const A=g[In];if(A&&A.removedBeforeQueried)return new nl(m.duration,m.delay);const k=g!==l,T=function z8(n){const t=[];return RI(n,t),t}((i.get(g)||q8).map(Ot=>Ot.getRealPlayer())).filter(Ot=>!!Ot.element&&Ot.element===g),S=o.get(g),U=s.get(g),Se=tI(0,this._normalizer,0,m.keyframes,S,U),xe=this._buildPlayer(m,Se,T);if(m.subTimeline&&r&&u.add(g),k){const Ot=new $g(t,a,g);Ot.setRealPlayer(xe),c.push(Ot)}return xe});c.forEach(m=>{un(this.playersByQueriedElement,m.element,[]).push(m),m.onDone(()=>function J8(n,t,e){let i=n.get(t);if(i){if(i.length){const r=i.indexOf(e);i.splice(r,1)}0==i.length&&n.delete(t)}return i}(this.playersByQueriedElement,m.element,m))}),d.forEach(m=>Rn(m,dI));const f=lr(h);return f.onDestroy(()=>{d.forEach(m=>As(m,dI)),li(l,e.toStyles)}),u.forEach(m=>{un(r,m,[]).push(f)}),f}_buildPlayer(t,e,i){return e.length>0?this.driver.animate(t.element,e,t.duration,t.delay,t.easing,i):new nl(t.duration,t.delay)}}class $g{constructor(t,e,i){this.namespaceId=t,this.triggerName=e,this.element=i,this._player=new nl,this._containsRealPlayer=!1,this._queuedCallbacks=new Map,this.destroyed=!1,this.markedForDestroy=!1,this.disabled=!1,this.queued=!0,this.totalTime=0}setRealPlayer(t){this._containsRealPlayer||(this._player=t,this._queuedCallbacks.forEach((e,i)=>{e.forEach(r=>Og(t,i,void 0,r))}),this._queuedCallbacks.clear(),this._containsRealPlayer=!0,this.overrideTotalTime(t.totalTime),this.queued=!1)}getRealPlayer(){return this._player}overrideTotalTime(t){this.totalTime=t}syncPlayerEvents(t){const e=this._player;e.triggerCallback&&t.onStart(()=>e.triggerCallback("start")),t.onDone(()=>this.finish()),t.onDestroy(()=>this.destroy())}_queueEvent(t,e){un(this._queuedCallbacks,t,[]).push(e)}onDone(t){this.queued&&this._queueEvent("done",t),this._player.onDone(t)}onStart(t){this.queued&&this._queueEvent("start",t),this._player.onStart(t)}onDestroy(t){this.queued&&this._queueEvent("destroy",t),this._player.onDestroy(t)}init(){this._player.init()}hasStarted(){return!this.queued&&this._player.hasStarted()}play(){!this.queued&&this._player.play()}pause(){!this.queued&&this._player.pause()}restart(){!this.queued&&this._player.restart()}finish(){this._player.finish()}destroy(){this.destroyed=!0,this._player.destroy()}reset(){!this.queued&&this._player.reset()}setPosition(t){this.queued||this._player.setPosition(t)}getPosition(){return this.queued?0:this._player.getPosition()}triggerCallback(t){const e=this._player;e.triggerCallback&&e.triggerCallback(t)}}function Ou(n){return n&&1===n.nodeType}function wI(n,t){const e=n.style.display;return n.style.display=t??"none",e}function EI(n,t,e,i,r){const o=[];e.forEach(l=>o.push(wI(l)));const s=[];i.forEach((l,c)=>{const d=new Map;l.forEach(u=>{const h=t.computeStyle(c,u,r);d.set(u,h),(!h||0==h.length)&&(c[In]=K8,s.push(c))}),n.set(c,d)});let a=0;return e.forEach(l=>wI(l,o[a++])),s}function II(n,t){const e=new Map;if(n.forEach(a=>e.set(a,[])),0==t.length)return e;const r=new Set(t),o=new Map;function s(a){if(!a)return 1;let l=o.get(a);if(l)return l;const c=a.parentNode;return l=e.has(c)?c:r.has(c)?1:s(c),o.set(a,l),l}return t.forEach(a=>{const l=s(a);1!==l&&e.get(l).push(a)}),e}function Rn(n,t){n.classList?.add(t)}function As(n,t){n.classList?.remove(t)}function G8(n,t,e){lr(e).onDone(()=>n.processLeaveNode(t))}function RI(n,t){for(let e=0;e<n.length;e++){const i=n[e];i instanceof ED?RI(i.players,t):t.push(i)}}function TI(n,t,e){const i=e.get(n);if(!i)return!1;let r=t.get(n);return r?i.forEach(o=>r.add(o)):t.set(n,i),e.delete(n),!0}class Fu{constructor(t,e,i){this.bodyNode=t,this._driver=e,this._normalizer=i,this._triggerCache={},this.onRemovalComplete=(r,o)=>{},this._transitionEngine=new L8(t,e,i),this._timelineEngine=new N8(t,e,i),this._transitionEngine.onRemovalComplete=(r,o)=>this.onRemovalComplete(r,o)}registerTrigger(t,e,i,r,o){const s=t+"-"+r;let a=this._triggerCache[s];if(!a){const l=[],d=Hg(this._driver,o,l,[]);if(l.length)throw function V5(n,t){return new C(3404,!1)}();a=function O8(n,t,e){return new F8(n,t,e)}(r,d,this._normalizer),this._triggerCache[s]=a}this._transitionEngine.registerTrigger(e,r,a)}register(t,e){this._transitionEngine.register(t,e)}destroy(t,e){this._transitionEngine.destroy(t,e)}onInsert(t,e,i,r){this._transitionEngine.insertNode(t,e,i,r)}onRemove(t,e,i,r){this._transitionEngine.removeNode(t,e,r||!1,i)}disableAnimations(t,e){this._transitionEngine.markElementAsDisabled(t,e)}process(t,e,i,r){if("@"==i.charAt(0)){const[o,s]=nI(i);this._timelineEngine.command(o,e,s,r)}else this._transitionEngine.trigger(t,e,i,r)}listen(t,e,i,r,o){if("@"==i.charAt(0)){const[s,a]=nI(i);return this._timelineEngine.listen(s,e,a,o)}return this._transitionEngine.listen(t,e,i,r,o)}flush(t=-1){this._transitionEngine.flush(t)}get players(){return this._transitionEngine.players.concat(this._timelineEngine.players)}whenRenderingDone(){return this._transitionEngine.whenRenderingDone()}}let Z8=(()=>{class n{constructor(e,i,r){this._element=e,this._startStyles=i,this._endStyles=r,this._state=0;let o=n.initialStylesByElement.get(e);o||n.initialStylesByElement.set(e,o=new Map),this._initialStyles=o}start(){this._state<1&&(this._startStyles&&li(this._element,this._startStyles,this._initialStyles),this._state=1)}finish(){this.start(),this._state<2&&(li(this._element,this._initialStyles),this._endStyles&&(li(this._element,this._endStyles),this._endStyles=null),this._state=1)}destroy(){this.finish(),this._state<3&&(n.initialStylesByElement.delete(this._element),this._startStyles&&($r(this._element,this._startStyles),this._endStyles=null),this._endStyles&&($r(this._element,this._endStyles),this._endStyles=null),li(this._element,this._initialStyles),this._state=3)}}return n.initialStylesByElement=new WeakMap,n})();function eb(n){let t=null;return n.forEach((e,i)=>{(function $8(n){return"display"===n||"position"===n})(i)&&(t=t||new Map,t.set(i,e))}),t}class MI{constructor(t,e,i,r){this.element=t,this.keyframes=e,this.options=i,this._specialStyles=r,this._onDoneFns=[],this._onStartFns=[],this._onDestroyFns=[],this._initialized=!1,this._finished=!1,this._started=!1,this._destroyed=!1,this._originalOnDoneFns=[],this._originalOnStartFns=[],this.time=0,this.parentPlayer=null,this.currentSnapshot=new Map,this._duration=i.duration,this._delay=i.delay||0,this.time=this._duration+this._delay}_onFinish(){this._finished||(this._finished=!0,this._onDoneFns.forEach(t=>t()),this._onDoneFns=[])}init(){this._buildPlayer(),this._preparePlayerBeforeStart()}_buildPlayer(){if(this._initialized)return;this._initialized=!0;const t=this.keyframes;this.domPlayer=this._triggerWebAnimation(this.element,t,this.options),this._finalKeyframe=t.length?t[t.length-1]:new Map,this.domPlayer.addEventListener("finish",()=>this._onFinish())}_preparePlayerBeforeStart(){this._delay?this._resetDomPlayerState():this.domPlayer.pause()}_convertKeyframesToObject(t){const e=[];return t.forEach(i=>{e.push(Object.fromEntries(i))}),e}_triggerWebAnimation(t,e,i){return t.animate(this._convertKeyframesToObject(e),i)}onStart(t){this._originalOnStartFns.push(t),this._onStartFns.push(t)}onDone(t){this._originalOnDoneFns.push(t),this._onDoneFns.push(t)}onDestroy(t){this._onDestroyFns.push(t)}play(){this._buildPlayer(),this.hasStarted()||(this._onStartFns.forEach(t=>t()),this._onStartFns=[],this._started=!0,this._specialStyles&&this._specialStyles.start()),this.domPlayer.play()}pause(){this.init(),this.domPlayer.pause()}finish(){this.init(),this._specialStyles&&this._specialStyles.finish(),this._onFinish(),this.domPlayer.finish()}reset(){this._resetDomPlayerState(),this._destroyed=!1,this._finished=!1,this._started=!1,this._onStartFns=this._originalOnStartFns,this._onDoneFns=this._originalOnDoneFns}_resetDomPlayerState(){this.domPlayer&&this.domPlayer.cancel()}restart(){this.reset(),this.play()}hasStarted(){return this._started}destroy(){this._destroyed||(this._destroyed=!0,this._resetDomPlayerState(),this._onFinish(),this._specialStyles&&this._specialStyles.destroy(),this._onDestroyFns.forEach(t=>t()),this._onDestroyFns=[])}setPosition(t){void 0===this.domPlayer&&this.init(),this.domPlayer.currentTime=t*this.time}getPosition(){return this.domPlayer.currentTime/this.time}get totalTime(){return this._delay+this._duration}beforeDestroy(){const t=new Map;this.hasStarted()&&this._finalKeyframe.forEach((i,r)=>{"offset"!==r&&t.set(r,this._finished?i:gI(this.element,r))}),this.currentSnapshot=t}triggerCallback(t){const e="start"===t?this._onStartFns:this._onDoneFns;e.forEach(i=>i()),e.length=0}}class e4{validateStyleProperty(t){return!0}validateAnimatableStyleProperty(t){return!0}matchesElement(t,e){return!1}containsElement(t,e){return sI(t,e)}getParentElement(t){return Ng(t)}query(t,e,i){return aI(t,e,i)}computeStyle(t,e,i){return window.getComputedStyle(t)[e]}animate(t,e,i,r,o,s=[]){const l={duration:i,delay:r,fill:0==r?"both":"forwards"};o&&(l.easing=o);const c=new Map,d=s.filter(f=>f instanceof MI);(function r8(n,t){return 0===n||0===t})(i,r)&&d.forEach(f=>{f.currentSnapshot.forEach((m,g)=>c.set(g,m))});let u=function e8(n){return n.length?n[0]instanceof Map?n:n.map(t=>uI(t)):[]}(e).map(f=>cr(f));u=function o8(n,t,e){if(e.size&&t.length){let i=t[0],r=[];if(e.forEach((o,s)=>{i.has(s)||r.push(s),i.set(s,o)}),r.length)for(let o=1;o<t.length;o++){let s=t[o];r.forEach(a=>s.set(a,gI(n,a)))}}return t}(t,u,c);const h=function X8(n,t){let e=null,i=null;return Array.isArray(t)&&t.length?(e=eb(t[0]),t.length>1&&(i=eb(t[t.length-1]))):t instanceof Map&&(e=eb(t)),e||i?new Z8(n,e,i):null}(t,u);return new MI(t,u,l,h)}}let t4=(()=>{class n extends CD{constructor(e,i){super(),this._nextAnimationId=0,this._renderer=e.createRenderer(i.body,{id:"0",encapsulation:Fn.None,styles:[],data:{animation:[]}})}build(e){const i=this._nextAnimationId.toString();this._nextAnimationId++;const r=Array.isArray(e)?xD(e):e;return OI(this._renderer,null,i,"register",[r]),new n4(i,this._renderer)}}return n.\u0275fac=function(e){return new(e||n)(v(Ys),v(Y))},n.\u0275prov=R({token:n,factory:n.\u0275fac}),n})();class n4 extends D3{constructor(t,e){super(),this._id=t,this._renderer=e}create(t,e){return new i4(this._id,t,e||{},this._renderer)}}class i4{constructor(t,e,i,r){this.id=t,this.element=e,this._renderer=r,this.parentPlayer=null,this._started=!1,this.totalTime=0,this._command("create",i)}_listen(t,e){return this._renderer.listen(this.element,`@@${this.id}:${t}`,e)}_command(t,...e){return OI(this._renderer,this.element,this.id,t,e)}onDone(t){this._listen("done",t)}onStart(t){this._listen("start",t)}onDestroy(t){this._listen("destroy",t)}init(){this._command("init")}hasStarted(){return this._started}play(){this._command("play"),this._started=!0}pause(){this._command("pause")}restart(){this._command("restart")}finish(){this._command("finish")}destroy(){this._command("destroy")}reset(){this._command("reset"),this._started=!1}setPosition(t){this._command("setPosition",t)}getPosition(){return this._renderer.engine.players[+this.id]?.getPosition()??0}}function OI(n,t,e,i,r){return n.setProperty(t,`@@${e}:${i}`,r)}const FI="@.disabled";let r4=(()=>{class n{constructor(e,i,r){this.delegate=e,this.engine=i,this._zone=r,this._currentId=0,this._microtaskId=1,this._animationCallbacksBuffer=[],this._rendererCache=new Map,this._cdRecurDepth=0,this.promise=Promise.resolve(0),i.onRemovalComplete=(o,s)=>{const a=s?.parentNode(o);a&&s.removeChild(a,o)}}createRenderer(e,i){const o=this.delegate.createRenderer(e,i);if(!(e&&i&&i.data&&i.data.animation)){let d=this._rendererCache.get(o);return d||(d=new VI("",o,this.engine,()=>this._rendererCache.delete(o)),this._rendererCache.set(o,d)),d}const s=i.id,a=i.id+"-"+this._currentId;this._currentId++,this.engine.register(a,e);const l=d=>{Array.isArray(d)?d.forEach(l):this.engine.registerTrigger(s,a,e,d.name,d)};return i.data.animation.forEach(l),new o4(this,a,o,this.engine)}begin(){this._cdRecurDepth++,this.delegate.begin&&this.delegate.begin()}_scheduleCountTask(){this.promise.then(()=>{this._microtaskId++})}scheduleListenerCallback(e,i,r){e>=0&&e<this._microtaskId?this._zone.run(()=>i(r)):(0==this._animationCallbacksBuffer.length&&Promise.resolve(null).then(()=>{this._zone.run(()=>{this._animationCallbacksBuffer.forEach(o=>{const[s,a]=o;s(a)}),this._animationCallbacksBuffer=[]})}),this._animationCallbacksBuffer.push([i,r]))}end(){this._cdRecurDepth--,0==this._cdRecurDepth&&this._zone.runOutsideAngular(()=>{this._scheduleCountTask(),this.engine.flush(this._microtaskId)}),this.delegate.end&&this.delegate.end()}whenRenderingDone(){return this.engine.whenRenderingDone()}}return n.\u0275fac=function(e){return new(e||n)(v(Ys),v(Fu),v(j))},n.\u0275prov=R({token:n,factory:n.\u0275fac}),n})();class VI{constructor(t,e,i,r){this.namespaceId=t,this.delegate=e,this.engine=i,this._onDestroy=r,this.destroyNode=this.delegate.destroyNode?o=>e.destroyNode(o):null}get data(){return this.delegate.data}destroy(){this.engine.destroy(this.namespaceId,this.delegate),this.delegate.destroy(),this._onDestroy?.()}createElement(t,e){return this.delegate.createElement(t,e)}createComment(t){return this.delegate.createComment(t)}createText(t){return this.delegate.createText(t)}appendChild(t,e){this.delegate.appendChild(t,e),this.engine.onInsert(this.namespaceId,e,t,!1)}insertBefore(t,e,i,r=!0){this.delegate.insertBefore(t,e,i),this.engine.onInsert(this.namespaceId,e,t,r)}removeChild(t,e,i){this.engine.onRemove(this.namespaceId,e,this.delegate,i)}selectRootElement(t,e){return this.delegate.selectRootElement(t,e)}parentNode(t){return this.delegate.parentNode(t)}nextSibling(t){return this.delegate.nextSibling(t)}setAttribute(t,e,i,r){this.delegate.setAttribute(t,e,i,r)}removeAttribute(t,e,i){this.delegate.removeAttribute(t,e,i)}addClass(t,e){this.delegate.addClass(t,e)}removeClass(t,e){this.delegate.removeClass(t,e)}setStyle(t,e,i,r){this.delegate.setStyle(t,e,i,r)}removeStyle(t,e,i){this.delegate.removeStyle(t,e,i)}setProperty(t,e,i){"@"==e.charAt(0)&&e==FI?this.disableAnimations(t,!!i):this.delegate.setProperty(t,e,i)}setValue(t,e){this.delegate.setValue(t,e)}listen(t,e,i){return this.delegate.listen(t,e,i)}disableAnimations(t,e){this.engine.disableAnimations(t,e)}}class o4 extends VI{constructor(t,e,i,r,o){super(e,i,r,o),this.factory=t,this.namespaceId=e}setProperty(t,e,i){"@"==e.charAt(0)?"."==e.charAt(1)&&e==FI?this.disableAnimations(t,i=void 0===i||!!i):this.engine.process(this.namespaceId,t,e.slice(1),i):this.delegate.setProperty(t,e,i)}listen(t,e,i){if("@"==e.charAt(0)){const r=function s4(n){switch(n){case"body":return document.body;case"document":return document;case"window":return window;default:return n}}(t);let o=e.slice(1),s="";return"@"!=o.charAt(0)&&([o,s]=function a4(n){const t=n.indexOf(".");return[n.substring(0,t),n.slice(t+1)]}(o)),this.engine.listen(this.namespaceId,r,o,s,a=>{this.factory.scheduleListenerCallback(a._data||-1,i,a)})}return this.delegate.listen(t,e,i)}}const UI=[{provide:CD,useClass:t4},{provide:Gg,useFactory:function c4(){return new I8}},{provide:Fu,useClass:(()=>{class n extends Fu{constructor(e,i,r,o){super(e.body,i,r)}ngOnDestroy(){this.flush()}}return n.\u0275fac=function(e){return new(e||n)(v(Y),v(Pg),v(Gg),v(Mr))},n.\u0275prov=R({token:n,factory:n.\u0275fac}),n})()},{provide:Ys,useFactory:function d4(n,t,e){return new r4(n,t,e)},deps:[cd,Fu,j]}],tb=[{provide:Pg,useFactory:()=>new e4},{provide:Kt,useValue:"BrowserAnimations"},...UI],NI=[{provide:Pg,useClass:lI},{provide:Kt,useValue:"NoopAnimations"},...UI];let u4=(()=>{class n{static withConfig(e){return{ngModule:n,providers:e.disableAnimations?NI:tb}}}return n.\u0275fac=function(e){return new(e||n)},n.\u0275mod=he({type:n}),n.\u0275inj=ce({providers:tb,imports:[YC]}),n})();class Ss{}Ss.\u0275fac=function(t){return new(t||Ss)},Ss.\u0275mod=he({type:Ss}),Ss.\u0275inj=ce({imports:[Ei,rl,zw,mD,Nm,OD,FD,kE,xE,IE,jE,qx,KE,GE,yE,rl,zw,mD,Nm,OD,FD,kE,xE,IE,jE,qx,KE,GE,yE]});class Cs{}Cs.\u0275fac=function(t){return new(t||Cs)},Cs.\u0275mod=he({type:Cs,bootstrap:[wl]}),Cs.\u0275inj=ce({providers:[{provide:jx,useValue:"es-MX"}],imports:[YC,vs,h5.register("ngsw-worker.js",{enabled:!0,registrationStrategy:"registerWhenStable:30000"}),u4,Ss]}),e_().bootstrapModule(Cs).catch(n=>console.error(n))}},ye=>{ye(ye.s=677)}]);